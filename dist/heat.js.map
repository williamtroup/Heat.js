{"version":3,"sources":["../src/ts/constant.ts","../src/ts/is.ts","../src/ts/data.ts","../src/ts/dom.ts","../src/ts/datetime.ts","../src/heat.ts"],"names":["Constants","Is","Data","String","result","DomElement","DateTime","render","JSON"],"mappings":"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","sourcesContent":["/**\n * Heat.js\n * \n * A lightweight JavaScript library that generates customizable heat maps, charts, and statistics to visualize date-based activity and trends.\n * \n * @file        constant.ts\n * @version     v4.0.4\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nexport namespace Constants {\n    export const HEAT_JS_ATTRIBUTE_NAME = \"data-heat-js\";\n}","/**\n * Heat.js\n * \n * A lightweight JavaScript library that generates customizable heat maps, charts, and statistics to visualize date-based activity and trends.\n * \n * @file        is.ts\n * @version     v4.0.4\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nimport { Char } from \"./enum\";\n\n\nexport namespace Is {\n    export function defined( value: any ) : boolean {\n        return value !== null && value !== undefined && value.toString() !== Char.empty;\n    }\n\n    export function definedObject( object: any ) : boolean {\n        return defined( object ) && typeof object === \"object\";\n    }\n\n    export function definedBoolean( object: any ) : boolean {\n        return defined( object ) && typeof object === \"boolean\";\n    }\n\n    export function definedString( object: any ) : boolean {\n        return defined( object ) && typeof object === \"string\";\n    }\n\n    export function definedFunction( object: any ) : boolean {\n        return defined( object ) && typeof object === \"function\";\n    }\n\n    export function definedNumber( object: any ) : boolean {\n        return defined( object ) && typeof object === \"number\";\n    }\n\n    export function definedArray( object: any ) : boolean {\n        return definedObject( object ) && object instanceof Array;\n    }\n\n    export function definedDate( object: any ) : boolean {\n        return definedObject( object ) && object instanceof Date;\n    }\n\n    export function invalidOptionArray( array: any, minimumLength: number = 1 ) : boolean {\n        return !definedArray( array ) || array.length < minimumLength;\n    }\n}","/**\n * Heat.js\n * \n * A lightweight JavaScript library that generates customizable heat maps, charts, and statistics to visualize date-based activity and trends.\n * \n * @file        data.ts\n * @version     v4.0.4\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nimport { Char } from \"./enum\";\nimport { Is } from \"./is\";\n\n\nexport namespace Data {\n    export namespace String {\n        export function newGuid() : string {\n            const result: string[] = [];\n    \n            for ( let charIndex: number = 0; charIndex < 32; charIndex++ ) {\n                if ( charIndex === 8 || charIndex === 12 || charIndex === 16 || charIndex === 20 ) {\n                    result.push( Char.dash );\n                }\n    \n                const character: string = Math.floor( Math.random() * 16 ).toString( 16 );\n                result.push( character );\n            }\n    \n            return result.join( Char.empty );\n        }\n    \n        export function padNumber( number: number ) : string {\n            const numberString: string = number.toString();\n    \n            return numberString.length === 1 ? Char.zero + numberString : numberString;\n        }\n    \n        export function startsWithAnyCase( data: string, start: string ) : boolean {\n            return data.substring( 0, start.length ).toLowerCase() === start.toLowerCase();\n        }\n    }\n\n    export function getDefaultAnyString( value: any, defaultValue: string ) : string {\n        return typeof value === \"string\" ? value : defaultValue;\n    }\n\n    export function getDefaultString( value: any, defaultValue: string ) : string {\n        return Is.definedString( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultBoolean( value: any, defaultValue: boolean ) : boolean {\n        return Is.definedBoolean( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultNumber( value: any, defaultValue: number ) : number {\n        return Is.definedNumber( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultFunction( value: any, defaultValue: object ) : any {\n        return Is.definedFunction( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultArray( value: any, defaultValue: any[] ) : any[] {\n        return Is.definedArray( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultObject( value: any, defaultValue: object ) : any {\n        return Is.definedObject( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultStringOrArray( value: any, defaultValue: any[] ) : any[] {\n        let result: any[] = defaultValue;\n\n        if ( Is.definedString( value ) ) {\n            const values: string[] = value.toString().split( Char.space );\n\n            if ( values.length === 0 ) {\n                value = defaultValue;\n            } else {\n                result = values;\n            }\n\n        } else {\n            result = getDefaultArray( value, defaultValue );\n        }\n\n        return result;\n    }\n}","/**\n * Heat.js\n * \n * A lightweight JavaScript library that generates customizable heat maps, charts, and statistics to visualize date-based activity and trends.\n * \n * @file        dom.ts\n * @version     v4.0.4\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nimport { Char } from \"./enum\";\nimport { Is } from \"./is\";\nimport { type Position } from \"./type\";\n\n\nexport namespace DomElement {\n    export function createWithNoContainer( type: string ) : HTMLElement {\n        const nodeType: string = type.toLowerCase();\n        const isText: boolean = nodeType === \"text\";\n\n        let result: any = isText ? document.createTextNode( Char.empty ) : document.createElement( nodeType );\n\n        return result;\n    }\n\n    export function create( container: HTMLElement, type: string, className: string = Char.empty, beforeNode: HTMLElement = null! ) : HTMLElement {\n        const nodeType: string = type.toLowerCase();\n        const isText: boolean = nodeType === \"text\";\n\n        let result: any = isText ? document.createTextNode( Char.empty ) : document.createElement( nodeType );\n\n        if ( Is.defined( className ) ) {\n            result.className = className;\n        }\n\n        if ( Is.defined( beforeNode ) ) {\n            container.insertBefore( result, beforeNode );\n        } else {\n            container.appendChild( result );\n        }\n\n        return result;\n    }\n\n    export function createWithHTML( container: HTMLElement, type: string, className: string, html: string, beforeNode: HTMLElement = null! ) : HTMLElement {\n        const element: HTMLElement = create( container, type, className, beforeNode );\n        element.innerHTML = html;\n\n        return element;\n    }\n\n    export function getStyleValueByName( element: any, stylePropertyName: string, toNumber: boolean = false ) : any {\n        let value: any = null;\n        \n        if ( document.defaultView!.getComputedStyle! ) {\n            value = document.defaultView!.getComputedStyle( element, null ).getPropertyValue( stylePropertyName ); \n        } else if ( element.currentStyle ) {\n            value = element.currentStyle[ stylePropertyName ];\n        }   \n        \n        if ( toNumber ) {\n            value = parseFloat( value );\n        }\n\n        return value;\n    }\n\n    export function addClass( element: HTMLElement, className: string ) {\n        element.className += Char.space + className;\n        element.className = element.className.trim();\n    }\n\n    export function removeClass( element: HTMLElement, className: string ) {\n        element.className = element.className.replace( className, Char.empty );\n        element.className = element.className.trim();\n    }\n\n    export function cancelBubble( e: Event ) {\n        e.preventDefault();\n        e.cancelBubble = true;\n    }\n\n    export function getScrollPosition() : Position {\n        const documentElement: HTMLElement = document.documentElement;\n\n        const result: Position = {\n            left: documentElement.scrollLeft  - ( documentElement.clientLeft || 0 ),\n            top: documentElement.scrollTop - ( documentElement.clientTop || 0 )\n        } as Position;\n\n        return result;\n    }\n\n    export function showElementAtMousePosition( e: any, element: HTMLElement ) {\n        let left: number = e.pageX;\n        let top: number = e.pageY;\n        const scrollPosition: Position = getScrollPosition();\n\n        element.style.display = \"block\";\n\n        if ( left + element.offsetWidth > window.innerWidth ) {\n            left -= element.offsetWidth;\n        } else {\n            left++;\n        }\n\n        if ( top + element.offsetHeight > window.innerHeight ) {\n            top -= element.offsetHeight;\n        } else {\n            top++;\n        }\n\n        if ( left < scrollPosition.left ) {\n            left = e.pageX + 1;\n        }\n\n        if ( top < scrollPosition.top ) {\n            top = e.pageY + 1;\n        }\n        \n        element.style.left = left + \"px\";\n        element.style.top = top + \"px\";\n    }\n\n    export function reverseChildrenOrder( parent: HTMLElement ) {\n        const children: HTMLCollection = parent.children;\n        let childrenLength: number = children.length - 1;\n\n        for ( ; childrenLength--; ) {\n            parent.appendChild( children[ childrenLength ] );\n        }\n    }\n\n    export function createCheckBox( container: HTMLElement, labelText: string ) : HTMLInputElement {\n        const lineContainer: HTMLElement = create( container, \"div\" );\n        const label: HTMLElement = create( lineContainer, \"label\", \"checkbox\" );\n        const input: HTMLInputElement = create( label, \"input\" ) as HTMLInputElement;\n\n        input.type = \"checkbox\";\n\n        create( label, \"span\", \"check-mark\" );\n        createWithHTML( label, \"span\", \"text\", labelText );\n        \n        return input;\n    }\n}","/**\n * Heat.js\n * \n * A lightweight JavaScript library that generates customizable heat maps, charts, and statistics to visualize date-based activity and trends.\n * \n * @file        datetime.ts\n * @version     v4.0.4\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nimport { Data } from \"./data\";\nimport { Configuration } from \"./type\";\n\n\nexport namespace DateTime {\n    export function getTotalDaysInMonth( year: number, month: number ) : number {\n        return new Date( year, month + 1, 0 ).getDate();\n    }\n\n    export function getWeekdayNumber( date: Date ) : number {\n        return date.getDay() - 1 < 0 ? 6 : date.getDay() - 1;\n    }\n\n    export function getDayOrdinal( configuration: Configuration, value: number ) : string {\n        let result: string = configuration.thText!;\n\n        if ( value === 31 || value === 21 || value === 1 ) {\n            result = configuration.stText!;\n        } else if ( value === 22 || value === 2 ) {\n            result = configuration.ndText!;\n        } else if ( value === 23 || value === 3 ) {\n            result = configuration.rdText!;\n        }\n\n        return result;\n    }\n\n    export function getCustomFormattedDateText( configuration: Configuration, dateFormat: string, date: Date ) : string {\n        let result: string = dateFormat;\n        const weekDayNumber: number = getWeekdayNumber( date );\n\n        result = result.replace( \"{dddd}\", configuration.dayNames![ weekDayNumber ] );\n        result = result.replace( \"{dd}\", Data.String.padNumber( date.getDate() ) );\n        result = result.replace( \"{d}\", date.getDate().toString() );\n\n        result = result.replace( \"{o}\", getDayOrdinal( configuration, date.getDate() ) );\n\n        result = result.replace( \"{mmmm}\", configuration.monthNames![ date.getMonth() ] );\n        result = result.replace( \"{mm}\", Data.String.padNumber( date.getMonth() + 1 ) );\n        result = result.replace( \"{m}\", ( date.getMonth() + 1 ).toString() );\n\n        result = result.replace( \"{yyyy}\", date.getFullYear().toString() );\n        result = result.replace( \"{yyy}\", date.getFullYear().toString().substring( 1 ) );\n        result = result.replace( \"{yy}\", date.getFullYear().toString().substring( 2 ) );\n        result = result.replace( \"{y}\", parseInt( date.getFullYear().toString().substring( 2 ) ).toString() );\n\n        return result;\n    }\n}","/**\n * Heat.js\n * \n * A lightweight JavaScript library that generates customizable heat maps, charts, and statistics to visualize date-based activity and trends.\n * \n * @file        heat.ts\n * @version     v4.0.4\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nimport {\n    type Configuration,\n    type Holiday,\n    type ColorRange,\n    type BindingOptions,\n    type BindingOptionsCurrentView,\n    type Title,\n    type Description,\n    type Guide,\n    type Tooltip,\n    type Map, \n    type Chart,\n    type Days,\n    type Statistics,\n    type Events,\n    type TypeCountsData,\n    type DateCounts } from \"./ts/type\";\n\nimport { ExportType, Char, Value, ViewId, ViewName } from \"./ts/enum\";\nimport { Constants } from \"./ts/constant\"\nimport { Is } from \"./ts/is\"\nimport { Data } from \"./ts/data\"\nimport { DomElement } from \"./ts/dom\"\nimport { DateTime } from \"./ts/datetime\"\nimport { type PublicApi } from \"./ts/api\";\n\n\ntype IsHoliday = {\n    matched: boolean;\n    name: string;\n};\n\ntype StringToJson = {\n    parsed: boolean;\n    object: any;\n};\n\ntype LargestValueForDays = {\n    days: Record<number, number>;\n    largestValue: number;\n};\n\ntype LargestValuesForEachRangeType = {\n    types: TypeCountsData;\n    largestValue: number;\n};\n\n\n( () => {\n    // Variables: Configuration\n    let _configuration: Configuration = {} as Configuration;\n\n    // Variables: Elements\n    let _elements_Day_Width: number = 0;\n\n    // Variables: Date Counts\n    let _elements_DateCounts: DateCounts = {} as DateCounts;\n\n    // Variables: Internal Names\n    const _internal_Name_Holiday: string = \"HOLIDAY\";\n\n    // Variables: Local Storage\n    const _local_Storage_Start_ID: string = \"HJS_\";\n\n    // Variables: Defaults\n    const _default_MonthsToShow: number[] = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 ];\n    const _default_DaysToShow: number[] = [ 1, 2, 3, 4, 5, 6, 7 ];\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Render:  Disabled Background\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function renderDisabledBackground( bindingOptions: BindingOptions ) : void {\n        bindingOptions._currentView.disabledBackground = DomElement.create( bindingOptions._currentView.element, \"div\", \"disabled\" );\n    }\n\n    function showDisabledBackground( bindingOptions: BindingOptions ) : void {\n        if ( Is.defined( bindingOptions._currentView.disabledBackground ) && bindingOptions._currentView.disabledBackground.style.display !== \"block\" ) {\n            bindingOptions._currentView.disabledBackground.style.display = \"block\";\n        }\n    }\n\n    function hideDisabledBackground( bindingOptions: BindingOptions ) : void {\n        if ( Is.defined( bindingOptions._currentView.disabledBackground ) && bindingOptions._currentView.disabledBackground.style.display !== \"none\" ) {\n            bindingOptions._currentView.disabledBackground.style.display = \"none\";\n        }\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Render\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function render() : void {\n        const tagTypes: string[] = _configuration.domElementTypes as string[];\n        const tagTypesLength: number = tagTypes.length;\n\n        for ( let tagTypeIndex: number = 0; tagTypeIndex < tagTypesLength; tagTypeIndex++ ) {\n            const domElements: HTMLCollectionOf<Element> = document.getElementsByTagName( tagTypes[ tagTypeIndex ] );\n            const elements: HTMLElement[] = [].slice.call( domElements );\n            const elementsLength: number = elements.length;\n\n            for ( let elementIndex: number = 0; elementIndex < elementsLength; elementIndex++ ) {\n                if ( !renderElement( elements[ elementIndex ] ) ) {\n                    break;\n                }\n            }\n        }\n    }\n\n    function renderElement( element: HTMLElement ) : boolean {\n        let result: boolean = true;\n\n        if ( Is.defined( element ) && element.hasAttribute( Constants.HEAT_JS_ATTRIBUTE_NAME ) ) {\n            const bindingOptionsData: string = element.getAttribute( Constants.HEAT_JS_ATTRIBUTE_NAME )!;\n\n            if ( Is.definedString( bindingOptionsData ) ) {\n                const bindingOptions: StringToJson = getObjectFromString( bindingOptionsData );\n\n                if ( bindingOptions.parsed && Is.definedObject( bindingOptions.object ) ) {\n                    renderControl( renderBindingOptions( bindingOptions.object, element ) );\n\n                } else {\n                    if ( !_configuration.safeMode ) {\n                        console.error( _configuration.attributeNotValidErrorText!.replace( \"{{attribute_name}}\", Constants.HEAT_JS_ATTRIBUTE_NAME ) );\n                        result = false;\n                    }\n                }\n\n            } else {\n                if ( !_configuration.safeMode ) {\n                    console.error( _configuration.attributeNotSetErrorText!.replace( \"{{attribute_name}}\", Constants.HEAT_JS_ATTRIBUTE_NAME ) );\n                    result = false;\n                }\n            }\n        }\n\n        return result;\n    }\n\n    function renderBindingOptions( data: any, element: HTMLElement ) : BindingOptions {\n        const bindingOptions: BindingOptions = buildAttributeOptions( data );\n        const view: string = Data.getDefaultString( bindingOptions.view, Char.empty ).toLowerCase();\n\n        let currentView: BindingOptionsCurrentView = {} as BindingOptionsCurrentView;\n        currentView.element = element;\n        currentView.disabledBackground = null!;\n        currentView.configurationDialog = null!;\n        currentView.dayCheckBoxes = [];\n        currentView.monthCheckBoxes = [];\n        currentView.tooltip = null!;\n        currentView.tooltipTimer = 0;\n        currentView.mapContents = null!;\n        currentView.mapContentsScrollLeft = 0;\n        currentView.year = bindingOptions.year!;\n        currentView.type = _configuration.unknownTrendText!;\n        currentView.isInFetchMode = Is.definedFunction( bindingOptions.events!.onDataFetch );\n        currentView.isInFetchModeTimer = 0;\n        currentView.yearsAvailable = [];\n\n        if ( bindingOptions.views!.chart!.enabled ) {\n            currentView.chartContents = null!;\n            currentView.chartContentsScrollLeft = 0;\n        }\n\n        if ( bindingOptions.views!.days!.enabled ) {\n            currentView.daysContents = null!;\n            currentView.daysContentsScrollLeft = 0;\n        }\n        \n        if ( bindingOptions.views!.statistics!.enabled ) {\n            currentView.statisticsContents = null!;\n            currentView.statisticsContentsScrollLeft = 0;\n        }\n\n        if ( view === ViewName.map ) {\n            currentView.view = ViewId.map;\n        } else if ( view === ViewName.chart ) {\n            currentView.view = ViewId.chart;\n        } else if ( view === ViewName.days ) {\n            currentView.view = ViewId.days;\n        } else if ( view === ViewName.statistics ) {\n            currentView.view = ViewId.statistics;\n        } else {\n            currentView.view = ViewId.map;\n        }\n\n        bindingOptions._currentView = currentView;\n\n        return bindingOptions;\n    }\n\n    function renderControl( bindingOptions: BindingOptions ) : void {\n        fireCustomTriggerEvent( bindingOptions.events!.onBeforeRender!, bindingOptions._currentView.element );\n\n        if ( !Is.definedString( bindingOptions._currentView.element.id ) ) {\n            bindingOptions._currentView.element.id = Data.String.newGuid();\n        }\n\n        if ( bindingOptions._currentView.element.className.trim() === Char.empty ) {\n            bindingOptions._currentView.element.className = \"heat-js\";\n        } else {\n            DomElement.addClass( bindingOptions._currentView.element, \"heat-js\" );\n        }\n\n        bindingOptions._currentView.element.removeAttribute( Constants.HEAT_JS_ATTRIBUTE_NAME );\n\n        createDateStorageForElement( bindingOptions._currentView.element.id, bindingOptions );\n        renderControlContainer( bindingOptions );\n        fireCustomTriggerEvent( bindingOptions.events!.onRenderComplete!, bindingOptions._currentView.element );\n    }\n\n    function renderControlContainer( bindingOptions: BindingOptions, isForDataRefresh: boolean = false, isForViewSwitch: boolean = false ) : void {\n        if ( isForDataRefresh ) {\n            storeDataInLocalStorage( bindingOptions );\n        }\n\n        if ( Is.defined( bindingOptions._currentView.mapContents ) ) {\n            bindingOptions._currentView.mapContentsScrollLeft = bindingOptions._currentView.mapContents.scrollLeft;\n        }\n\n        if ( bindingOptions.views!.chart!.enabled && Is.defined( bindingOptions._currentView.chartContents ) ) {\n            bindingOptions._currentView.chartContentsScrollLeft = bindingOptions._currentView.chartContents.scrollLeft;\n        }\n\n        if ( bindingOptions.views!.days!.enabled && Is.defined( bindingOptions._currentView.daysContents ) ) {\n            bindingOptions._currentView.daysContentsScrollLeft = bindingOptions._currentView.daysContents.scrollLeft;\n        }\n\n        if ( bindingOptions.views!.statistics!.enabled && Is.defined( bindingOptions._currentView.statisticsContents ) ) {\n            bindingOptions._currentView.statisticsContentsScrollLeft = bindingOptions._currentView.statisticsContents.scrollLeft;\n        }\n        \n        bindingOptions._currentView.element.innerHTML = Char.empty;\n        bindingOptions._currentView.yearsAvailable = getYearsAvailableInData( bindingOptions );\n        \n        hideToolTip( bindingOptions );\n\n        startDataPullTimer( bindingOptions );\n\n        if ( bindingOptions.title!.showConfigurationButton ) {\n            renderDisabledBackground( bindingOptions );\n            renderConfigurationDialog( bindingOptions );\n        }\n\n        renderControlToolTip( bindingOptions );\n        renderControlTitleBar( bindingOptions );\n        renderControlMap( bindingOptions, isForViewSwitch );\n\n        if ( bindingOptions.views!.chart!.enabled ) {\n            renderControlChart( bindingOptions, isForViewSwitch );\n\n            bindingOptions._currentView.chartContents.style.display = \"none\";\n        }\n\n        if ( bindingOptions.views!.days!.enabled ) {\n            renderControlDays( bindingOptions, isForViewSwitch );\n\n            bindingOptions._currentView.daysContents.style.display = \"none\";\n        }\n\n        if ( bindingOptions.views!.statistics!.enabled ) {\n            renderControlStatistics( bindingOptions, isForViewSwitch );\n\n            bindingOptions._currentView.statisticsContents.style.display = \"none\";\n        }\n\n        bindingOptions._currentView.mapContents.style.display = \"none\";\n\n        if ( bindingOptions._currentView.view === ViewId.map ) {\n            bindingOptions._currentView.mapContents.style.display = \"block\";\n        } else if ( bindingOptions.views!.chart!.enabled && bindingOptions._currentView.view === ViewId.chart ) {\n            bindingOptions._currentView.chartContents.style.display = \"block\";\n        } else if ( bindingOptions.views!.days!.enabled && bindingOptions._currentView.view === ViewId.days ) {\n            bindingOptions._currentView.daysContents.style.display = \"block\";\n        } else if ( bindingOptions.views!.statistics!.enabled && bindingOptions._currentView.view === ViewId.statistics ) {\n            bindingOptions._currentView.statisticsContents.style.display = \"block\";\n        } else {\n            bindingOptions._currentView.view = ViewId.map;\n            bindingOptions._currentView.mapContents.style.display = \"block\";\n        }\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Render:  Configuration Dialog\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function renderConfigurationDialog( bindingOptions: BindingOptions ) : void {\n        bindingOptions._currentView.configurationDialog = DomElement.create( bindingOptions._currentView.disabledBackground, \"div\", \"dialog configuration\" );\n\n        const titleBar: HTMLElement = DomElement.create( bindingOptions._currentView.configurationDialog, \"div\", \"dialog-title-bar\" );\n        const contents: HTMLElement = DomElement.create( bindingOptions._currentView.configurationDialog, \"div\", \"dialog-contents\" );\n        const closeButton: HTMLElement = DomElement.create( titleBar, \"div\", \"dialog-close\" );\n        const daysContainer: HTMLElement = DomElement.create( contents, \"div\", \"side-container panel\" );\n        const monthsContainer: HTMLElement = DomElement.create( contents, \"div\", \"side-container panel\" );\n\n        DomElement.createWithHTML( titleBar, \"span\", \"dialog-title-bar-text\", _configuration.configurationTitleText! );\n        DomElement.createWithHTML( daysContainer, \"div\", \"side-container-title-text\", _configuration.visibleDaysText + Char.colon );\n        DomElement.createWithHTML( monthsContainer, \"div\", \"side-container-title-text\", _configuration.visibleMonthsText + Char.colon );\n\n        const months1Container: HTMLElement = DomElement.create( monthsContainer, \"div\", \"side-container\" );\n        const months2Container: HTMLElement = DomElement.create( monthsContainer, \"div\", \"side-container\" );\n\n        closeButton.onclick = () => {\n            hideConfigurationDialog( bindingOptions );\n        };\n\n        for ( let dayIndex: number = 0; dayIndex < 7; dayIndex++ ) {\n            bindingOptions._currentView.dayCheckBoxes[ dayIndex ] = DomElement.createCheckBox( daysContainer, _configuration.dayNames![ dayIndex ] );\n        }\n\n        for ( let monthIndex1: number = 0; monthIndex1 < 7; monthIndex1++ ) {\n            bindingOptions._currentView.monthCheckBoxes[ monthIndex1 ] = DomElement.createCheckBox( months1Container, _configuration.monthNames![ monthIndex1 ] );\n        }\n\n        for ( let monthIndex2: number = 7; monthIndex2 < 12; monthIndex2++ ) {\n            bindingOptions._currentView.monthCheckBoxes[ monthIndex2 ] = DomElement.createCheckBox( months2Container, _configuration.monthNames![ monthIndex2 ] );\n        }\n\n        addToolTip( closeButton, bindingOptions, _configuration.closeToolTipText! );\n    }\n\n    function showConfigurationDialog( bindingOptions: BindingOptions ) : void {\n        showDisabledBackground( bindingOptions );\n\n        if ( Is.defined( bindingOptions._currentView.configurationDialog ) && bindingOptions._currentView.configurationDialog.style.display !== \"block\" ) {\n            bindingOptions._currentView.configurationDialog.style.display = \"block\";\n        }\n\n        let daysToShow: number[] = [];\n        let monthsToShow: number[] = [];\n\n        if ( bindingOptions._currentView.view === ViewId.map ) {\n            daysToShow = bindingOptions.views!.map!.daysToShow!;\n            monthsToShow = bindingOptions.views!.map!.monthsToShow!;\n        } else if ( bindingOptions.views!.chart!.enabled && bindingOptions._currentView.view === ViewId.chart ) {\n            daysToShow = bindingOptions.views!.chart!.daysToShow!;\n            monthsToShow = bindingOptions.views!.chart!.monthsToShow!;\n        } else if ( bindingOptions.views!.days!.enabled && bindingOptions._currentView.view === ViewId.days ) {\n            daysToShow = bindingOptions.views!.days!.daysToShow!;\n            monthsToShow = bindingOptions.views!.days!.monthsToShow!;\n        } else if ( bindingOptions.views!.statistics!.enabled && bindingOptions._currentView.view === ViewId.statistics ) {\n            daysToShow = bindingOptions.views!.statistics!.daysToShow!;\n            monthsToShow = bindingOptions.views!.statistics!.monthsToShow!;\n        } else {\n            daysToShow = bindingOptions.views!.map!.daysToShow!;\n            monthsToShow = bindingOptions.views!.map!.monthsToShow!;\n        }\n\n        for ( let dayIndex: number = 0; dayIndex < 7; dayIndex++ ) {\n            bindingOptions._currentView.dayCheckBoxes[ dayIndex ].checked = isDayVisible( daysToShow, dayIndex + 1 );\n        }\n\n        for ( let monthIndex: number = 0; monthIndex < 12; monthIndex++ ) {\n            bindingOptions._currentView.monthCheckBoxes[ monthIndex ].checked = isMonthVisible( monthsToShow, monthIndex );\n        }\n\n        hideToolTip( bindingOptions );\n    }\n\n    function hideConfigurationDialog( bindingOptions: BindingOptions ) : void {\n        hideDisabledBackground( bindingOptions );\n\n        if ( Is.defined( bindingOptions._currentView.configurationDialog ) && bindingOptions._currentView.configurationDialog.style.display !== \"none\" ) {\n            bindingOptions._currentView.configurationDialog.style.display = \"none\";\n        }\n\n        const daysChecked: number[] = [];\n        const monthsChecked: number[] = [];\n        let render: boolean = false;\n\n        for ( let dayIndex: number = 0; dayIndex < 7; dayIndex++ ) {\n            if ( bindingOptions._currentView.dayCheckBoxes[ dayIndex ].checked ) {\n                daysChecked.push( dayIndex + 1 );\n            }\n        }\n\n        for ( let monthIndex: number = 0; monthIndex < 12; monthIndex++ ) {\n            if ( bindingOptions._currentView.monthCheckBoxes[ monthIndex ].checked ) {\n                monthsChecked.push( monthIndex + 1 );\n            }\n        }\n\n        if ( daysChecked.length >= 1 ) {\n            if ( bindingOptions._currentView.view === ViewId.map ) {\n                bindingOptions.views!.map!.daysToShow = daysChecked;\n            } else if ( bindingOptions.views!.chart!.enabled && bindingOptions._currentView.view === ViewId.chart ) {\n                bindingOptions.views!.chart!.daysToShow = daysChecked;\n            } else if ( bindingOptions.views!.days!.enabled && bindingOptions._currentView.view === ViewId.days ) {\n                bindingOptions.views!.days!.daysToShow! = daysChecked;\n            } else if ( bindingOptions.views!.statistics!.enabled && bindingOptions._currentView.view === ViewId.statistics ) {\n                bindingOptions.views!.statistics!.daysToShow = daysChecked;\n            } else {\n                bindingOptions.views!.map!.daysToShow = daysChecked;\n            }\n\n            render = true;\n        }\n\n        if ( monthsChecked.length >= 1 ) {\n            if ( bindingOptions._currentView.view === ViewId.map ) {\n                bindingOptions.views!.map!.monthsToShow = monthsChecked;\n            } else if ( bindingOptions.views!.chart!.enabled && bindingOptions._currentView.view === ViewId.chart ) {\n                bindingOptions.views!.chart!.monthsToShow = monthsChecked;\n            } else if ( bindingOptions.views!.days!.enabled && bindingOptions._currentView.view === ViewId.days ) {\n                bindingOptions.views!.days!.monthsToShow = monthsChecked;\n            } else if ( bindingOptions.views!.statistics!.enabled && bindingOptions._currentView.view === ViewId.statistics ) {\n                bindingOptions.views!.statistics!.monthsToShow = monthsChecked;\n            } else {\n                bindingOptions.views!.map!.monthsToShow = monthsChecked;\n            }\n\n            render = true;\n        }\n\n        if ( render ) {\n            renderControlContainer( bindingOptions );\n            fireCustomTriggerEvent( bindingOptions.events!.onOptionsUpdate!, bindingOptions._currentView.element, bindingOptions );\n            \n        } else {\n            hideToolTip( bindingOptions );\n        }\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Render:  ToolTip\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function renderControlToolTip( bindingOptions: BindingOptions ) : void {\n        if ( !Is.defined( bindingOptions._currentView.tooltip ) ) {\n            bindingOptions._currentView.tooltip = DomElement.create( document.body, \"div\", \"heat-js-tooltip\" );\n            bindingOptions._currentView.tooltip.style.display = \"none\";\n    \n            assignToolTipEvents( bindingOptions );\n        }\n    }\n\n    function assignToolTipEvents( bindingOptions: BindingOptions, add: boolean = true ) : void {\n        let addEventListener_Window: Function = add ? window.addEventListener : window.removeEventListener;\n        let addEventListener_Document: Function = add ? document.addEventListener : document.removeEventListener;\n\n        addEventListener_Window( \"mousemove\", () => {\n            hideToolTip( bindingOptions );\n        } );\n\n        addEventListener_Document( \"scroll\", () => {\n            hideToolTip( bindingOptions );\n        } );\n    }\n\n    function addToolTip( element: HTMLElement, bindingOptions: BindingOptions, text: string ) : void {\n        if ( element !== null ) {\n            element.onmousemove = ( e: MouseEvent ) => {\n                showToolTip( e, bindingOptions, text );\n            };\n        }\n    }\n\n    function showToolTip( e: MouseEvent, bindingOptions: BindingOptions, text: string ) : void {\n        DomElement.cancelBubble( e );\n        hideToolTip( bindingOptions );\n\n        bindingOptions._currentView.tooltipTimer = setTimeout( () => {\n            bindingOptions._currentView.tooltip.innerHTML = text;\n            bindingOptions._currentView.tooltip.style.display = \"block\";\n\n            DomElement.showElementAtMousePosition( e, bindingOptions._currentView.tooltip );\n        }, bindingOptions.tooltip!.delay );\n    }\n\n    function hideToolTip( bindingOptions: BindingOptions ) : void {\n        if ( Is.defined( bindingOptions._currentView.tooltip ) ) {\n            if ( bindingOptions._currentView.tooltipTimer !== 0 ) {\n                clearTimeout( bindingOptions._currentView.tooltipTimer );\n                bindingOptions._currentView.tooltipTimer = 0;\n            }\n    \n            if ( bindingOptions._currentView.tooltip.style.display !== \"none\" ) {\n                bindingOptions._currentView.tooltip.style.display = \"none\";\n            }\n        }\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Render:  Title Bar\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function renderControlTitleBar( bindingOptions: BindingOptions ) : void {\n        if ( bindingOptions.title!.showText || bindingOptions.title!.showYearSelector || bindingOptions.title!.showRefreshButton || bindingOptions.title!.showExportButton || bindingOptions.title!.showImportButton ) {\n            const titleBar: HTMLElement = DomElement.create( bindingOptions._currentView.element, \"div\", \"title-bar\" );\n            const title: HTMLElement = DomElement.create( titleBar, \"div\", \"title\" );\n\n            if ( bindingOptions.views!.chart!.enabled || bindingOptions.views!.days!.enabled || bindingOptions.views!.statistics!.enabled ) {\n                if ( bindingOptions.title!.showTitleDropDownButton ) {\n                    DomElement.create( title, \"div\", \"down-arrow\" );\n                }\n                \n            } else {\n                DomElement.addClass( title, \"no-click\" );\n            }\n\n            if ( bindingOptions.title!.showText ) {\n                title.innerHTML += bindingOptions.title!.text;\n            }\n\n            if ( bindingOptions.views!.chart!.enabled || bindingOptions.views!.days!.enabled || bindingOptions.views!.statistics!.enabled ) {\n                renderTitleDropDownMenu( bindingOptions, title );\n            }\n\n            if ( bindingOptions.title!.showImportButton && !bindingOptions._currentView.isInFetchMode ) {\n                const importData: HTMLElement = DomElement.createWithHTML( titleBar, \"button\", \"import\", _configuration.importButtonText! );\n        \n                importData.onclick = () => {\n                    importFromFilesSelected( bindingOptions );\n                };\n            }\n\n            if ( bindingOptions.title!.showExportButton ) {\n                const exportData: HTMLElement = DomElement.createWithHTML( titleBar, \"button\", \"export\", _configuration.exportButtonText! );\n        \n                exportData.onclick = () => {\n                    exportAllData( bindingOptions );\n                };\n            }\n\n            if ( bindingOptions.title!.showRefreshButton ) {\n                const refresh: HTMLElement = DomElement.createWithHTML( titleBar, \"button\", \"refresh\", _configuration.refreshButtonText! );\n        \n                refresh.onclick = () => {\n                    renderControlContainer( bindingOptions );\n                    fireCustomTriggerEvent( bindingOptions.events!.onRefresh!, bindingOptions._currentView.element );\n                };\n            }\n    \n            if ( bindingOptions.title!.showYearSelector ) {\n                const back: HTMLInputElement = DomElement.createWithHTML( titleBar, \"button\", \"back\", _configuration.backButtonText! ) as HTMLInputElement;\n        \n                back.onclick = () => {\n                    moveToPreviousYear( bindingOptions );\n                };\n\n                if ( isFirstVisibleYear( bindingOptions, bindingOptions._currentView.year ) ) {\n                    back.disabled = true;\n                }\n\n                bindingOptions._currentView.yearText = DomElement.createWithHTML( titleBar, \"div\", \"year-text\", bindingOptions._currentView.year.toString() );\n\n                if ( bindingOptions.title!.showYearSelectionDropDown ) {\n                    renderYearDropDownMenu( bindingOptions );\n                } else {\n                    DomElement.addClass( bindingOptions._currentView.yearText, \"no-click\" );\n                }\n\n                if ( bindingOptions.title!.showConfigurationButton ) {\n                    let configureButton: HTMLElement = DomElement.create( titleBar, \"div\", \"configure\" );\n\n                    addToolTip( configureButton, bindingOptions, _configuration.configurationToolTipText! );\n\n                    configureButton.onclick = () => {\n                        showConfigurationDialog( bindingOptions );\n                    };\n                }\n\n                const next: HTMLInputElement = DomElement.createWithHTML( titleBar, \"button\", \"next\", _configuration.nextButtonText! ) as HTMLInputElement;\n\n                next.onclick = () => {\n                    moveToNextYear( bindingOptions );\n                };\n\n                if ( isLastVisibleYear( bindingOptions, bindingOptions._currentView.year ) ) {\n                    next.disabled = true;\n                }\n            }\n        }\n    }\n\n    function renderTitleDropDownMenu( bindingOptions: BindingOptions, title: HTMLElement ) : void {\n        const titlesMenuContainer: HTMLElement = DomElement.create( title, \"div\", \"titles-menu-container\" );\n        const titlesMenu: HTMLElement = DomElement.create( titlesMenuContainer, \"div\", \"titles-menu\" );\n        \n        if ( bindingOptions.title!.showTitleDropDownHeaders ) {\n            DomElement.createWithHTML( titlesMenu, \"div\", \"title-menu-header\", _configuration.dataText + Char.colon );\n        }\n\n        const menuItemMap: HTMLElement = DomElement.createWithHTML( titlesMenu, \"div\", \"title-menu-item\", _configuration.mapText! );\n            \n        renderTitleDropDownMenuItemClickEvent( bindingOptions, menuItemMap, ViewId.map, ViewName.map );\n\n        if ( bindingOptions.views!.chart!.enabled ) {\n            const menuItemChart = DomElement.createWithHTML( titlesMenu, \"div\", \"title-menu-item\", _configuration.chartText! );\n\n            renderTitleDropDownMenuItemClickEvent( bindingOptions, menuItemChart, ViewId.chart, ViewName.chart );\n        }\n\n        if ( bindingOptions.views!.days!.enabled ) {\n            if ( bindingOptions.title!.showTitleDropDownHeaders ) {\n                DomElement.createWithHTML( titlesMenu, \"div\", \"title-menu-header\", _configuration.yearText + Char.colon );\n            }\n\n            const menuItemDays: HTMLElement = DomElement.createWithHTML( titlesMenu, \"div\", \"title-menu-item\", _configuration.daysText! );\n\n            renderTitleDropDownMenuItemClickEvent( bindingOptions, menuItemDays, ViewId.days, ViewName.days );\n        }\n\n        if ( bindingOptions.views!.statistics!.enabled ) {\n            if ( bindingOptions.title!.showTitleDropDownHeaders ) {\n                DomElement.createWithHTML( titlesMenu, \"div\", \"title-menu-header\", _configuration.statisticsText + Char.colon );\n            }\n\n            const menuItemStatistics: HTMLElement = DomElement.createWithHTML( titlesMenu, \"div\", \"title-menu-item\", _configuration.colorRangesText! );\n\n            renderTitleDropDownMenuItemClickEvent( bindingOptions, menuItemStatistics, ViewId.statistics, ViewName.statistics );\n        }\n    }\n\n    function renderTitleDropDownMenuItemClickEvent( bindingOptions: BindingOptions, option: HTMLElement, view: number, viewName: string ) : void {\n        if ( bindingOptions._currentView.view === view ) {\n            DomElement.addClass( option, \"title-menu-item-active\" );\n            \n        } else {\n            option.onclick = () => {\n                bindingOptions._currentView.view = view;\n\n                fireCustomTriggerEvent( bindingOptions.events!.onViewSwitch!, viewName );\n                renderControlContainer( bindingOptions, false, true );\n            };\n        }\n    }\n\n    function renderYearDropDownMenu( bindingOptions: BindingOptions ) : void {\n        DomElement.create( bindingOptions._currentView.yearText, \"div\", \"down-arrow\" );\n\n        const yearsMenuContainer: HTMLElement = DomElement.create( bindingOptions._currentView.yearText, \"div\", \"years-menu-container\" );\n        const yearsMenu: HTMLElement = DomElement.create( yearsMenuContainer, \"div\", \"years-menu\" );\n        const thisYear: number = new Date().getFullYear();\n        let activeYearMenuItem: HTMLElement = null!;\n\n        yearsMenuContainer.style.display = \"block\";\n        yearsMenuContainer.style.visibility = \"hidden\";\n\n        for ( let currentYear: number = thisYear - bindingOptions.title!.extraSelectionYears!; currentYear < thisYear + bindingOptions.title!.extraSelectionYears!; currentYear++ ) {\n            if ( isYearVisible( bindingOptions, currentYear ) ) {\n                let yearMenuItem: HTMLElement = renderYearDropDownMenuItem( bindingOptions, yearsMenu, currentYear, thisYear );\n\n                if ( !Is.defined( activeYearMenuItem ) ) {\n                    activeYearMenuItem = yearMenuItem;\n                }\n            }\n        }\n\n        if ( Is.defined( activeYearMenuItem ) ) {\n            yearsMenu.scrollTop = activeYearMenuItem.offsetTop - ( yearsMenu.offsetHeight / 2 );\n        }\n\n        yearsMenuContainer.style.display = \"none\";\n        yearsMenuContainer.style.visibility = \"visible\";\n    }\n\n    function renderYearDropDownMenuItem( bindingOptions: BindingOptions, years: HTMLElement, currentYear: number, actualYear: number ) : HTMLElement {\n        let result: HTMLElement = null!;\n        const year: HTMLElement = DomElement.createWithHTML( years, \"div\", \"year-menu-item\", currentYear.toString() );\n\n        if ( bindingOptions._currentView.year !== currentYear ) {\n            year.onclick = () => {\n                bindingOptions._currentView.year = currentYear;\n    \n                renderControlContainer( bindingOptions );\n                fireCustomTriggerEvent( bindingOptions.events!.onSetYear!, bindingOptions._currentView.year );\n            };\n\n            if ( currentYear === actualYear ) {\n                DomElement.addClass( year, \"year-menu-item-current\" );\n            }\n\n        } else {\n            DomElement.addClass( year, \"year-menu-item-active\" );\n            result = year;\n        }\n\n        return result;\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Render:  View:  Map\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function renderControlMap( bindingOptions: BindingOptions, isForViewSwitch: boolean ) : void {\n        bindingOptions._currentView.mapContents = DomElement.create( bindingOptions._currentView.element, \"div\", \"map-contents\" );\n\n        if ( bindingOptions.views!.chart!.enabled ) {\n            renderControlChartContents( bindingOptions );\n        }\n\n        if ( bindingOptions.views!.days!.enabled ) {\n            renderControlDaysContents( bindingOptions );\n        }\n        \n        if ( bindingOptions.views!.statistics!.enabled ) {\n            renderControlStatisticsContents( bindingOptions );\n        }\n\n        renderControlViewGuide( bindingOptions );\n\n        if ( bindingOptions.views!.map!.showNoDataMessageWhenDataIsNotAvailable && !isDataAvailableForYear( bindingOptions ) ) {\n            const noDataMessage: HTMLElement = DomElement.createWithHTML( bindingOptions._currentView.mapContents, \"div\", \"no-data-message\", _configuration.noMapDataMessage! );\n\n            if ( isForViewSwitch ) {\n                DomElement.addClass( noDataMessage, \"view-switch\" );\n            }\n\n        } else {\n            bindingOptions._currentView.mapContents.style.minHeight = \"unset\";\n\n            makeAreaDroppable( bindingOptions._currentView.mapContents, bindingOptions );\n\n            const map: HTMLElement = DomElement.create( bindingOptions._currentView.mapContents, \"div\", \"map\" );\n            const currentYear: number = bindingOptions._currentView.year;\n            let monthAdded: boolean = false;\n    \n            if ( isForViewSwitch ) {\n                DomElement.addClass( map, \"view-switch\" );\n            }\n    \n            if ( bindingOptions.views!.map!.showDayNames ) {\n                const days: HTMLElement = DomElement.create( map, \"div\", \"days\" );\n                const showMinimalDays: boolean = bindingOptions.views!.map!.showMinimalDayNames! && bindingOptions.views!.map!.daysToShow!.length === 7;\n    \n                if ( !bindingOptions.views!.map!.showMonthNames || bindingOptions.views!.map!.placeMonthNamesOnTheBottom ) {\n                    days.className = \"days-months-bottom\";\n                }\n        \n                for ( let dayNameIndex: number = 0; dayNameIndex < 7; dayNameIndex++ ) {\n                    if ( isDayVisible( bindingOptions.views!.map!.daysToShow!, dayNameIndex + 1 ) ) {\n                        const dayText: string = !showMinimalDays || dayNameIndex % 3 === 0 ? _configuration.dayNames![ dayNameIndex ] : Char.space;\n\n                        DomElement.createWithHTML( days, \"div\", \"day-name\", dayText );\n                    }\n                }\n    \n                if ( bindingOptions.views!.map!.showDaysInReverseOrder ) {\n                    DomElement.reverseChildrenOrder( days );\n                }\n            }\n    \n            const months: HTMLElement = DomElement.create( map, \"div\", \"months\" );\n            const colorRanges: ColorRange[] = getSortedColorRanges( bindingOptions );\n    \n            for ( let monthIndex: number = 0; monthIndex < 12; monthIndex++ ) {\n                if ( isMonthVisible( bindingOptions.views!.map!.monthsToShow!, monthIndex ) ) {\n                    const month: HTMLElement = DomElement.create( months, \"div\", \"month\" );\n                    const dayColumns: HTMLElement = DomElement.create( month, \"div\", \"day-columns\" );\n                    let totalDaysInMonth: number = DateTime.getTotalDaysInMonth( currentYear, monthIndex );\n                    let currentDayColumn: HTMLElement = DomElement.create( dayColumns, \"div\", \"day-column\" );\n                    let startFillingDays: boolean = false;\n                    const firstDayInMonth: Date = new Date( currentYear, monthIndex, 1 );\n                    const firstDayNumberInMonth: number = DateTime.getWeekdayNumber( firstDayInMonth );\n                    let actualDay: number = 1;\n        \n                    totalDaysInMonth += firstDayNumberInMonth;\n        \n                    for ( let dayIndex: number = 0; dayIndex < totalDaysInMonth; dayIndex++ ) {\n                        if ( dayIndex >= firstDayNumberInMonth ) {\n                            startFillingDays = true;\n        \n                        } else {\n                            if ( isDayVisible( bindingOptions.views!.map!.daysToShow!, actualDay ) ) {\n                                DomElement.create( currentDayColumn, \"div\", \"day-disabled\" );\n                            }\n                        }\n        \n                        if ( startFillingDays ) {\n                            let day: HTMLElement = null!;\n    \n                            if ( isDayVisible( bindingOptions.views!.map!.daysToShow!, actualDay ) ) {\n                                day = renderControlMapMonthDay( bindingOptions, currentDayColumn, dayIndex - firstDayNumberInMonth, monthIndex, currentYear, colorRanges );\n                            }\n            \n                            if ( ( dayIndex + 1 ) % 7 === 0 ) {\n                                if ( bindingOptions.views!.map!.showDaysInReverseOrder! ) {\n                                    DomElement.reverseChildrenOrder( currentDayColumn );\n                                }\n    \n                                currentDayColumn = DomElement.create( dayColumns, \"div\", \"day-column\" );\n                                actualDay = 0;\n    \n                                if ( _elements_Day_Width === 0 && Is.defined( day ) ) {\n                                    let marginLeft: number = DomElement.getStyleValueByName( day, \"margin-left\", true );\n                                    let marginRight: number = DomElement.getStyleValueByName( day, \"margin-right\", true );\n                                    \n                                    _elements_Day_Width = day.offsetWidth + marginLeft + marginRight;\n                                }\n                            }\n                        }\n    \n                        actualDay++;\n                    }\n    \n                    if ( bindingOptions.views!.map!.showMonthNames ) {\n                        let monthName: HTMLElement;\n                        const monthWidth: number = month.offsetWidth;\n    \n                        if ( !bindingOptions.views!.map!.placeMonthNamesOnTheBottom ) {\n                            monthName = DomElement.createWithHTML( month, \"div\", \"month-name\", _configuration.monthNames![ monthIndex ], dayColumns );\n                        } else {\n                            monthName = DomElement.createWithHTML( month, \"div\", \"month-name-bottom\", _configuration.monthNames![ monthIndex ] );\n                        }\n    \n                        if ( Is.defined( monthName ) ) {\n                            if ( bindingOptions.views!.map!.showMonthDayGaps ) {\n                                monthName.style.width = monthWidth + \"px\";\n                            } else {\n                                monthName.style.width = ( monthWidth - _elements_Day_Width ) + \"px\";\n                            }\n                        }\n                    }\n    \n                    if ( monthAdded && Is.defined( _elements_Day_Width ) ) {\n                        if ( firstDayNumberInMonth > 0 && !bindingOptions.views!.map!.showMonthDayGaps ) {\n                            month.style.marginLeft = -_elements_Day_Width + \"px\";\n                        } else if ( firstDayNumberInMonth === 0 && bindingOptions.views!.map!.showMonthDayGaps ) {\n                            month.style.marginLeft = _elements_Day_Width + \"px\";\n                        }\n                    }\n\n                    if ( bindingOptions.views!.map!.showMonthsInReverseOrder ) {\n                        DomElement.reverseChildrenOrder( dayColumns );\n                    }\n    \n                    monthAdded = true;\n                }\n            }\n\n            if ( bindingOptions.views!.map!.showMonthsInReverseOrder ) {\n                DomElement.reverseChildrenOrder( months );\n            }\n            \n            if ( bindingOptions.views!.map!.keepScrollPositions ) {\n                bindingOptions._currentView.mapContents.scrollLeft = bindingOptions._currentView.mapContentsScrollLeft;\n            }\n        }\n    }\n\n    function renderControlMapMonthDay( bindingOptions: BindingOptions, currentDayColumn: HTMLElement, dayNumber: number, month: number, year: number, colorRanges: ColorRange[] ) : HTMLElement {\n        const actualDay: number = dayNumber + 1;\n        const day: HTMLElement = DomElement.create( currentDayColumn, \"div\", \"day\" );\n        const date: Date = new Date( year, month, actualDay );\n        let dateCount: number = _elements_DateCounts[ bindingOptions._currentView.element.id ].typeData[ bindingOptions._currentView.type ][ toStorageDate( date ) ];\n\n        dateCount = Data.getDefaultNumber( dateCount, 0 );\n\n        renderDayToolTip( bindingOptions, day, date, dateCount );\n\n        if ( bindingOptions.views!.map!.showDayNumbers && dateCount > 0 ) {\n            day.innerHTML = dateCount.toString();\n        }\n\n        if ( Is.definedFunction( bindingOptions.events!.onDayClick ) ) {\n            day.onclick = () => {\n                fireCustomTriggerEvent( bindingOptions.events!.onDayClick!, date, dateCount );\n            };\n\n        } else {\n            DomElement.addClass( day, \"no-hover\" );\n        }\n\n        const useColorRange: ColorRange = getColorRange( bindingOptions, colorRanges, dateCount, date );\n\n        if ( Is.defined( useColorRange ) && isColorRangeVisible( bindingOptions, useColorRange.id! ) ) {\n            if ( Is.definedString( useColorRange.mapCssClassName ) ) {\n                DomElement.addClass( day, useColorRange.mapCssClassName! );\n            } else {\n                DomElement.addClass( day, useColorRange.cssClassName! );\n            }\n        }\n\n        return day;\n    }\n\n    function isDataAvailableForYear( bindingOptions: BindingOptions ) : boolean {\n        let result: boolean = false;\n        const data: TypeCountsData = getCurrentViewData( bindingOptions );\n        const checkDate: string = bindingOptions._currentView.year.toString();\n\n        for ( let storageDate in data ) {\n            if ( data.hasOwnProperty( storageDate ) ) {\n                if ( getStorageDateYear( storageDate ) === checkDate ) {\n                    result = true;\n                    break;\n                }\n            }\n        }\n\n        return result;\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Render:  View:  Chart\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function renderControlChartContents( bindingOptions: BindingOptions ) : void {\n        bindingOptions._currentView.chartContents = DomElement.create( bindingOptions._currentView.element, \"div\", \"chart-contents\" );\n\n        makeAreaDroppable( bindingOptions._currentView.chartContents, bindingOptions );\n    }\n\n    function renderControlChart( bindingOptions: BindingOptions, isForViewSwitch: boolean) : void {\n        const chart: HTMLElement = DomElement.create( bindingOptions._currentView.chartContents, \"div\", \"chart\" );\n        let labels: HTMLElement = DomElement.create( chart, \"div\", \"y-labels\" );\n        const dayLines: HTMLElement = DomElement.create( chart, \"div\", \"day-lines\" );\n        const colorRanges: ColorRange[] = getSortedColorRanges( bindingOptions );\n        const largestValueForCurrentYear: number = getLargestValueForChartYear( bindingOptions );\n        const currentYear: number = bindingOptions._currentView.year;\n        let labelsWidth: number = 0;\n\n        if ( isForViewSwitch ) {\n            DomElement.addClass( chart, \"view-switch\" );\n        }\n\n        if ( largestValueForCurrentYear > 0 && bindingOptions.views!.chart!.showChartYLabels ) {\n            const topLabel: HTMLElement = DomElement.createWithHTML( labels, \"div\", \"label-0\", largestValueForCurrentYear.toString() );\n\n            DomElement.createWithHTML( labels, \"div\", \"label-25\", ( Math.floor( largestValueForCurrentYear / 4 ) * 3 ).toString() );\n            DomElement.createWithHTML( labels, \"div\", \"label-50\", Math.floor( largestValueForCurrentYear / 2 ).toString() );\n            DomElement.createWithHTML( labels, \"div\", \"label-75\", Math.floor( largestValueForCurrentYear / 4 ).toString() );\n            DomElement.createWithHTML( labels, \"div\", \"label-100\", Char.zero );\n\n            labels.style.width = topLabel.offsetWidth + \"px\";\n            labelsWidth = labels.offsetWidth + DomElement.getStyleValueByName( labels, \"margin-right\", true );\n\n        } else {\n            labels.parentNode!.removeChild( labels );\n            labels = null!;\n        }\n\n        if ( largestValueForCurrentYear === 0 ) {\n            bindingOptions._currentView.chartContents.style.minHeight = bindingOptions._currentView.mapContents.offsetHeight + \"px\";\n            chart.parentNode!.removeChild( chart );\n\n            const noDataMessage: HTMLElement = DomElement.createWithHTML( bindingOptions._currentView.chartContents, \"div\", \"no-data-message\", _configuration.noChartDataMessage! );\n\n            if ( isForViewSwitch ) {\n                DomElement.addClass( noDataMessage, \"view-switch\" );\n            }\n\n        } else {\n            const pixelsPerNumbers: number = bindingOptions._currentView.mapContents.offsetHeight / largestValueForCurrentYear;\n            let totalMonths: number = 0;\n            let totalDays: number = 0;\n\n            for ( let monthIndex1: number = 0; monthIndex1 < 12; monthIndex1++ ) {\n                if ( isMonthVisible( bindingOptions.views!.chart!.monthsToShow!, monthIndex1 ) ) {\n                    const totalDaysInMonth: number = DateTime.getTotalDaysInMonth( currentYear, monthIndex1 );\n                    let actualDay: number = 1;\n                    \n                    totalMonths++;\n\n                    for ( let dayIndex: number = 0; dayIndex < totalDaysInMonth; dayIndex++ ) {\n                        if ( isDayVisible( bindingOptions.views!.chart!.daysToShow!, actualDay ) ) {\n                            renderControlChartDay( dayLines, bindingOptions, dayIndex + 1, monthIndex1, currentYear, colorRanges, pixelsPerNumbers );\n                        }\n        \n                        if ( ( dayIndex + 1 ) % 7 === 0 ) {\n                            actualDay = 0;\n                        }\n    \n                        actualDay++;\n                        totalDays++;\n                    }\n                }\n            }\n\n            if ( bindingOptions.views!.chart!.showInReverseOrder ) {\n                DomElement.reverseChildrenOrder( dayLines );\n            }\n\n            if ( bindingOptions.views!.chart!.showMonthNames ) {\n                const chartMonths: HTMLElement = DomElement.create( bindingOptions._currentView.chartContents, \"div\", \"chart-months\" );\n                const linesWidth: number = dayLines.offsetWidth / totalMonths;\n                let monthTimesValue: number = 0;\n\n                const addMonthName: Function = ( addMonthNameIndex: number ) => {\n                    if ( isMonthVisible( bindingOptions.views!.chart!.monthsToShow!, addMonthNameIndex ) ) {\n                        let monthName: HTMLElement = DomElement.createWithHTML( chartMonths, \"div\", \"month-name\", _configuration.monthNames![ addMonthNameIndex ] );\n                        monthName.style.left = labelsWidth + ( linesWidth * monthTimesValue ) + \"px\";\n\n                        monthTimesValue++;\n                    }\n                };\n\n                if ( bindingOptions.views!.chart!.showInReverseOrder ) {\n                    for ( let monthIndex2: number = 12; monthIndex2--; ) {\n                        addMonthName( monthIndex2 );\n                    }\n                } else {\n                    for ( let monthIndex3: number = 0; monthIndex3 < 12; monthIndex3++ ) {\n                        addMonthName( monthIndex3 );\n                    }\n                }\n\n                chartMonths.style.width = dayLines.offsetWidth + \"px\";\n\n                const monthNameSpace: HTMLElement = DomElement.create( chartMonths, \"div\", \"month-name-space\" );\n                monthNameSpace.style.height = chartMonths.offsetHeight + \"px\";\n                monthNameSpace.style.width = labelsWidth + \"px\";\n            }\n    \n            if ( bindingOptions.views!.chart!.keepScrollPositions ) {\n                bindingOptions._currentView.chartContents.scrollLeft = bindingOptions._currentView.chartContentsScrollLeft;\n            }\n        }\n    }\n\n    function renderControlChartDay( dayLines: HTMLElement, bindingOptions: BindingOptions, day: number, month: number, year: number, colorRanges: ColorRange[], pixelsPerNumbers: number ) : void {\n        const date: Date = new Date( year, month, day );\n        const dayLine: HTMLElement = DomElement.create( dayLines, \"div\", \"day-line\" );\n        let dateCount: number = getCurrentViewData( bindingOptions )[ toStorageDate( date ) ];\n\n        dateCount = Data.getDefaultNumber( dateCount, 0 );\n\n        renderDayToolTip( bindingOptions, dayLine, date, dateCount );\n\n        if ( bindingOptions.views!.chart!.showLineNumbers && dateCount > 0 ) {\n            DomElement.addClass( dayLine, \"day-line-number\" );\n\n            dayLine.innerHTML = dateCount.toString();\n        }\n\n        const dayLineHeight: number = dateCount * pixelsPerNumbers;\n        dayLine.style.height = dayLineHeight + \"px\";\n\n        if ( dayLineHeight <= 0 ) {\n            dayLine.style.visibility = \"hidden\";\n        }\n\n        if ( Is.definedFunction( bindingOptions.events!.onDayClick ) ) {\n            dayLine.onclick = () => {\n                fireCustomTriggerEvent( bindingOptions.events!.onDayClick!, date, dateCount );\n            };\n\n        } else {\n            DomElement.addClass( dayLine, \"no-hover\" );\n        }\n\n        const useColorRange: ColorRange = getColorRange( bindingOptions, colorRanges, dateCount, date );\n\n        if ( Is.defined( useColorRange ) && isColorRangeVisible( bindingOptions, useColorRange.id! ) ) {\n            if ( Is.definedString( useColorRange.chartCssClassName ) ) {\n                DomElement.addClass( dayLine, useColorRange.chartCssClassName! );\n            } else {\n                DomElement.addClass( dayLine, useColorRange.cssClassName! );\n            }\n        }\n    }\n\n    function getLargestValueForChartYear( bindingOptions: BindingOptions ) : number {\n        let result: number = 0;\n        const data: TypeCountsData = getCurrentViewData( bindingOptions );\n\n        for ( let monthIndex: number = 0; monthIndex < 12; monthIndex++ ) {\n            const totalDaysInMonth: number = DateTime.getTotalDaysInMonth( bindingOptions._currentView.year, monthIndex );\n    \n            for ( let dayIndex: number = 0; dayIndex < totalDaysInMonth; dayIndex++ ) {\n                const storageDate: string = toStorageDate( new Date( bindingOptions._currentView.year, monthIndex, dayIndex + 1 ) );\n\n                if ( data.hasOwnProperty( storageDate ) ) {\n                    if ( isMonthVisible( bindingOptions.views!.chart!.monthsToShow!, monthIndex ) && isDayVisible( bindingOptions.views!.chart!.daysToShow!, dayIndex + 1 ) ) {\n                        result = Math.max( result, data[ storageDate ] );\n                    }\n                }\n            }\n        }\n\n        return result;\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Render:  View:  Days\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function renderControlDaysContents( bindingOptions: BindingOptions ) : void {\n        bindingOptions._currentView.daysContents = DomElement.create( bindingOptions._currentView.element, \"div\", \"days-contents\" );\n\n        makeAreaDroppable( bindingOptions._currentView.daysContents, bindingOptions );\n    }\n\n    function renderControlDays( bindingOptions: BindingOptions, isForViewSwitch: boolean ) : void {\n        const days: HTMLElement = DomElement.create( bindingOptions._currentView.daysContents, \"div\", \"days\" );\n        const dayNames: HTMLElement = DomElement.create( bindingOptions._currentView.daysContents, \"div\", \"day-names\" );\n        let labels: HTMLElement = DomElement.create( days, \"div\", \"y-labels\" );\n        const dayLines: HTMLElement = DomElement.create( days, \"div\", \"day-lines\" );\n        const dayValuesForCurrentYear: LargestValueForDays = getLargestValuesForEachDay( bindingOptions );\n\n        if ( isForViewSwitch ) {\n            DomElement.addClass( days, \"view-switch\" );\n        }\n\n        if ( dayValuesForCurrentYear.largestValue > 0 && bindingOptions.views!.days!.showChartYLabels ) {\n            const topLabel: HTMLElement = DomElement.createWithHTML( labels, \"div\", \"label-0\", dayValuesForCurrentYear.largestValue.toString() );\n\n            DomElement.createWithHTML( labels, \"div\", \"label-25\", ( Math.floor( dayValuesForCurrentYear.largestValue / 4 ) * 3 ).toString() );\n            DomElement.createWithHTML( labels, \"div\", \"label-50\", Math.floor( dayValuesForCurrentYear.largestValue / 2 ).toString() );\n            DomElement.createWithHTML( labels, \"div\", \"label-75\", Math.floor( dayValuesForCurrentYear.largestValue / 4 ).toString() );\n            DomElement.createWithHTML( labels, \"div\", \"label-100\", Char.zero );\n\n            labels.style.width = topLabel.offsetWidth + \"px\";\n            dayNames.style.paddingLeft = labels.offsetWidth + DomElement.getStyleValueByName( labels, \"margin-right\", true ) + \"px\";\n\n        } else {\n            labels.parentNode!.removeChild( labels );\n            labels = null!;\n        }\n\n        if ( dayValuesForCurrentYear.largestValue === 0 ) {\n            bindingOptions._currentView.daysContents.style.minHeight = bindingOptions._currentView.mapContents.offsetHeight + \"px\";\n            days.parentNode!.removeChild( days );\n            dayNames.parentNode!.removeChild( dayNames );\n\n            const noDataMessage: HTMLElement = DomElement.createWithHTML( bindingOptions._currentView.daysContents, \"div\", \"no-days-message\", _configuration.noDaysDataMessage! );\n\n            if ( isForViewSwitch ) {\n                DomElement.addClass( noDataMessage, \"view-switch\" );\n            }\n\n        } else {\n            const pixelsPerNumbers: number = bindingOptions._currentView.mapContents.offsetHeight / dayValuesForCurrentYear.largestValue;\n\n            for ( let day in dayValuesForCurrentYear.days ) {\n                if ( dayValuesForCurrentYear.days.hasOwnProperty( day ) && isDayVisible( bindingOptions.views!.days!.daysToShow!, parseInt( day ) ) ) {\n                    renderControlDaysDayLine( dayLines, parseInt( day ), dayValuesForCurrentYear.days[ day ], bindingOptions, pixelsPerNumbers );\n\n                    if ( bindingOptions.views!.days!.showDayNames ) {\n                        DomElement.createWithHTML( dayNames, \"div\", \"day-name\", _configuration.dayNames![ parseInt( day ) - 1 ] );\n                    }\n                }\n            }\n\n            if ( bindingOptions.views!.days!.showInReverseOrder ) {\n                DomElement.reverseChildrenOrder( dayLines );\n                DomElement.reverseChildrenOrder( dayNames );\n            }\n\n            if ( bindingOptions.views!.days!.keepScrollPositions ) {\n                bindingOptions._currentView.daysContents.scrollLeft = bindingOptions._currentView.daysContentsScrollLeft;\n            }\n        }\n    }\n\n    function renderControlDaysDayLine( dayLines: HTMLElement, dayNumber: number, dayCount: number, bindingOptions: BindingOptions, pixelsPerNumbers: number ) : void {\n        const dayLine: HTMLElement = DomElement.create( dayLines, \"div\", \"day-line\" );\n        const dayLineHeight: number = dayCount * pixelsPerNumbers;\n\n        dayLine.style.height = dayLineHeight + \"px\";\n\n        if ( dayLineHeight <= 0 ) {\n            dayLine.style.visibility = \"hidden\";\n        }\n        \n        addToolTip( dayLine, bindingOptions, dayCount.toString() );\n\n        if ( Is.definedFunction( bindingOptions.events!.onWeekDayClick ) ) {\n            dayLine.onclick = () => {\n                fireCustomTriggerEvent( bindingOptions.events!.onWeekDayClick!, dayNumber, dayCount );\n            };\n\n        } else {\n            DomElement.addClass( dayLine, \"no-hover\" );\n        }\n\n        if ( bindingOptions.views!.days!.showDayNumbers && dayCount > 0 ) {\n            DomElement.addClass( dayLine, \"day-line-number\" );\n\n            DomElement.createWithHTML( dayLine, \"div\", \"count\", dayCount.toString() );\n        }\n    }\n\n    function getLargestValuesForEachDay( bindingOptions: BindingOptions ) : LargestValueForDays {\n        const result: LargestValueForDays = {\n            days: {\n                1: 0,\n                2: 0,\n                3: 0,\n                4: 0,\n                5: 0,\n                6: 0,\n                7: 0,\n            },\n            largestValue: 0\n        } as LargestValueForDays;\n\n        const data: TypeCountsData = getCurrentViewData( bindingOptions );\n\n        for ( let monthIndex: number = 0; monthIndex < 12; monthIndex++ ) {\n            const totalDaysInMonth: number = DateTime.getTotalDaysInMonth( bindingOptions._currentView.year, monthIndex );\n    \n            for ( let dayIndex: number = 0; dayIndex < totalDaysInMonth; dayIndex++ ) {\n                const storageDate: string = toStorageDate( new Date( bindingOptions._currentView.year, monthIndex, dayIndex + 1 ) );\n\n                if ( data.hasOwnProperty( storageDate ) ) {\n                    const storageDateParts: string[] = getStorageDate( storageDate );\n                    const storageDateObject: Date = new Date( parseInt( storageDateParts[ 2 ] ), parseInt( storageDateParts[ 1 ] ), parseInt( storageDateParts[ 0 ] ) );\n                    const weekDayNumber: number = DateTime.getWeekdayNumber( storageDateObject ) + 1;\n\n                    if ( !isHoliday( bindingOptions, storageDateObject ).matched && isMonthVisible( bindingOptions.views!.days!.monthsToShow!, storageDateObject.getMonth() ) && isDayVisible( bindingOptions.views!.days!.daysToShow!, weekDayNumber ) ) {\n                        result.days[ weekDayNumber ] += data[ storageDate ];\n\n                        result.largestValue = Math.max( result.largestValue, result.days[ weekDayNumber ] );\n                    }\n                }\n            }\n        }\n\n        return result;\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Render:  View:  Statistics\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function renderControlStatisticsContents( bindingOptions: BindingOptions ) : void {\n        bindingOptions._currentView.statisticsContents = DomElement.create( bindingOptions._currentView.element, \"div\", \"statistics-contents\" );\n\n        makeAreaDroppable( bindingOptions._currentView.statisticsContents, bindingOptions );\n    }\n\n    function renderControlStatistics( bindingOptions: BindingOptions, isForViewSwitch: boolean ) : void {\n        const statistics: HTMLElement = DomElement.create( bindingOptions._currentView.statisticsContents, \"div\", \"statistics\" );\n        const statisticsRanges: HTMLElement = DomElement.create( bindingOptions._currentView.statisticsContents, \"div\", \"statistics-ranges\" );\n        let labels: HTMLElement = DomElement.create( statistics, \"div\", \"y-labels\" );\n        const rangeLines: HTMLElement = DomElement.create( statistics, \"div\", \"range-lines\" );\n        const colorRanges: ColorRange[] = getSortedColorRanges( bindingOptions );\n        const colorRangeValuesForCurrentYear: LargestValuesForEachRangeType = getLargestValuesForEachRangeType( bindingOptions, colorRanges );\n\n        if ( isForViewSwitch ) {\n            DomElement.addClass( statistics, \"view-switch\" );\n        }\n\n        if ( colorRangeValuesForCurrentYear.largestValue > 0 && bindingOptions.views!.statistics!.showChartYLabels ) {\n            const topLabel: HTMLElement = DomElement.createWithHTML( labels, \"div\", \"label-0\", colorRangeValuesForCurrentYear.largestValue.toString() );\n\n            DomElement.createWithHTML( labels, \"div\", \"label-25\", ( Math.floor( colorRangeValuesForCurrentYear.largestValue / 4 ) * 3 ).toString() );\n            DomElement.createWithHTML( labels, \"div\", \"label-50\", Math.floor( colorRangeValuesForCurrentYear.largestValue / 2 ).toString() );\n            DomElement.createWithHTML( labels, \"div\", \"label-75\", Math.floor( colorRangeValuesForCurrentYear.largestValue / 4 ).toString() );\n            DomElement.createWithHTML( labels, \"div\", \"label-100\", Char.zero );\n\n            labels.style.width = topLabel.offsetWidth + \"px\";\n            statisticsRanges.style.paddingLeft = labels.offsetWidth + DomElement.getStyleValueByName( labels, \"margin-right\", true ) + \"px\";\n\n        } else {\n            labels.parentNode!.removeChild( labels );\n            labels = null!;\n        }\n\n        if ( colorRangeValuesForCurrentYear.largestValue === 0 ) {\n            bindingOptions._currentView.statisticsContents.style.minHeight = bindingOptions._currentView.mapContents.offsetHeight + \"px\";\n            statistics.parentNode!.removeChild( statistics );\n            statisticsRanges.parentNode!.removeChild( statisticsRanges );\n\n            const noDataMessage: HTMLElement = DomElement.createWithHTML( bindingOptions._currentView.statisticsContents, \"div\", \"no-statistics-message\", _configuration.noStatisticsDataMessage! );\n\n            if ( isForViewSwitch ) {\n                DomElement.addClass( noDataMessage, \"view-switch\" );\n            }\n\n        } else {\n            const pixelsPerNumbers: number = bindingOptions._currentView.mapContents.offsetHeight / colorRangeValuesForCurrentYear.largestValue;\n\n            if ( !bindingOptions.views!.statistics!.showColorRangeLabels ) {\n                statisticsRanges.parentNode!.removeChild( statisticsRanges );\n            }\n\n            for ( let type in colorRangeValuesForCurrentYear.types ) {\n                if ( colorRangeValuesForCurrentYear.types.hasOwnProperty( type ) ) {\n                    renderControlStatisticsRangeLine( parseInt( type ), rangeLines, colorRangeValuesForCurrentYear.types[ type ], bindingOptions, colorRanges, pixelsPerNumbers );\n\n                    const useColorRange: ColorRange = getColorRangeByMinimum( colorRanges, parseInt( type ) );\n\n                    if ( bindingOptions.views!.statistics!.showColorRangeLabels ) {\n                        if ( !bindingOptions.views!.statistics!.useColorRangeNamesForLabels || !Is.defined( useColorRange ) || !Is.definedString( useColorRange.name ) ) {\n                            DomElement.createWithHTML( statisticsRanges, \"div\", \"range-name\", type + Char.plus );\n                        } else {\n                            DomElement.createWithHTML( statisticsRanges, \"div\", \"range-name\", useColorRange.name! );\n                        }\n                    }\n                }\n            }\n\n            if ( bindingOptions.views!.statistics!.showInReverseOrder ) {\n                DomElement.reverseChildrenOrder( rangeLines );\n                DomElement.reverseChildrenOrder( statisticsRanges );\n            }\n    \n            if ( bindingOptions.views!.statistics!.keepScrollPositions ) {\n                bindingOptions._currentView.statisticsContents.scrollLeft = bindingOptions._currentView.statisticsContentsScrollLeft;\n            }\n        }\n    }\n\n    function renderControlStatisticsRangeLine( colorRangeMinimum: number, dayLines: HTMLElement, rangeCount: number, bindingOptions: BindingOptions, colorRanges: ColorRange[], pixelsPerNumbers: number ) : void {\n        const rangeLine: HTMLElement = DomElement.create( dayLines, \"div\", \"range-line\" );\n        const useColorRange: ColorRange = getColorRangeByMinimum( colorRanges, colorRangeMinimum );\n        const rangeLineHeight: number = rangeCount * pixelsPerNumbers;\n\n        rangeLine.style.height = rangeLineHeight + \"px\";\n\n        if ( rangeLineHeight <= 0 ) {\n            rangeLine.style.visibility = \"hidden\";\n        }\n        \n        addToolTip( rangeLine, bindingOptions, rangeCount.toString() );\n\n        if ( bindingOptions.views!.statistics!.showRangeNumbers && rangeCount > 0 ) {\n            DomElement.addClass( rangeLine, \"range-line-number\" );\n\n            DomElement.createWithHTML( rangeLine, \"div\", \"count\", rangeCount.toString() );\n        }\n\n        if ( Is.definedFunction( bindingOptions.events!.onStatisticClick ) ) {\n            rangeLine.onclick = () => {\n                fireCustomTriggerEvent( bindingOptions.events!.onStatisticClick!, useColorRange );\n            };\n\n        } else {\n            DomElement.addClass( rangeLine, \"no-hover\" );\n        }\n\n        if ( Is.defined( useColorRange ) && isColorRangeVisible( bindingOptions, useColorRange.id! ) ) {\n            if ( Is.definedString( useColorRange.statisticsCssClassName ) ) {\n                DomElement.addClass( rangeLine, useColorRange.statisticsCssClassName! );\n            } else {\n                DomElement.addClass( rangeLine, useColorRange.cssClassName! );\n            }\n        }\n    }\n\n    function getLargestValuesForEachRangeType( bindingOptions: BindingOptions, colorRanges: ColorRange[] ) : LargestValuesForEachRangeType {\n        const data: TypeCountsData = getCurrentViewData( bindingOptions );\n\n        const result: LargestValuesForEachRangeType = {\n            types: {} as TypeCountsData,\n            largestValue: 0\n        } as LargestValuesForEachRangeType;\n\n        result.types[ Char.zero ] = 0;\n\n        for ( let monthIndex: number = 0; monthIndex < 12; monthIndex++ ) {\n            const totalDaysInMonth: number = DateTime.getTotalDaysInMonth( bindingOptions._currentView.year, monthIndex );\n    \n            for ( let dayIndex: number = 0; dayIndex < totalDaysInMonth; dayIndex++ ) {\n                const storageDate: string = toStorageDate( new Date( bindingOptions._currentView.year, monthIndex, dayIndex + 1 ) );\n\n                if ( data.hasOwnProperty( storageDate ) ) {\n                    const storageDateParts: string[] = getStorageDate( storageDate );\n                    const storageDateObject: Date = new Date( parseInt( storageDateParts[ 2 ] ), parseInt( storageDateParts[ 1 ] ), parseInt( storageDateParts[ 0 ] ) );\n                    const weekDayNumber: number = DateTime.getWeekdayNumber( storageDateObject ) + 1;\n\n                    if ( !isHoliday( bindingOptions, storageDateObject ).matched && isMonthVisible( bindingOptions.views!.statistics!.monthsToShow!, storageDateObject.getMonth() ) && isDayVisible( bindingOptions.views!.statistics!.daysToShow!, weekDayNumber ) ) {\n                        const useColorRange: ColorRange = getColorRange( bindingOptions, colorRanges, data[ storageDate ] );\n\n                        if ( !Is.defined( useColorRange ) ) {\n                            result.types[ Char.zero ]++;\n    \n                        } else {\n                            if ( !result.types.hasOwnProperty( useColorRange.minimum!.toString() ) ) {\n                                result.types[ useColorRange.minimum!.toString() ] = 0;\n                            }\n    \n                            result.types[ useColorRange.minimum! ]++;\n                            \n                            result.largestValue = Math.max( result.largestValue, result.types[ useColorRange.minimum! ] );\n                        }\n                    }\n                }\n            }\n        }\n\n        return result;\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Render:  Guide\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function renderControlViewGuide( bindingOptions: BindingOptions ) : void {\n        const guide: HTMLElement = DomElement.create( bindingOptions._currentView.element, \"div\", \"guide\" )\n        const mapTypes: HTMLElement = DomElement.create( guide, \"div\", \"map-types\" );\n        let noneTypeCount: number = 0;\n\n        for ( let storageDate in _elements_DateCounts[ bindingOptions._currentView.element.id ].typeData[ _configuration.unknownTrendText! ] ) {\n            if ( _elements_DateCounts[ bindingOptions._currentView.element.id ].typeData[ _configuration.unknownTrendText! ].hasOwnProperty( storageDate ) ) {\n                noneTypeCount++;\n                break;\n            }\n        }\n\n        if ( _elements_DateCounts[ bindingOptions._currentView.element.id ].totalTypes > 1 ) {\n            if ( Is.definedString( bindingOptions.description!.text ) ) {\n                const description: HTMLElement = DomElement.create( bindingOptions._currentView.element, \"div\", \"description\", guide );\n    \n                renderDescription( bindingOptions, description );\n            }\n\n            for ( let type in _elements_DateCounts[ bindingOptions._currentView.element.id ].typeData ) {\n                if ( type !== _configuration.unknownTrendText || noneTypeCount > 0 ) {\n                    if ( noneTypeCount === 0 && bindingOptions._currentView.type === _configuration.unknownTrendText ) {\n                        bindingOptions._currentView.type = type;\n                    }\n\n                    renderControlViewGuideTypeButton( bindingOptions, mapTypes, type );\n                }\n            }\n\n        } else {\n            renderDescription( bindingOptions, mapTypes );\n        }\n\n        if ( bindingOptions.guide!.enabled ) {\n            const mapToggles: HTMLElement = DomElement.create( guide, \"div\", \"map-toggles\" );\n\n            if ( bindingOptions.guide!.showLessAndMoreLabels ) {\n                let lessText: HTMLElement = DomElement.createWithHTML( mapToggles, \"div\", \"less-text\", _configuration.lessText! );\n    \n                if ( bindingOptions.guide!.colorRangeTogglesEnabled ) {\n                    lessText.onclick = () => {\n                        updateColorRangeToggles( bindingOptions, false );\n                    };\n        \n                } else {\n                    DomElement.addClass( lessText, \"no-click\" );\n                }\n            }\n    \n            const days: HTMLElement = DomElement.create( mapToggles, \"div\", \"days\" );\n            const colorRanges: ColorRange[] = getSortedColorRanges( bindingOptions );\n            const colorRangesLength: number = colorRanges.length;\n    \n            for ( let colorRangesIndex: number = 0; colorRangesIndex < colorRangesLength; colorRangesIndex++ ) {\n                renderControlViewGuideDay( bindingOptions, days, colorRanges[ colorRangesIndex ] );\n            }\n\n            if ( bindingOptions.guide!.showLessAndMoreLabels ) {\n                const moreText: HTMLElement = DomElement.createWithHTML( mapToggles, \"div\", \"more-text\", _configuration.moreText! );\n    \n                if ( bindingOptions.guide!.colorRangeTogglesEnabled ) {\n                    moreText.onclick = () => {\n                        updateColorRangeToggles( bindingOptions, true );\n                    };\n        \n                } else {\n                    DomElement.addClass( moreText, \"no-click\" );\n                }\n            }\n        }\n    }\n\n    function renderControlViewGuideTypeButton( bindingOptions: BindingOptions, mapTypes: HTMLElement, type: string ) : void {\n        const typeButton: HTMLElement = DomElement.createWithHTML( mapTypes, \"button\", \"type\", type );\n\n        if ( bindingOptions._currentView.type === type ) {\n            DomElement.addClass( typeButton, \"active\" );\n        }\n\n        typeButton.onclick = () => {\n            if ( bindingOptions._currentView.type !== type ) {\n                bindingOptions._currentView.type = type;\n\n                fireCustomTriggerEvent( bindingOptions.events!.onTypeSwitch!, type );\n                renderControlContainer( bindingOptions );\n            }\n        };\n    }\n\n    function renderControlViewGuideDay( bindingOptions: BindingOptions, days: HTMLElement, colorRange: ColorRange ) : void {\n        const day: HTMLElement = DomElement.create( days, \"div\" );\n        day.className = \"day\";\n\n        addToolTip( day, bindingOptions, colorRange.tooltipText! );\n\n        if ( isColorRangeVisible( bindingOptions, colorRange.id! ) ) {\n            if ( bindingOptions._currentView.view === ViewId.map && Is.definedString( colorRange.mapCssClassName ) ) {\n                DomElement.addClass( day, colorRange.mapCssClassName! );\n            } else if ( bindingOptions.views!.chart!.enabled && bindingOptions._currentView.view === ViewId.chart && Is.definedString( colorRange.chartCssClassName ) ) {\n                DomElement.addClass( day, colorRange.chartCssClassName! );\n            } else if ( bindingOptions.views!.statistics!.enabled && bindingOptions._currentView.view === ViewId.statistics && Is.definedString( colorRange.statisticsCssClassName ) ) {\n                DomElement.addClass( day, colorRange.statisticsCssClassName! );\n            } else {\n                DomElement.addClass( day, colorRange.cssClassName! );\n            }   \n        }\n\n        if ( bindingOptions.guide!.showNumbersInGuide ) {\n            DomElement.addClass( day, \"day-number\" );\n\n            day.innerHTML = colorRange.minimum + Char.plus;\n        }\n\n        if ( bindingOptions.guide!.colorRangeTogglesEnabled ) {\n            day.onclick = () => {\n                toggleColorRangeVisibleState( bindingOptions, colorRange.id! );\n            };\n\n        } else {\n            DomElement.addClass( day, \"no-hover\" );\n        }\n    }\n\n    function renderDescription( bindingOptions: BindingOptions, container: HTMLElement ) : void {\n        if ( Is.definedString( bindingOptions.description!.text ) ) {\n            if ( Is.definedString( bindingOptions.description!.url ) ) {\n                const link: HTMLAnchorElement = DomElement.createWithHTML( container, \"a\", \"label\", bindingOptions.description!.text! ) as HTMLAnchorElement;\n                link.href = bindingOptions.description!.url!;\n                link.target = bindingOptions.description!.urlTarget!;                \n\n            } else {\n                DomElement.createWithHTML( container, \"span\", \"label\", bindingOptions.description!.text! );\n            }\n        }\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Render:  Shared\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function renderDayToolTip( bindingOptions: BindingOptions, day: HTMLElement, date: Date, dateCount: number ) : void {\n        if ( Is.definedFunction( bindingOptions.events!.onDayToolTipRender ) ) {\n            addToolTip( day, bindingOptions, fireCustomTriggerEvent( bindingOptions.events!.onDayToolTipRender!, date, dateCount ) );\n        } else {\n\n            let tooltip: string = DateTime.getCustomFormattedDateText( _configuration, bindingOptions.tooltip!.dayText!, date );\n\n            if ( bindingOptions.showHolidaysInDayToolTips ) {\n                let holiday: IsHoliday = isHoliday( bindingOptions, date );\n\n                if ( holiday.matched && Is.definedString( holiday.name ) ) {\n                    tooltip += Char.colon + Char.space + holiday.name;\n                }\n            }\n\n            addToolTip( day, bindingOptions, tooltip );\n        }\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Data\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function createDateStorageForElement( elementId: string, bindingOptions: BindingOptions, storeLocalData: boolean = true ) : void {\n        _elements_DateCounts[ elementId ] = {\n            options: bindingOptions,\n            typeData: {},\n            totalTypes: 1\n        };\n\n        _elements_DateCounts[ elementId ].typeData[ _configuration.unknownTrendText! ] = {} as TypeCountsData;\n\n        if ( storeLocalData && !bindingOptions._currentView.isInFetchMode ) {\n            loadDataFromLocalStorage( bindingOptions );\n        }\n    }\n\n    function getCurrentViewData( bindingOptions: BindingOptions ) : TypeCountsData {\n        return _elements_DateCounts[ bindingOptions._currentView.element.id ].typeData[ bindingOptions._currentView.type ];\n    }\n\n    function isMonthVisible( monthsToShow: number[], month: number ) : boolean {\n        return monthsToShow.indexOf( month + 1 ) > Value.notFound;\n    }\n\n    function isDayVisible( daysToShow: number[], day: number ) : boolean {\n        return daysToShow.indexOf( day ) > Value.notFound;\n    }\n\n    function getYearsAvailableInData( bindingOptions: BindingOptions ) : number[] {\n        let years: number[] = [];\n\n        if ( bindingOptions.showOnlyDataForYearsAvailable ) {\n            let data: TypeCountsData = getCurrentViewData( bindingOptions );\n\n            for ( let storageDate in data ) {\n                if ( data.hasOwnProperty( storageDate ) ) {\n                    let year: number = parseInt( getStorageDateYear( storageDate ) );\n                    \n                    if ( years.indexOf( year ) === Value.notFound ) {\n                        years.push( year );\n                    }\n                }\n            }\n        }\n\n        years = years.sort( function( a, b ) {\n            return a - b;\n        } );\n\n        return years;\n    }\n\n    function isYearVisible( bindingOptions: BindingOptions, year: number ) : boolean {\n        return bindingOptions.yearsToHide!.indexOf( year ) === Value.notFound && ( bindingOptions._currentView.yearsAvailable.length === 0 || bindingOptions._currentView.yearsAvailable.indexOf( year ) > Value.notFound );\n    }\n\n    function isFirstVisibleYear( bindingOptions: BindingOptions, year: number ) : boolean {\n        return bindingOptions._currentView.yearsAvailable.length > 0 && year <= bindingOptions._currentView.yearsAvailable[ 0 ];\n    }\n\n    function isLastVisibleYear( bindingOptions: BindingOptions, year: number ) : boolean {\n        return bindingOptions._currentView.yearsAvailable.length > 0 && year >= bindingOptions._currentView.yearsAvailable[ bindingOptions._currentView.yearsAvailable.length - 1 ];\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Local Storage\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function loadDataFromLocalStorage( bindingOptions: BindingOptions ) : void {\n        if ( bindingOptions.useLocalStorageForData && window.localStorage ) {\n            const keysLength: number = window.localStorage.length;\n            const elementId: string = bindingOptions._currentView.element.id;\n\n            for ( let keyIndex: number = 0; keyIndex < keysLength; keyIndex++ ) {\n                const key : string = window.localStorage.key( keyIndex )!;\n\n                if ( Data.String.startsWithAnyCase( key, _local_Storage_Start_ID ) ) {\n                    const typesJson: string = window.localStorage.getItem( key )!;\n                    const typesObject: StringToJson = getObjectFromString( typesJson );\n\n                    if ( typesObject.parsed ) {\n                        _elements_DateCounts[ elementId ].typeData = typesObject.object;\n                        _elements_DateCounts[ elementId ].totalTypes = 0;\n\n                        for ( let type in _elements_DateCounts[ elementId ].typeData ) {\n                            if ( _elements_DateCounts[ elementId ].typeData.hasOwnProperty( type ) ) {\n                                _elements_DateCounts[ elementId ].totalTypes++;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    function storeDataInLocalStorage( bindingOptions: BindingOptions ) : void {\n        if ( bindingOptions.useLocalStorageForData && window.localStorage ) {\n            const elementId: string = bindingOptions._currentView.element.id;\n\n            clearLocalStorageObjects( bindingOptions );\n\n            const jsonData: string = JSON.stringify( _elements_DateCounts[ elementId ].typeData );\n\n            window.localStorage.setItem( _local_Storage_Start_ID + elementId, jsonData );\n        }\n    }\n\n    function clearLocalStorageObjects( bindingOptions: BindingOptions ) : void {\n        if ( bindingOptions.useLocalStorageForData && window.localStorage ) {\n            const keysLength: number = window.localStorage.length;\n            const keysToRemove: string[] = [];\n            const elementId: string = bindingOptions._currentView.element.id;\n\n            for ( let keyIndex: number = 0; keyIndex < keysLength; keyIndex++ ) {\n                if ( Data.String.startsWithAnyCase( window.localStorage.key( keyIndex )!, _local_Storage_Start_ID + elementId ) ) {\n                    keysToRemove.push( window.localStorage.key( keyIndex )! );\n                }\n            }\n\n            const keysToRemoveLength: number = keysToRemove.length;\n\n            for ( let keyToRemoveIndex: number = 0; keyToRemoveIndex < keysToRemoveLength; keyToRemoveIndex++ ) {\n                window.localStorage.removeItem( keysToRemove[ keyToRemoveIndex ] );\n            }\n        }\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Data Pulling\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function startDataPullTimer( bindingOptions: BindingOptions ) : void {\n        if ( bindingOptions._currentView.isInFetchMode ) {\n            if ( bindingOptions._currentView.isInFetchModeTimer === 0 ) {\n                pullDataFromCustomTrigger( bindingOptions );\n            }\n\n            if ( bindingOptions._currentView.isInFetchModeTimer === 0 ) {\n                bindingOptions._currentView.isInFetchModeTimer = setInterval( () => {\n                    pullDataFromCustomTrigger( bindingOptions );\n                    renderControlContainer( bindingOptions );\n                }, bindingOptions.dataFetchDelay );\n            }\n        }\n    }\n\n    function pullDataFromCustomTrigger( bindingOptions: BindingOptions ) : void {\n        const elementId: string = bindingOptions._currentView.element.id;\n        const data: TypeCountsData = fireCustomTriggerEvent( bindingOptions.events!.onDataFetch!, elementId );\n\n        if ( Is.definedObject( data ) ) {\n            createDateStorageForElement( elementId, bindingOptions, false );\n\n            for ( let storageDate in data ) {\n                if ( data.hasOwnProperty( storageDate ) ) {\n                    if ( !_elements_DateCounts[ elementId ].typeData[ _configuration.unknownTrendText! ].hasOwnProperty( storageDate ) ) {\n                        _elements_DateCounts[ elementId ].typeData[ _configuration.unknownTrendText! ][ storageDate ] = 0;\n                    }\n            \n                    _elements_DateCounts[ elementId ].typeData[ _configuration.unknownTrendText! ][ storageDate ] += data[ storageDate ];\n                }\n            }\n        }\n    }\n\n    function cancelAllPullDataTimers() : void {\n        for ( let elementId in _elements_DateCounts ) {\n            if ( _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n\n                if ( Is.defined( bindingOptions._currentView.isInFetchModeTimer ) ) {\n                    clearInterval( bindingOptions._currentView.isInFetchModeTimer );\n                    bindingOptions._currentView.isInFetchModeTimer = 0;\n                }\n            }\n        }\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Color Ranges\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function isColorRangeVisible( bindingOptions: BindingOptions, id: string ) : boolean {\n        let result: boolean = false;\n        \n        if ( id === _internal_Name_Holiday ) {\n            result = true;\n\n        } else {\n            const colorRangesLength : number = bindingOptions.colorRanges!.length;\n\n            for ( let colorRangesIndex: number = 0; colorRangesIndex < colorRangesLength; colorRangesIndex++ ) {\n                const colorRange: ColorRange = bindingOptions.colorRanges![ colorRangesIndex ];\n    \n                if ( colorRange.id === id && Data.getDefaultBoolean( colorRange.visible, true ) ) {\n                    result = true;\n                    break;\n                }\n            }\n        }\n\n        return result;\n    }\n\n    function updateColorRangeToggles( bindingOptions: BindingOptions, flag: boolean ) : void {\n        const colorRangesLength: number = bindingOptions.colorRanges!.length;\n\n        for ( let colorRangesIndex: number = 0; colorRangesIndex < colorRangesLength; colorRangesIndex++ ) {\n            bindingOptions.colorRanges![ colorRangesIndex ].visible = flag;\n\n            fireCustomTriggerEvent( bindingOptions.events!.onColorRangeTypeToggle!, bindingOptions.colorRanges![ colorRangesIndex ].id, flag );\n        }\n\n        renderControlContainer( bindingOptions );\n    }\n\n    function toggleColorRangeVisibleState( bindingOptions: BindingOptions, id: string ) : void {\n        const colorRangesLength: number = bindingOptions.colorRanges!.length;\n\n        for ( let colorRangesIndex: number = 0; colorRangesIndex < colorRangesLength; colorRangesIndex++ ) {\n            const colorRange: ColorRange = bindingOptions.colorRanges![ colorRangesIndex ];\n\n            if ( colorRange.id === id ) {\n                colorRange.visible = !Data.getDefaultBoolean( colorRange.visible, true );\n\n                fireCustomTriggerEvent( bindingOptions.events!.onColorRangeTypeToggle!, colorRange.id, colorRange.visible );\n                renderControlContainer( bindingOptions );\n                break;\n            }\n        }\n    }\n\n    function getColorRange( bindingOptions: BindingOptions, colorRanges: ColorRange[], dateCount: number, date: Date = null! ) : ColorRange {\n        let useColorRange: ColorRange = null!;\n\n        if ( Is.defined( date ) && isHoliday( bindingOptions, date ).matched ) {\n            useColorRange = {\n                cssClassName: \"holiday\",\n                id: _internal_Name_Holiday,\n                visible: true,\n                minimum: 0,\n            } as ColorRange;\n        }\n\n        if ( !Is.defined( useColorRange ) ) {\n            const colorRangesLength: number = colorRanges.length;\n\n            for ( let colorRangesIndex: number = 0; colorRangesIndex < colorRangesLength; colorRangesIndex++ ) {\n                const colorRange: ColorRange = colorRanges[ colorRangesIndex ];\n    \n                if ( dateCount >= colorRange.minimum! ) {\n                    useColorRange = colorRange;\n                } else {\n                    break;\n                }\n            }\n        }\n\n        return useColorRange;\n    }\n\n    function getColorRangeByMinimum( colorRanges: ColorRange[], minimum: number ) : ColorRange {\n        const colorRangesLength: number = colorRanges.length;\n        let useColorRange: ColorRange = null!;\n\n        for ( let colorRangesIndex: number = 0; colorRangesIndex < colorRangesLength; colorRangesIndex++ ) {\n            const colorRange: ColorRange = colorRanges[ colorRangesIndex ];\n\n            if ( minimum.toString() === colorRange.minimum!.toString() ) {\n                useColorRange = colorRange;\n                break;\n            }\n        }\n\n        return useColorRange;\n    }\n\n    function getSortedColorRanges( bindingOptions: BindingOptions ) : ColorRange[] {\n        return bindingOptions.colorRanges!.sort( function( a, b ) {\n            return a.minimum! - b.minimum!;\n        } );\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Holiday\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function isHoliday( bindingOptions: BindingOptions, date: Date ) : IsHoliday {\n        const result: IsHoliday = {\n            matched: false,\n            name: null!\n        } as IsHoliday;\n\n        const holidaysLength: number = bindingOptions.holidays!.length;\n        const day: number = date.getDate();\n        const month: number = date.getMonth() + 1;\n        const year: number = date.getFullYear();\n        \n        for ( let holidayIndex: number = 0; holidayIndex < holidaysLength; holidayIndex++ ) {\n            let holiday: Holiday = bindingOptions.holidays![ holidayIndex ];\n\n            if ( Is.definedString( holiday.date ) && holiday.showInViews ) {\n                const dateParts: string[] = holiday.date!.split( \"/\" );\n\n                if ( dateParts.length === 2 ) {\n                    result.matched = day === parseInt( dateParts[ 0 ] ) && month === parseInt( dateParts[ 1 ] );\n                } else if ( dateParts.length === 3 ) {\n                    result.matched = day === parseInt( dateParts[ 0 ] ) && month === parseInt( dateParts[ 1 ] ) && year === parseInt( dateParts[ 2 ] );\n                }\n\n                if ( result.matched ) {\n                    result.name = holiday.name!;\n                    break;\n                }\n            }\n        }\n\n        return result;\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Import\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function makeAreaDroppable( element: HTMLElement, bindingOptions: BindingOptions ) : void {\n        if ( bindingOptions.allowFileImports && !bindingOptions._currentView.isInFetchMode ) {\n            element.ondragover = DomElement.cancelBubble;\n            element.ondragenter = DomElement.cancelBubble;\n            element.ondragleave = DomElement.cancelBubble;\n    \n            element.ondrop = ( e: DragEvent ) => {\n                DomElement.cancelBubble( e );\n    \n                if ( Is.defined( window.FileReader ) && e.dataTransfer!.files.length > 0 ) {\n                    importFromFiles( e.dataTransfer!.files, bindingOptions );\n                }\n            };\n        }\n    }\n\n    function importFromFilesSelected( bindingOptions: BindingOptions ) : void {\n        const input: HTMLInputElement = DomElement.createWithNoContainer( \"input\" ) as HTMLInputElement;\n        input.type = \"file\";\n        input.accept = \".json, .txt, .csv\";\n        input.multiple = true;\n\n        input.onchange = () => {\n            importFromFiles( input.files!, bindingOptions );\n        };\n\n        input.click();\n    }\n\n    function importFromFiles( files: FileList, bindingOptions: BindingOptions ) : void {\n        const filesLength: number = files.length;\n        const filesCompleted: string[] = [];\n        const data: TypeCountsData = getCurrentViewData( bindingOptions );\n\n        const onLoadEnd: Function = ( filename: string, readingObject: TypeCountsData ) => {\n            filesCompleted.push( filename );\n\n            for ( let storageDate in readingObject ) {\n                if ( readingObject.hasOwnProperty( storageDate ) ) {\n                    if ( !data.hasOwnProperty( storageDate ) ) {\n                        data[ storageDate ] = 0;\n                    }\n\n                    data[ storageDate ] += readingObject[ storageDate ];\n                }\n            }\n            \n            if ( filesCompleted.length === filesLength ) {\n                fireCustomTriggerEvent( bindingOptions.events!.onImport!, bindingOptions._currentView.element );\n                renderControlContainer( bindingOptions );\n            }\n        };\n\n        for ( let fileIndex: number = 0; fileIndex < filesLength; fileIndex++ ) {\n            const file: File = files[ fileIndex ];\n            const fileExtension: string = file!.name!.split( \".\" )!.pop()!.toLowerCase();\n\n            if ( fileExtension === ExportType.json ) {\n                importFromJson( file, onLoadEnd );\n            } else if ( fileExtension === ExportType.txt ) {\n                importFromTxt( file, onLoadEnd );\n            } else if ( fileExtension === ExportType.csv ) {\n                importFromCsv( file, onLoadEnd );\n            }\n        }\n    }\n\n    function importFromJson( file: File, onLoadEnd: Function ) : void {\n        const reader: FileReader = new FileReader();\n        let readingObject: TypeCountsData = {} as TypeCountsData;\n\n        reader.readAsText( file );\n\n        reader.onloadend = () => {\n            onLoadEnd( file.name, readingObject );\n        };\n    \n        reader.onload = ( e: ProgressEvent<FileReader> ) => {\n            const JSON: StringToJson = getObjectFromString( e.target!.result );\n\n            if ( JSON.parsed && Is.definedObject( JSON.object ) ) {\n                readingObject = JSON.object;\n            }\n        };\n    }\n\n    function importFromTxt( file: File, onLoadEnd: Function ) : void {\n        const reader: FileReader = new FileReader();\n        const readingObject: TypeCountsData = {} as TypeCountsData;\n\n        reader.readAsText( file );\n\n        reader.onloadend = () => {\n            onLoadEnd( file.name, readingObject );\n        };\n    \n        reader.onload = ( e: ProgressEvent<FileReader> ) => {\n            const lines: string[] = e.target!.result!.toString().split( Char.newLine );\n            const linesLength: number = lines.length;\n\n            for ( let lineIndex: number = 0; lineIndex < linesLength; lineIndex++ ) {\n                const line: string[] = lines[ lineIndex ].split( Char.colon );\n\n                readingObject[ line[ 0 ].trim() ] = parseInt( line[ 1 ].trim() );\n            }\n        };\n    }\n\n    function importFromCsv( file: File, onLoadEnd: Function ) : void {\n        const reader: FileReader = new FileReader();\n        const readingObject: TypeCountsData = {} as TypeCountsData;\n\n        reader.readAsText( file );\n\n        reader.onloadend = () => {\n            onLoadEnd( file.name, readingObject );\n        };\n    \n        reader.onload = ( e: ProgressEvent<FileReader> ) => {\n            const data: string = e.target!.result!.toString().replace( new RegExp( \"\\\"\", \"g\" ), Char.empty );\n            const lines: string[] = data.split( Char.newLine );\n            \n            lines.shift();\n\n            let linesLength: number = lines.length;\n\n            for ( let lineIndex: number = 0; lineIndex < linesLength; lineIndex++ ) {\n                let line: string[] = lines[ lineIndex ].split( Char.comma );\n\n                readingObject[ line[ 0 ].trim() ] = parseInt( line[ 1 ].trim() );\n            }\n        };\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Export\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function exportAllData( bindingOptions: BindingOptions, exportType: string = null! ) : void {\n        let contents: string = null!;\n        const contentsMimeType: string = getExportMimeType( bindingOptions );\n        const contentExportType: string = Data.getDefaultString( exportType, bindingOptions.exportType! ).toLowerCase();\n\n        if ( contentExportType === ExportType.csv ) {\n            contents = getCsvContent( bindingOptions );\n        } else if ( contentExportType === ExportType.json ) {\n            contents = getJsonContent( bindingOptions );\n        } else if ( contentExportType === ExportType.xml ) {\n            contents = getXmlContents( bindingOptions );\n        } else if ( contentExportType === ExportType.txt ) {\n            contents = getTxtContents( bindingOptions );\n        }\n\n        if ( Is.definedString( contents ) ) {\n            const tempLink: HTMLElement = DomElement.create( document.body, \"a\" );\n            tempLink.style.display = \"none\";\n            tempLink.setAttribute( \"target\", \"_blank\" );\n            tempLink.setAttribute( \"href\", \"data:\" + contentsMimeType + \";charset=utf-8,\" + encodeURIComponent( contents ) );\n            tempLink.setAttribute( \"download\", getExportFilename( bindingOptions ) );\n            tempLink.click();\n            \n            document.body.removeChild( tempLink );\n\n            fireCustomTriggerEvent( bindingOptions.events!.onExport!, bindingOptions._currentView.element );\n        }\n    }\n\n    function getCsvContent( bindingOptions: BindingOptions ) : string {\n        const data: TypeCountsData = getExportData( bindingOptions );\n        const csvContents: string[] = [];\n\n        for ( let storageDate in data ) {\n            if ( data.hasOwnProperty( storageDate ) ) {\n                csvContents.push( getCsvValueLine( [ getCsvValue( storageDate ), getCsvValue( data[ storageDate ].toString() ) ] ) );\n            }\n        }\n\n        if ( csvContents.length > 0 ) {\n            csvContents.unshift( getCsvValueLine( [ getCsvValue( _configuration.dateText! ), getCsvValue( _configuration.countText! ) ] ) );\n        }\n        \n        return csvContents.join( Char.newLine );\n    }\n\n    function getJsonContent( bindingOptions: BindingOptions ) : string {\n        return JSON.stringify( getExportData( bindingOptions ) );\n    }\n\n    function getXmlContents( bindingOptions: BindingOptions ) : string {\n        const data: TypeCountsData = getExportData( bindingOptions );\n        const contents: string[] = [];\n\n        contents.push( \"<?xml version=\\\"1.0\\\" ?>\" );\n        contents.push( \"<Dates>\" );\n\n        for ( let storageDate in data ) {\n            if ( data.hasOwnProperty( storageDate ) ) {\n                contents.push( \"<Date>\" );\n                contents.push( \"<FullDate>\" + storageDate + \"</FullDate>\" );\n                contents.push( \"<Count>\" + data[ storageDate ].toString() + \"</Count>\" );\n                contents.push( \"</Date>\" );\n            }\n        }\n\n        contents.push( \"</Dates>\" );\n\n        return contents.join( Char.newLine );\n    }\n\n    function getTxtContents( bindingOptions: BindingOptions ) : string {\n        const data: TypeCountsData = getExportData( bindingOptions );\n        const contents: string[] = [];\n\n        for ( let storageDate in data ) {\n            if ( data.hasOwnProperty( storageDate ) ) {\n                contents.push( storageDate + Char.colon + Char.space + data[ storageDate ].toString() );\n            }\n        }\n\n        return contents.join( Char.newLine );\n    }\n\n    function getExportData( bindingOptions: BindingOptions ) : TypeCountsData {\n        const contents: TypeCountsData = {} as TypeCountsData;\n        const data: TypeCountsData = getCurrentViewData( bindingOptions );\n\n        if ( bindingOptions.exportOnlyYearBeingViewed ) {\n            for ( let monthIndex: number = 0; monthIndex < 12; monthIndex++ ) {\n                const totalDaysInMonth: number = DateTime.getTotalDaysInMonth( bindingOptions._currentView.year, monthIndex );\n        \n                for ( let dayIndex: number = 0; dayIndex < totalDaysInMonth; dayIndex++ ) {\n                    const storageDate2: string = toStorageDate( new Date( bindingOptions._currentView.year, monthIndex, dayIndex + 1 ) );\n\n                    if ( data.hasOwnProperty( storageDate2 ) ) {\n                        contents[ storageDate2 ] = data[ storageDate2 ];\n                    }\n                }\n            }\n\n        } else {\n            const storageDates: string[] = [];\n\n            for ( let storageDate1 in data ) {\n                if ( data.hasOwnProperty( storageDate1 ) ) {\n                    storageDates.push( storageDate1 );\n                }\n            }\n    \n            storageDates.sort();\n\n            const storageDatesLength: number = storageDates.length;\n\n            for ( let storageDateIndex: number = 0; storageDateIndex < storageDatesLength; storageDateIndex++ ) {\n                const storageDate3: string = storageDates[ storageDateIndex ];\n    \n                if ( data.hasOwnProperty( storageDate3 ) ) {\n                    contents[ storageDate3 ] = data[ storageDate3 ];\n                }\n            }\n        }\n\n        return contents;\n    }\n\n    function getExportMimeType( bindingOptions: BindingOptions ) : string {\n        let result: string = null!;\n\n        if ( bindingOptions.exportType!.toLowerCase() === ExportType.csv ) {\n            result = \"text/csv\";\n        } else if ( bindingOptions.exportType!.toLowerCase() === ExportType.json ) {\n            result = \"application/json\";\n        } else if ( bindingOptions.exportType!.toLowerCase() === ExportType.xml ) {\n            result = \"application/xml\";\n        } else if ( bindingOptions.exportType!.toLowerCase() === ExportType.txt ) {\n            result = \"text/plain\";\n        }\n\n        return result;\n    }\n\n    function getExportFilename( bindingOptions: BindingOptions ) : string {\n        const date: Date = new Date();\n        const datePart: string = Data.String.padNumber( date.getDate() ) + Char.dash + Data.String.padNumber( date.getMonth() + 1 ) + Char.dash + date.getFullYear();\n        const timePart: string = Data.String.padNumber( date.getHours() ) + Char.dash + Data.String.padNumber( date.getMinutes() );\n        let filenameStart: string = Char.empty;\n\n        if ( bindingOptions._currentView.type !== _configuration.unknownTrendText ) {\n            filenameStart = bindingOptions._currentView.type.toLowerCase().replace( Char.space, Char.underscore ) + Char.underscore;\n        }\n\n        return filenameStart + datePart + Char.underscore + timePart + \".\" + bindingOptions.exportType!.toLowerCase();\n    }\n\n    function getCsvValue( text: string ) : string {\n        let result: string = text.toString().replace( /(\\r\\n|\\n|\\r)/gm, Char.empty ).replace( /(\\s\\s)/gm, Char.space );\n        result = result.replace( /\"/g, '\"\"' );\n        result = '\"' + result + '\"';\n\n        return result;\n    }\n\n    function getCsvValueLine( csvValues: string[] ) : string {\n        return csvValues.join( \",\" );\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Attribute Options\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function buildAttributeOptions( newOptions: any ) : BindingOptions {\n        let options: BindingOptions = Data.getDefaultObject( newOptions, {} as BindingOptions );\n        options.views = Data.getDefaultObject( options.views, {} );\n        options.exportOnlyYearBeingViewed = Data.getDefaultBoolean( options.exportOnlyYearBeingViewed, true );\n        options.year = Data.getDefaultNumber( options.year, new Date().getFullYear() );\n        options.view = Data.getDefaultString( options.view, ViewName.map );\n        options.exportType = Data.getDefaultString( options.exportType, ExportType.csv );\n        options.useLocalStorageForData = Data.getDefaultBoolean( options.useLocalStorageForData, false );\n        options.allowFileImports = Data.getDefaultBoolean( options.allowFileImports, true );\n        options.yearsToHide = Data.getDefaultArray( options.yearsToHide, [] );\n        options.dataFetchDelay = Data.getDefaultNumber( options.dataFetchDelay, 60000 );\n        options.showOnlyDataForYearsAvailable = Data.getDefaultBoolean( options.showOnlyDataForYearsAvailable, false );\n        options.showHolidaysInDayToolTips = Data.getDefaultBoolean( options.showHolidaysInDayToolTips, false );\n        \n        options = buildAttributeOptionColorRanges( options );\n        options = buildAttributeOptionHolidays( options );\n        options = buildAttributeOptionTitle( options );\n        options = buildAttributeOptionDescription( options );\n        options = buildAttributeOptionGuide( options );\n        options = buildAttributeOptionToolTip( options );\n        options = buildAttributeOptionMapView( options );\n        options = buildAttributeOptionChartView( options );\n        options = buildAttributeOptionDaysView( options );\n        options = buildAttributeOptionStatisticsView( options );\n        options = buildAttributeOptionCustomTriggers( options );\n        \n        return options;\n    }\n\n    function buildAttributeOptionColorRanges( options: BindingOptions ) : BindingOptions {\n        if ( Is.definedArray( options.colorRanges ) ) {\n            const colorRangesLength: number = options.colorRanges!.length;\n\n            for ( let colorRangeIndex: number = 0; colorRangeIndex < colorRangesLength; colorRangeIndex++ ) {\n                const colorRange: ColorRange = options.colorRanges![ colorRangeIndex ];\n\n                colorRange.id = Data.getDefaultString( colorRange.id, Data.String.newGuid() );\n                colorRange.name = Data.getDefaultString( colorRange.name, Char.empty );\n                colorRange.minimum = Data.getDefaultNumber( colorRange.minimum, 0 );\n                colorRange.cssClassName = Data.getDefaultString( colorRange.cssClassName, Char.empty );\n                colorRange.mapCssClassName = Data.getDefaultString( colorRange.mapCssClassName, Char.empty );\n                colorRange.chartCssClassName = Data.getDefaultString( colorRange.chartCssClassName, Char.empty );\n                colorRange.statisticsCssClassName = Data.getDefaultString( colorRange.statisticsCssClassName, Char.empty );\n                colorRange.tooltipText = Data.getDefaultString( colorRange.tooltipText, Char.empty );\n                colorRange.visible = Data.getDefaultBoolean( colorRange.visible, true );\n            }\n\n        } else {\n            options.colorRanges = [\n                {\n                    id: Data.String.newGuid(),\n                    name: \"Day Color 1\",\n                    minimum: 10,\n                    cssClassName: \"day-color-1\",\n                    tooltipText: \"Day Color 1\",\n                    visible: true\n                },\n                {\n                    id: Data.String.newGuid(),\n                    name: \"Day Color 2\",\n                    minimum: 15,\n                    cssClassName: \"day-color-2\",\n                    tooltipText: \"Day Color 2\",\n                    visible: true\n                },\n                {\n                    id: Data.String.newGuid(),\n                    name: \"Day Color 3\",\n                    minimum: 20,\n                    cssClassName: \"day-color-3\",\n                    tooltipText: \"Day Color 3\",\n                    visible: true\n                },\n                {\n                    id: Data.String.newGuid(),\n                    name: \"Day Color 4\",\n                    minimum: 25,\n                    cssClassName: \"day-color-4\",\n                    tooltipText: \"Day Color 4\",\n                    visible: true\n                }\n            ];\n        }\n\n        return options;\n    }\n\n    function buildAttributeOptionHolidays( options: BindingOptions ) : BindingOptions {\n        if ( Is.definedArray( options.holidays ) ) {\n            const holidaysLength: number = options.holidays!.length;\n\n            for ( let holidayIndex: number = 0; holidayIndex < holidaysLength; holidayIndex++ ) {\n                const holiday: Holiday = options.holidays![ holidayIndex ];\n                \n                holiday.date = Data.getDefaultString( holiday.date, Char.empty );\n                holiday.name = Data.getDefaultString( holiday.name, Char.empty );\n                holiday.showInViews = Data.getDefaultBoolean( holiday.showInViews, true );\n            }\n\n        } else {\n            options.holidays = [];\n        }\n\n        return options;\n    }\n\n    function buildAttributeOptionTitle( options: BindingOptions ) : BindingOptions {\n        options.title = Data.getDefaultObject( options.title, {} as Title );\n        options.title!.text = Data.getDefaultString( options.title!.text, \"Heat.js\" );\n        options.title!.showText = Data.getDefaultBoolean( options.title!.showText, true );\n        options.title!.showYearSelector = Data.getDefaultBoolean( options.title!.showYearSelector, true );\n        options.title!.showRefreshButton = Data.getDefaultBoolean( options.title!.showRefreshButton, false );\n        options.title!.showExportButton = Data.getDefaultBoolean( options.title!.showExportButton, false );\n        options.title!.extraSelectionYears = Data.getDefaultNumber( options.title!.extraSelectionYears, 50 );\n        options.title!.showYearSelectionDropDown = Data.getDefaultBoolean( options.title!.showYearSelectionDropDown, true );\n        options.title!.showImportButton = Data.getDefaultBoolean( options.title!.showImportButton, false );\n        options.title!.showConfigurationButton = Data.getDefaultBoolean( options.title!.showConfigurationButton, true );\n        options.title!.showTitleDropDownButton = Data.getDefaultBoolean( options.title!.showTitleDropDownButton, true );\n        options.title!.showTitleDropDownHeaders = Data.getDefaultBoolean( options.title!.showTitleDropDownHeaders, true );\n\n        return options;\n    }\n\n    function buildAttributeOptionDescription( options: BindingOptions ) : BindingOptions {\n        options.description = Data.getDefaultObject( options.description, {} as Description );\n        options.description!.text = Data.getDefaultString( options.description!.text, Char.empty );\n        options.description!.url = Data.getDefaultString( options.description!.url, Char.empty );\n        options.description!.urlTarget = Data.getDefaultString( options.description!.urlTarget, \"_blank\" );\n\n        return options;\n    }\n\n    function buildAttributeOptionGuide( options: BindingOptions ) : BindingOptions {\n        options.guide = Data.getDefaultObject( options.guide, {} as Guide );\n        options.guide!.enabled = Data.getDefaultBoolean( options.guide!.enabled, true );\n        options.guide!.colorRangeTogglesEnabled = Data.getDefaultBoolean( options.guide!.colorRangeTogglesEnabled, true );\n        options.guide!.showLessAndMoreLabels = Data.getDefaultBoolean( options.guide!.showLessAndMoreLabels, true );\n        options.guide!.showNumbersInGuide = Data.getDefaultBoolean( options.guide!.showNumbersInGuide, false );\n\n        return options;\n    }\n\n    function buildAttributeOptionToolTip( options: BindingOptions ) : BindingOptions {\n        options.tooltip = Data.getDefaultObject( options.tooltip, {} as Tooltip );\n        options.tooltip!.delay = Data.getDefaultNumber( options.tooltip!.delay, 750 );\n        options.tooltip!.dayText = Data.getDefaultString( options.tooltip!.dayText, \"{d}{o} {mmmm} {yyyy}\" );\n\n        return options;\n    }\n\n    function buildAttributeOptionMapView( options: BindingOptions ) : BindingOptions {\n        options.views!.map = Data.getDefaultObject( options.views!.map, {} as Map );\n        options.views!.map!.showMonthDayGaps = Data.getDefaultBoolean( options.views!.map!.showMonthDayGaps, true );\n        options.views!.map!.showDayNames = Data.getDefaultBoolean( options.views!.map!.showDayNames, true );\n        options.views!.map!.placeMonthNamesOnTheBottom = Data.getDefaultBoolean( options.views!.map!.placeMonthNamesOnTheBottom, false );\n        options.views!.map!.showDayNumbers = Data.getDefaultBoolean( options.views!.map!.showDayNumbers, false );\n        options.views!.map!.showMonthNames = Data.getDefaultBoolean( options.views!.map!.showMonthNames, true );\n        options.views!.map!.showDaysInReverseOrder = Data.getDefaultBoolean( options.views!.map!.showDaysInReverseOrder, false );\n        options.views!.map!.showNoDataMessageWhenDataIsNotAvailable = Data.getDefaultBoolean( options.views!.map!.showNoDataMessageWhenDataIsNotAvailable, false );\n        options.views!.map!.showMinimalDayNames = Data.getDefaultBoolean( options.views!.map!.showMinimalDayNames, false );\n        options.views!.map!.showMonthsInReverseOrder = Data.getDefaultBoolean( options.views!.map!.showMonthsInReverseOrder, false );\n        options.views!.map!.keepScrollPositions = Data.getDefaultBoolean( options.views!.map!.keepScrollPositions, false );\n\n        if ( Is.invalidOptionArray( options.views!.map!.monthsToShow ) ) {\n            options.views!.map!.monthsToShow = _default_MonthsToShow;\n        }\n\n        if ( Is.invalidOptionArray( options.views!.map!.daysToShow ) ) {\n            options.views!.map!.daysToShow = _default_DaysToShow;\n        }\n\n        return options;\n    }\n\n    function buildAttributeOptionChartView( options: BindingOptions ) : BindingOptions {\n        options.views!.chart = Data.getDefaultObject( options.views!.chart, {} as Chart );\n        options.views!.chart!.enabled = Data.getDefaultBoolean( options.views!.chart!.enabled, true );\n        options.views!.chart!.showChartYLabels = Data.getDefaultBoolean( options.views!.chart!.showChartYLabels, true );\n        options.views!.chart!.showMonthNames = Data.getDefaultBoolean( options.views!.chart!.showMonthNames, true );\n        options.views!.chart!.showLineNumbers = Data.getDefaultBoolean( options.views!.chart!.showLineNumbers, false );\n        options.views!.chart!.showInReverseOrder = Data.getDefaultBoolean( options.views!.chart!.showInReverseOrder, false );\n        options.views!.chart!.keepScrollPositions = Data.getDefaultBoolean( options.views!.chart!.keepScrollPositions, false );\n\n        if ( Is.invalidOptionArray( options.views!.chart!.monthsToShow ) ) {\n            options.views!.chart!.monthsToShow = _default_MonthsToShow;\n        }\n\n        if ( Is.invalidOptionArray( options.views!.chart!.daysToShow ) ) {\n            options.views!.chart!.daysToShow = _default_DaysToShow;\n        }\n\n        return options;\n    }\n\n    function buildAttributeOptionDaysView( options: BindingOptions ) : BindingOptions {\n        options.views!.days = Data.getDefaultObject( options.views!.days, {} as Days );\n        options.views!.days!.enabled = Data.getDefaultBoolean( options.views!.days!.enabled, true );\n        options.views!.days!.showChartYLabels = Data.getDefaultBoolean( options.views!.days!.showChartYLabels, true );\n        options.views!.days!.showDayNames = Data.getDefaultBoolean( options.views!.days!.showDayNames, true );\n        options.views!.days!.showInReverseOrder = Data.getDefaultBoolean( options.views!.days!.showInReverseOrder, false );\n        options.views!.days!.showDayNumbers = Data.getDefaultBoolean( options.views!.days!.showDayNumbers, false );\n        options.views!.days!.keepScrollPositions = Data.getDefaultBoolean( options.views!.days!.keepScrollPositions, false );\n\n        if ( Is.invalidOptionArray( options.views!.days!.monthsToShow ) ) {\n            options.views!.days!.monthsToShow = _default_MonthsToShow;\n        }\n\n        if ( Is.invalidOptionArray( options.views!.days!.daysToShow ) ) {\n            options.views!.days!.daysToShow = _default_DaysToShow;\n        }\n\n        return options;\n    }\n\n    function buildAttributeOptionStatisticsView( options: BindingOptions ) : BindingOptions {\n        options.views!.statistics = Data.getDefaultObject( options.views!.statistics, {} as Statistics );\n        options.views!.statistics!.enabled = Data.getDefaultBoolean( options.views!.statistics!.enabled, true );\n        options.views!.statistics!.showChartYLabels = Data.getDefaultBoolean( options.views!.statistics!.showChartYLabels, true );\n        options.views!.statistics!.showColorRangeLabels = Data.getDefaultBoolean( options.views!.statistics!.showColorRangeLabels, true );\n        options.views!.statistics!.useColorRangeNamesForLabels = Data.getDefaultBoolean( options.views!.statistics!.useColorRangeNamesForLabels, false );\n        options.views!.statistics!.showRangeNumbers = Data.getDefaultBoolean( options.views!.statistics!.showRangeNumbers, false );\n        options.views!.statistics!.showInReverseOrder = Data.getDefaultBoolean( options.views!.statistics!.showInReverseOrder, false );\n        options.views!.statistics!.keepScrollPositions = Data.getDefaultBoolean( options.views!.statistics!.keepScrollPositions, false );\n\n        if ( Is.invalidOptionArray( options.views!.statistics!.monthsToShow ) ) {\n            options.views!.statistics!.monthsToShow = _default_MonthsToShow;\n        }\n\n        if ( Is.invalidOptionArray( options.views!.statistics!.daysToShow ) ) {\n            options.views!.statistics!.daysToShow = _default_DaysToShow;\n        }\n\n        return options;\n    }\n\n    function buildAttributeOptionCustomTriggers( options : BindingOptions ) : BindingOptions {\n        options.events = Data.getDefaultObject( options.events, {} as Events );\n        options.events!.onDayClick = Data.getDefaultFunction( options.events!.onDayClick, null! );\n        options.events!.onBackYear = Data.getDefaultFunction( options.events!.onBackYear, null! );\n        options.events!.onNextYear = Data.getDefaultFunction( options.events!.onNextYear, null! );\n        options.events!.onRefresh = Data.getDefaultFunction( options.events!.onRefresh, null! );\n        options.events!.onBeforeRender = Data.getDefaultFunction( options.events!.onBeforeRender, null! );\n        options.events!.onRenderComplete = Data.getDefaultFunction( options.events!.onRenderComplete, null! );\n        options.events!.onDestroy = Data.getDefaultFunction( options.events!.onDestroy, null! );\n        options.events!.onExport = Data.getDefaultFunction( options.events!.onExport, null! );\n        options.events!.onSetYear = Data.getDefaultFunction( options.events!.onSetYear, null! );\n        options.events!.onTypeSwitch = Data.getDefaultFunction( options.events!.onTypeSwitch, null! );\n        options.events!.onDayToolTipRender = Data.getDefaultFunction( options.events!.onDayToolTipRender, null! );\n        options.events!.onAdd = Data.getDefaultFunction( options.events!.onAdd, null! );\n        options.events!.onRemove = Data.getDefaultFunction( options.events!.onRemove, null! );\n        options.events!.onReset = Data.getDefaultFunction( options.events!.onReset, null! );\n        options.events!.onViewSwitch = Data.getDefaultFunction( options.events!.onViewSwitch, null! );\n        options.events!.onColorRangeTypeToggle = Data.getDefaultFunction( options.events!.onColorRangeTypeToggle, null! );\n        options.events!.onImport = Data.getDefaultFunction( options.events!.onImport, null! );\n        options.events!.onStatisticClick = Data.getDefaultFunction( options.events!.onStatisticClick, null! );\n        options.events!.onDataFetch = Data.getDefaultFunction( options.events!.onDataFetch, null! );\n        options.events!.onClear = Data.getDefaultFunction( options.events!.onClear, null! );\n        options.events!.onUpdate = Data.getDefaultFunction( options.events!.onUpdate, null! );\n        options.events!.onOptionsUpdate = Data.getDefaultFunction( options.events!.onOptionsUpdate, null! );\n        options.events!.onWeekDayClick = Data.getDefaultFunction( options.events!.onWeekDayClick, null! );\n\n        return options;\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Triggering Custom Events\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function fireCustomTriggerEvent<Type>( triggerFunction: Function, ...args : any[] ) : Type {\n        let result: any = null;\n\n        if ( Is.definedFunction( triggerFunction ) ) {\n            result = triggerFunction.apply( null, [].slice.call( args, 0 ) );\n        }\n\n        return result;\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Default Parameter/Option Handling\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function getObjectFromString( objectString: any ) : StringToJson {\n        const result: StringToJson = {\n            parsed: true,\n            object: null\n        } as StringToJson;\n\n        try {\n            if ( Is.definedString( objectString ) ) {\n                result.object = JSON.parse( objectString );\n            }\n\n        } catch ( e1: any ) {\n            try {\n                result.object = eval( \"(\" + objectString + \")\" );\n\n                if ( Is.definedFunction( result.object ) ) {\n                    result.object = result.object();\n                }\n                \n            } catch ( e2: any ) {\n                if ( !_configuration.safeMode ) {\n                    console.error( _configuration.objectErrorText!.replace( \"{{error_1}}\",  e1.message ).replace( \"{{error_2}}\",  e2.message ) );\n                    result.parsed = false;\n                }\n                \n                result.object = null;\n            }\n        }\n\n        return result;\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Storage Dates\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function toStorageDate( date: Date ) : string {\n        return date.getFullYear() + Char.dash + Data.String.padNumber( date.getMonth() + 1 ) + Char.dash + Data.String.padNumber( date.getDate() );\n    }\n\n    function getStorageDate( data: string ) : string[] {\n        return data.split( Char.dash );\n    }\n\n    function getStorageDateYear( data: string ) : string {\n        return data.split( Char.dash )[ 0 ];\n    }\n\n\n\t/*\n\t * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t * Public API Functions:  Helpers:  Manage Instances\n\t * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t */\n\n    function moveToPreviousYear( bindingOptions: BindingOptions, callCustomTrigger: boolean = true ) : void {\n        let render: boolean = true;\n        let year: number = bindingOptions._currentView.year;\n            \n        year--;\n\n        while ( !isYearVisible( bindingOptions, year ) ) {\n            if ( isFirstVisibleYear( bindingOptions, year ) ) {\n                render = false;\n                break;\n            }\n\n            year--;\n        }\n\n        if ( render ) {\n            bindingOptions._currentView.year = year;\n\n            renderControlContainer( bindingOptions );\n\n            if ( callCustomTrigger ) {\n                fireCustomTriggerEvent( bindingOptions.events!.onBackYear!, bindingOptions._currentView.year );\n            }\n        }\n    }\n\n    function moveToNextYear( bindingOptions: BindingOptions, callCustomTrigger: boolean = true ) : void {\n        let render: boolean = true;\n        let year: number = bindingOptions._currentView.year;\n\n        year++;\n\n        while ( !isYearVisible( bindingOptions, year ) ) {\n            if ( isLastVisibleYear( bindingOptions, year ) ) {\n                render = false;\n                break;\n            }\n\n            year++;\n        }\n\n        if ( render ) {\n            bindingOptions._currentView.year = year;\n\n            renderControlContainer( bindingOptions );\n\n            if ( callCustomTrigger ) {\n                fireCustomTriggerEvent( bindingOptions.events!.onBackYear!, bindingOptions._currentView.year );\n            }\n        }\n    }\n\n\n\t/*\n\t * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t * Public API Functions:  Helpers:  Destroy\n\t * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t */\n\n    function destroyElement( bindingOptions: BindingOptions ) : void {\n        bindingOptions._currentView.element.innerHTML = Char.empty;\n\n        DomElement.removeClass( bindingOptions._currentView.element, \"heat-js\" );\n        assignToolTipEvents( bindingOptions, false );\n\n        document.body.removeChild( bindingOptions._currentView.tooltip );\n\n        if ( bindingOptions._currentView.isInFetchMode && Is.defined( bindingOptions._currentView.isInFetchModeTimer ) ) {\n            clearInterval( bindingOptions._currentView.isInFetchModeTimer );\n        }\n\n        fireCustomTriggerEvent( bindingOptions.events!.onDestroy!, bindingOptions._currentView.element );\n    }\n\n\n\t/*\n\t * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t * Public API Functions:  Helpers:  Configuration\n\t * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t */\n\n    function buildDefaultConfiguration( newConfiguration: Configuration = null! ) : void {\n        _configuration = Data.getDefaultObject( newConfiguration, {} as Configuration );\n        _configuration.safeMode = Data.getDefaultBoolean( _configuration.safeMode, true );\n        _configuration.domElementTypes = Data.getDefaultStringOrArray( _configuration.domElementTypes, [ \"*\" ] );\n\n        buildDefaultConfigurationStrings();\n        buildDefaultConfigurationArrays();\n    }\n\n    function buildDefaultConfigurationStrings() : void {\n        _configuration.stText = Data.getDefaultAnyString( _configuration.stText, \"st\" );\n        _configuration.ndText = Data.getDefaultAnyString( _configuration.ndText, \"nd\" );\n        _configuration.rdText = Data.getDefaultAnyString( _configuration.rdText, \"rd\" );\n        _configuration.thText = Data.getDefaultAnyString( _configuration.thText, \"th\" );\n        _configuration.backButtonText = Data.getDefaultAnyString( _configuration.backButtonText, \"Back\" );\n        _configuration.nextButtonText = Data.getDefaultAnyString( _configuration.nextButtonText, \"Next\" );\n        _configuration.refreshButtonText = Data.getDefaultAnyString( _configuration.refreshButtonText, \"Refresh\" );\n        _configuration.exportButtonText = Data.getDefaultAnyString( _configuration.exportButtonText, \"Export\" );\n        _configuration.lessText = Data.getDefaultAnyString( _configuration.lessText, \"Less\" );\n        _configuration.moreText = Data.getDefaultAnyString( _configuration.moreText, \"More\" );\n        _configuration.dateText = Data.getDefaultAnyString( _configuration.dateText, \"Date\" );\n        _configuration.countText = Data.getDefaultAnyString( _configuration.countText, \"Count\" );\n        _configuration.mapText = Data.getDefaultAnyString( _configuration.mapText, \"Map\" );\n        _configuration.chartText = Data.getDefaultAnyString( _configuration.chartText, \"Chart\" );\n        _configuration.noChartDataMessage = Data.getDefaultAnyString( _configuration.noChartDataMessage, \"There is currently no data to view.\" );\n        _configuration.statisticsText = Data.getDefaultAnyString( _configuration.statisticsText, \"Statistics\" );\n        _configuration.noStatisticsDataMessage = Data.getDefaultAnyString( _configuration.noStatisticsDataMessage, \"There are currently no statistics to view.\" );\n        _configuration.unknownTrendText = Data.getDefaultAnyString( _configuration.unknownTrendText, \"Unknown\" );\n        _configuration.importButtonText = Data.getDefaultAnyString( _configuration.importButtonText, \"Import\" );\n        _configuration.noMapDataMessage = Data.getDefaultAnyString( _configuration.noMapDataMessage, \"There is currently no data to view.\" );\n        _configuration.objectErrorText = Data.getDefaultAnyString( _configuration.objectErrorText, \"Errors in object: {{error_1}}, {{error_2}}\" );\n        _configuration.attributeNotValidErrorText = Data.getDefaultAnyString( _configuration.attributeNotValidErrorText, \"The attribute '{{attribute_name}}' is not a valid object.\" );\n        _configuration.attributeNotSetErrorText = Data.getDefaultAnyString( _configuration.attributeNotSetErrorText, \"The attribute '{{attribute_name}}' has not been set correctly.\" );\n        _configuration.closeToolTipText = Data.getDefaultAnyString( _configuration.closeToolTipText, \"Close\" );\n        _configuration.configurationToolTipText = Data.getDefaultAnyString( _configuration.configurationToolTipText, \"Configuration\" );\n        _configuration.configurationTitleText = Data.getDefaultAnyString( _configuration.configurationTitleText, \"Configuration\" );\n        _configuration.visibleMonthsText = Data.getDefaultAnyString( _configuration.visibleMonthsText, \"Visible Months\" );\n        _configuration.visibleDaysText = Data.getDefaultAnyString( _configuration.visibleDaysText, \"Visible Days\" );\n        _configuration.dataText = Data.getDefaultAnyString( _configuration.dataText, \"Data\" );\n        _configuration.colorRangesText = Data.getDefaultAnyString( _configuration.colorRangesText, \"Color Ranges\" );\n        _configuration.yearText = Data.getDefaultAnyString( _configuration.yearText, \"Year\" );\n        _configuration.daysText = Data.getDefaultAnyString( _configuration.daysText, \"Days\" );\n        _configuration.noDaysDataMessage = Data.getDefaultAnyString( _configuration.noDaysDataMessage, \"There are currently no days to view.\" );\n    }\n\n    function buildDefaultConfigurationArrays() : void {\n        if ( Is.invalidOptionArray( _configuration.monthNames, 12 ) ) {\n            _configuration.monthNames = [\n                \"Jan\",\n                \"Feb\",\n                \"Mar\",\n                \"Apr\",\n                \"May\",\n                \"Jun\",\n                \"Jul\",\n                \"Aug\",\n                \"Sep\",\n                \"Oct\",\n                \"Nov\",\n                \"Dec\"\n            ];\n        }\n\n        if ( Is.invalidOptionArray( _configuration.dayNames, 7 ) ) {\n            _configuration.dayNames = [\n                \"Mon\",\n                \"Tue\",\n                \"Wed\",\n                \"Thu\",\n                \"Fri\",\n                \"Sat\",\n                \"Sun\"\n            ];\n        }\n    }\n\n\n\t/*\n\t * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t * Public API Functions:\n\t * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t */\n\n    const _public: PublicApi = {\n        /*\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         * Public Functions:  Manage Dates\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         */\n\n        addDates: function ( elementId: string, dates: Date[], type: string = null!, triggerRefresh: boolean = true ) : PublicApi {\n            if ( Is.definedString( elementId ) && Is.definedArray( dates ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n                \n                if ( !bindingOptions._currentView.isInFetchMode ) {\n                    type = Data.getDefaultString( type, _configuration.unknownTrendText! );\n\n                    const datesLength: number = dates.length;\n        \n                    for ( let dateIndex: number = 0; dateIndex < datesLength; dateIndex++ ) {\n                        _public.addDate( elementId, dates[ dateIndex ], type, false );\n                    }\n        \n                    if ( triggerRefresh ) {\n                        renderControlContainer( bindingOptions, true );\n                    }\n                }\n            }\n    \n            return _public;\n        },\n\n        addDate: function ( elementId: string, date: Date, type: string = null!, triggerRefresh: boolean = true ) : PublicApi {\n            if ( Is.definedString( elementId ) && Is.definedDate( date ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n                \n                if ( !bindingOptions._currentView.isInFetchMode ) {\n                    type = Data.getDefaultString( type, _configuration.unknownTrendText! );\n\n                    const storageDate: string = toStorageDate( date );\n        \n                    if ( !_elements_DateCounts[ elementId ].typeData.hasOwnProperty( type ) ) {\n                        _elements_DateCounts[ elementId ].typeData[ type ] = {} as TypeCountsData;\n                        _elements_DateCounts[ elementId ].totalTypes++;\n                    }\n        \n                    if ( !_elements_DateCounts[ elementId ].typeData[ type ].hasOwnProperty( storageDate ) ) {\n                        _elements_DateCounts[ elementId ].typeData[ type ][ storageDate ] = 0;\n                    }\n            \n                    _elements_DateCounts[ elementId ].typeData[ type ][ storageDate ]++;\n        \n                    fireCustomTriggerEvent( bindingOptions.events!.onAdd!, bindingOptions._currentView.element );\n        \n                    if ( triggerRefresh ) {\n                        renderControlContainer( bindingOptions, true );\n                    }\n                }\n            }\n    \n            return _public;\n        },\n\n        updateDate: function ( elementId: string, date: Date, count: number, type: string = null!, triggerRefresh: boolean = true ) : PublicApi {\n            if ( Is.definedString( elementId ) && Is.definedDate( date ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n                \n                if ( !bindingOptions._currentView.isInFetchMode && count > 0 ) {\n                    const storageDate: string = toStorageDate( date );\n        \n                    if ( _elements_DateCounts[ elementId ].typeData.hasOwnProperty( type ) ) {    \n                        type = Data.getDefaultString( type, _configuration.unknownTrendText! );\n\n                        _elements_DateCounts[ elementId ].typeData[ type ][ storageDate ] = count;\n        \n                        fireCustomTriggerEvent( bindingOptions.events!.onUpdate!, bindingOptions._currentView.element );\n        \n                        if ( triggerRefresh ) {\n                            renderControlContainer( bindingOptions, true );\n                        }\n                    }\n                }\n            }\n    \n            return _public;\n        },\n\n        removeDates: function ( elementId: string, dates: Date[], type: string = null!, triggerRefresh: boolean = true ) : PublicApi {\n            if ( Is.definedString( elementId ) && Is.definedArray( dates ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n                \n                if ( !bindingOptions._currentView.isInFetchMode ) {\n                    type = Data.getDefaultString( type, _configuration.unknownTrendText! );\n\n                    const datesLength: number = dates.length;\n        \n                    for ( let dateIndex: number = 0; dateIndex < datesLength; dateIndex++ ) {\n                        _public.removeDate( elementId, dates[ dateIndex ], type, false );\n                    }\n        \n                    if ( triggerRefresh ) {\n                        renderControlContainer( bindingOptions, true );\n                    }\n                }\n            }\n    \n            return _public;\n        },\n\n        removeDate: function ( elementId: string, date: Date, type: string = null!, triggerRefresh: boolean = true ) : PublicApi {\n            if ( Is.definedString( elementId ) && Is.definedDate( date ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n                \n                if ( !bindingOptions._currentView.isInFetchMode ) {\n                    const storageDate: string = toStorageDate( date );\n        \n                    if ( _elements_DateCounts[ elementId ].typeData.hasOwnProperty( type ) && _elements_DateCounts[ elementId ].typeData[ type ].hasOwnProperty( storageDate ) ) {\n                        type = Data.getDefaultString( type, _configuration.unknownTrendText! );\n\n                        if ( _elements_DateCounts[ elementId ].typeData[ type ][ storageDate ] > 0 ) {\n                            _elements_DateCounts[ elementId ].typeData[ type ][ storageDate ]--;\n                        }\n        \n                        fireCustomTriggerEvent( bindingOptions.events!.onRemove!, bindingOptions._currentView.element );\n        \n                        if ( triggerRefresh ) {\n                            renderControlContainer( bindingOptions, true );\n                        }\n                    }\n                }\n            }\n    \n            return _public;\n        },\n\n        clearDate: function ( elementId: string, date: Date, type: string = null!, triggerRefresh: boolean = true ) : PublicApi {\n            if ( Is.definedString( elementId ) && Is.definedDate( date ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n                \n                if ( !bindingOptions._currentView.isInFetchMode ) {\n                    const storageDate: string = toStorageDate( date );\n        \n                    if ( _elements_DateCounts[ elementId ].typeData.hasOwnProperty( type ) && _elements_DateCounts[ elementId ].typeData[ type ].hasOwnProperty( storageDate ) ) {\n                        type = Data.getDefaultString( type, _configuration.unknownTrendText! );\n\n                        delete _elements_DateCounts[ elementId ].typeData[ type ][ storageDate ];\n        \n                        fireCustomTriggerEvent( bindingOptions.events!.onClear!, bindingOptions._currentView.element );\n        \n                        if ( triggerRefresh ) {\n                            renderControlContainer( bindingOptions, true );\n                        }\n                    }\n                }\n            }\n    \n            return _public;\n        },\n\n        resetAll: function ( triggerRefresh: boolean = true ) : PublicApi {\n            for ( let elementId in _elements_DateCounts ) {\n                if ( _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                    _public.reset( elementId, triggerRefresh );\n                }\n            }\n    \n            return _public;\n        },\n\n        reset: function ( elementId: string, triggerRefresh: boolean = true ) : PublicApi {\n            if ( Is.definedString( elementId ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n                \n                if ( !bindingOptions._currentView.isInFetchMode ) {\n                    bindingOptions._currentView.type = _configuration.unknownTrendText!;\n        \n                    createDateStorageForElement( elementId, bindingOptions, false );\n                    fireCustomTriggerEvent( bindingOptions.events!.onReset!, bindingOptions._currentView.element );\n        \n                    if ( triggerRefresh ) {\n                        renderControlContainer( bindingOptions, true );\n                    }\n                }\n            }\n    \n            return _public;\n        },\n\n\n        /*\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         * Public Functions:  Export/Import\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         */\n\n        import: function ( elementId: string, files: FileList ) : PublicApi {\n            if ( Is.definedString( elementId ) && _elements_DateCounts.hasOwnProperty( elementId ) && Is.definedArray( files ) ) {\n                importFromFiles( files, _elements_DateCounts[ elementId ].options );\n            }\n    \n            return _public;\n        },\n\n        export: function ( elementId: string, exportType: string = null! ) : PublicApi {\n            if ( Is.definedString( elementId ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                exportAllData( _elements_DateCounts[ elementId ].options, exportType );\n            }\n    \n            return _public;\n        },\n\n\n        /*\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         * Public Functions:  Manage Instances\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         */\n\n        refresh: function ( elementId: string ) : PublicApi {\n            if ( Is.definedString( elementId ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n    \n                renderControlContainer( bindingOptions, true );\n                fireCustomTriggerEvent( bindingOptions.events!.onRefresh!, bindingOptions._currentView.element );\n            }\n    \n            return _public;\n        },\n\n        refreshAll: function () : PublicApi {\n            for ( let elementId in _elements_DateCounts ) {\n                if ( _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                    const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n    \n                    renderControlContainer( bindingOptions, true );\n                    fireCustomTriggerEvent( bindingOptions.events!.onRefresh!, bindingOptions._currentView.element );\n                }\n            }\n    \n            return _public;\n        },\n\n        setYear: function ( elementId: string, year: number ) : PublicApi {\n            if ( Is.definedString( elementId ) && Is.definedNumber( year ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n                bindingOptions._currentView.year = year;\n    \n                if ( !isYearVisible( bindingOptions, bindingOptions._currentView.year ) ) {\n                    moveToNextYear( bindingOptions, false );\n                } else {\n                    renderControlContainer( bindingOptions );\n                }\n    \n                fireCustomTriggerEvent( bindingOptions.events!.onSetYear!, bindingOptions._currentView.year );\n            }\n    \n            return _public;\n        },\n\n        setYearToHighest: function ( elementId: string ) : PublicApi {\n            if ( Is.definedString( elementId ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n                const data: TypeCountsData = getCurrentViewData( bindingOptions );\n                let maximumYear: number = 0;\n    \n                for ( let storageDate in data ) {\n                    if ( data.hasOwnProperty( storageDate ) ) {\n                        maximumYear = Math.max( maximumYear, parseInt( getStorageDateYear( storageDate ) ) );\n                    }\n                }\n    \n                if ( maximumYear > 0 ) {\n                    bindingOptions._currentView.year = maximumYear;\n    \n                    if ( !isYearVisible( bindingOptions, bindingOptions._currentView.year ) ) {\n                        moveToNextYear( bindingOptions, false );\n                    } else {\n                        renderControlContainer( bindingOptions );\n                    }\n    \n                    fireCustomTriggerEvent( bindingOptions.events!.onSetYear!, bindingOptions._currentView.year );\n                }\n            }\n    \n            return _public;\n        },\n\n        setYearToLowest: function ( elementId: string ) : PublicApi {\n            if ( Is.definedString( elementId ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n                const data: TypeCountsData = getCurrentViewData( bindingOptions );\n                let minimumYear: number = 9999;\n    \n                for ( let storageDate in data ) {\n                    if ( data.hasOwnProperty( storageDate ) ) {\n                        minimumYear = Math.min( minimumYear, parseInt( getStorageDateYear( storageDate ) ) );\n                    }\n                }\n    \n                if ( minimumYear < 9999 ) {\n                    bindingOptions._currentView.year = minimumYear;\n    \n                    if ( !isYearVisible( bindingOptions, bindingOptions._currentView.year ) ) {\n                        moveToPreviousYear( bindingOptions, false );\n                    } else {\n                        renderControlContainer( bindingOptions );\n                    }\n    \n                    fireCustomTriggerEvent( bindingOptions.events!.onSetYear!, bindingOptions._currentView.year );\n                }\n            }\n    \n            return _public;\n        },\n\n        moveToPreviousYear: function ( elementId: string ) : PublicApi {\n            if ( Is.definedString( elementId ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                moveToPreviousYear( _elements_DateCounts[ elementId ].options );\n            }\n    \n            return _public;\n        },\n\n        moveToNextYear: function ( elementId: string ) : PublicApi {\n            if ( Is.definedString( elementId ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                moveToNextYear( _elements_DateCounts[ elementId ].options );\n            }\n    \n            return _public;\n        },\n\n        moveToCurrentYear: function ( elementId: string ) : PublicApi {\n            if ( Is.definedString( elementId ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n                bindingOptions._currentView.year = new Date().getFullYear();\n    \n                if ( !isYearVisible( bindingOptions, bindingOptions._currentView.year ) ) {\n                    moveToNextYear( bindingOptions, false );\n                } else {\n                    renderControlContainer( bindingOptions );\n                }\n    \n                fireCustomTriggerEvent( bindingOptions.events!.onSetYear!, bindingOptions._currentView.year );\n            }\n    \n            return _public;\n        },\n\n        getYear: function ( elementId: string ) : number {\n            let result: number = Value.notFound;\n\n            if ( Is.definedString( elementId ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n    \n                result = bindingOptions._currentView.year;\n            }\n    \n            return result;\n        },\n\n        render: function ( element: HTMLElement, options: BindingOptions ) : PublicApi {\n            if ( Is.definedObject( element ) && Is.definedObject( options ) ) {\n                renderControl( renderBindingOptions( options, element ) );\n            }\n    \n            return _public;\n        },\n\n        renderAll: function () : PublicApi {\n            render();\n\n            return _public;\n        },\n\n        switchView: function ( elementId: string, viewName: string ) : PublicApi {\n            if ( Is.definedString( elementId ) && Is.definedString( viewName ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n                let view: number;\n    \n                if ( viewName.toLowerCase() === ViewName.map ) {\n                    view = ViewId.map;\n                } else if ( viewName.toLowerCase() === ViewName.chart ) {\n                    view = ViewId.chart;\n                } else if ( viewName.toLowerCase() === ViewName.days ) {\n                    view = ViewId.days;\n                } else if ( viewName.toLowerCase() === ViewName.statistics ) {\n                    view = ViewId.statistics;\n                } else {\n                    view = ViewId.map;\n                }\n    \n                if ( Is.definedNumber( view ) ) {\n                    bindingOptions._currentView.view = view;\n    \n                    fireCustomTriggerEvent( bindingOptions.events!.onViewSwitch!, viewName );\n                    renderControlContainer( bindingOptions, false, true );\n                }\n            }\n    \n            return _public;\n        },\n\n        switchType: function ( elementId: string, type: string ) : PublicApi {\n            if ( Is.definedString( elementId ) && Is.definedString( type ) && _elements_DateCounts.hasOwnProperty( elementId ) && _elements_DateCounts[ elementId ].typeData.hasOwnProperty( type ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n    \n                if ( bindingOptions._currentView.type !== type ) {\n                    bindingOptions._currentView.type = type;\n                \n                    fireCustomTriggerEvent( bindingOptions.events!.onTypeSwitch!, type );\n                    renderControlContainer( bindingOptions );\n                }\n            }\n    \n            return _public;\n        },\n\n        updateOptions: function ( elementId: string, newOptions: BindingOptions ) : PublicApi {\n            if ( Is.definedString( elementId ) && Is.definedObject( newOptions ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: any = _elements_DateCounts[ elementId ].options;\n                const newBindingOptions: any = buildAttributeOptions( newOptions );\n                let optionChanged: boolean = false;\n    \n                for ( let propertyName in newBindingOptions ) {\n                    if ( newBindingOptions.hasOwnProperty( propertyName ) && bindingOptions.hasOwnProperty( propertyName ) && bindingOptions[ propertyName ] !== newBindingOptions[ propertyName ] ) {\n                        bindingOptions[ propertyName ] = newBindingOptions[ propertyName ];\n                        optionChanged = true;\n                    }\n                }\n    \n                if ( optionChanged ) {\n                    renderControlContainer( bindingOptions, true );\n                    fireCustomTriggerEvent( bindingOptions.events!.onRefresh!, bindingOptions._currentView.element );\n                    fireCustomTriggerEvent( bindingOptions.events!.onOptionsUpdate!, bindingOptions._currentView.element, bindingOptions );\n                }\n            }\n    \n            return _public;\n        },\n\n\n        /*\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         * Public Functions:  Destroying\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         */\n\n        destroyAll: function () : PublicApi {\n            for ( let elementId in _elements_DateCounts ) {\n                if ( _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                    destroyElement( _elements_DateCounts[ elementId ].options );\n                }\n            }\n    \n            _elements_DateCounts = {} as DateCounts;\n    \n            return _public;\n        },\n\n        destroy: function ( elementId: string ) : PublicApi {\n            if ( Is.definedString( elementId ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                destroyElement( _elements_DateCounts[ elementId ].options );\n    \n                delete _elements_DateCounts[ elementId ];\n            }\n    \n            return _public;\n        },\n\n\n        /*\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         * Public Functions:  Configuration\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         */\n\n        setConfiguration: function ( newConfiguration: any, triggerRefresh: boolean = true ) : PublicApi {\n            if ( Is.definedObject( newConfiguration ) ) {\n                let configurationHasChanged: boolean = false;\n                const newInternalConfiguration: any = _configuration;\n            \n                for ( let propertyName in newConfiguration ) {\n                    if ( newConfiguration.hasOwnProperty( propertyName ) && _configuration.hasOwnProperty( propertyName ) && newInternalConfiguration[ propertyName ] !== newConfiguration[ propertyName ] ) {\n                        newInternalConfiguration[ propertyName ] = newConfiguration[ propertyName ];\n                        configurationHasChanged = true;\n                    }\n                }\n        \n                if ( configurationHasChanged ) {\n                    buildDefaultConfiguration( newInternalConfiguration );\n        \n                    if ( triggerRefresh ) {\n                        _public.refreshAll();\n                    }\n                }\n            }\n    \n            return _public;\n        },\n\n\n        /*\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         * Public Functions:  Additional Data\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         */\n\n        getIds: function () : string[] {\n            const result: string[] = [];\n        \n            for ( let elementId in _elements_DateCounts ) {\n                if ( _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                    result.push( elementId );\n                }\n            }\n    \n            return result;\n        },\n\n        getVersion: function () : string {\n            return \"4.0.4\";\n        }\n    };\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Initialize Heat.js\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    ( () => {\n        buildDefaultConfiguration();\n\n        document.addEventListener( \"DOMContentLoaded\", () => {\n            render();\n        } );\n\n        window.addEventListener( \"pagehide\", () => {\n            cancelAllPullDataTimers();\n        } );\n\n        if ( !Is.defined( window.$heat ) ) {\n            window.$heat = _public;\n        }\n    } )();\n} )();"]}