{"version":3,"sources":["../src/ts/enum.ts","../src/ts/constant.ts","../src/ts/is.ts","../src/ts/data.ts","../src/ts/dom.ts","../src/ts/datetime.ts","../src/heat.ts"],"names":["Is","Data","String","result","DomElement","DateTime","render","JSON"],"mappings":"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","sourcesContent":["/**\n * Heat.js\n * \n * A lightweight JavaScript library that generates customizable heat maps, charts, and statistics to visualize date-based activity and trends.\n * \n * @file        heat.ts\n * @version     v4.0.0\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nexport const enum Char {\n    empty = \"\",\n    space = \" \",\n    newLine = \"\\n\",\n    dash = \"-\",\n    underscore = \"_\",\n    plus = \"+\",\n    zero = \"0\",\n    colon = \":\",\n    comma = \",\"\n}\n\nexport const enum Value {\n    notFound = -1\n}\n\nexport const enum ViewId {\n    map = 1,\n    chart = 2,\n    days = 3,\n    statistics = 4\n}\n\nexport const enum ViewName {\n    map = \"map\",\n    chart = \"chart\",\n    days = \"days\",\n    statistics = \"statistics\"\n}\n\nexport const enum ExportType {\n    csv = \"csv\",\n    json = \"json\",\n    xml = \"xml\",\n    txt = \"txt\"\n}","/**\n * Heat.js\n * \n * A lightweight JavaScript library that generates customizable heat maps, charts, and statistics to visualize date-based activity and trends.\n * \n * @file        heat.ts\n * @version     v4.0.0\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nexport const HEAT_JS_ATTRIBUTE_NAME = \"data-heat-js\";","/**\n * Heat.js\n * \n * A lightweight JavaScript library that generates customizable heat maps, charts, and statistics to visualize date-based activity and trends.\n * \n * @file        heat.ts\n * @version     v4.0.0\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nimport { Char } from \"./enum\";\n\n\nexport namespace Is {\n    export function defined( value: any ) : boolean  {\n        return value !== null && value !== undefined && value.toString() !== Char.empty;\n    }\n\n    export function definedObject( object: any ) : boolean {\n        return defined( object ) && typeof object === \"object\";\n    }\n\n    export function definedBoolean( object: any ) : boolean  {\n        return defined( object ) && typeof object === \"boolean\";\n    }\n\n    export function definedString( object: any ) : boolean  {\n        return defined( object ) && typeof object === \"string\";\n    }\n\n    export function definedFunction( object: any ) : boolean  {\n        return defined( object ) && typeof object === \"function\";\n    }\n\n    export function definedNumber( object: any ) : boolean  {\n        return defined( object ) && typeof object === \"number\";\n    }\n\n    export function definedArray( object: any ) : boolean  {\n        return definedObject( object ) && object instanceof Array;\n    }\n\n    export function definedDate( object: any ) : boolean  {\n        return definedObject( object ) && object instanceof Date;\n    }\n\n    export function invalidOptionArray( array: any, minimumLength: number = 1 ) : boolean {\n        return !definedArray( array ) || array.length < minimumLength;\n    }\n}","/**\n * Heat.js\n * \n * A lightweight JavaScript library that generates customizable heat maps, charts, and statistics to visualize date-based activity and trends.\n * \n * @file        heat.ts\n * @version     v4.0.0\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nimport { Char } from \"./enum\";\nimport { Is } from \"./is\";\n\n\nexport namespace Data {\n    export namespace String {\n        export function newGuid() : string {\n            const result: string[] = [];\n    \n            for ( let charIndex: number = 0; charIndex < 32; charIndex++ ) {\n                if ( charIndex === 8 || charIndex === 12 || charIndex === 16 || charIndex === 20 ) {\n                    result.push( Char.dash );\n                }\n    \n                const character: string = Math.floor( Math.random() * 16 ).toString( 16 );\n                result.push( character );\n            }\n    \n            return result.join( Char.empty );\n        }\n    \n        export function padNumber( number: number ) : string {\n            const numberString: string = number.toString();\n    \n            return numberString.length === 1 ? Char.zero + numberString : numberString;\n        }\n    \n        export function startsWithAnyCase( data: string, start: string ) : boolean {\n            return data.substring( 0, start.length ).toLowerCase() === start.toLowerCase();\n        }\n    }\n\n    export function getDefaultAnyString( value: any, defaultValue: string ) : string  {\n        return typeof value === \"string\" ? value : defaultValue;\n    }\n\n    export function getDefaultString( value: any, defaultValue: string ) : string {\n        return Is.definedString( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultBoolean( value: any, defaultValue: boolean ) : boolean {\n        return Is.definedBoolean( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultNumber( value: any, defaultValue: number ) : number {\n        return Is.definedNumber( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultFunction( value: any, defaultValue: object ) : any {\n        return Is.definedFunction( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultArray( value: any, defaultValue: any[] ) : any[] {\n        return Is.definedArray( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultObject( value: any, defaultValue: object ) : any {\n        return Is.definedObject( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultStringOrArray( value: any, defaultValue: any[] ) : any[] {\n        let result: any[] = defaultValue;\n\n        if ( Is.definedString( value ) ) {\n            const values: string[] = value.toString().split( Char.space );\n\n            if ( values.length === 0 ) {\n                value = defaultValue;\n            } else {\n                result = values;\n            }\n\n        } else {\n            result = getDefaultArray( value, defaultValue );\n        }\n\n        return result;\n    }\n}","/**\n * Heat.js\n * \n * A lightweight JavaScript library that generates customizable heat maps, charts, and statistics to visualize date-based activity and trends.\n * \n * @file        heat.ts\n * @version     v4.0.0\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nimport { Char } from \"./enum\";\nimport { Is } from \"./is\";\n\n\nexport namespace DomElement {\n    export function createWithNoContainer( type: string ) : HTMLElement {\n        const nodeType: string = type.toLowerCase();\n        const isText: boolean = nodeType === \"text\";\n\n        let result: any = isText ? document.createTextNode( Char.empty ) : document.createElement( nodeType );\n\n        return result;\n    }\n\n    export function create( container: HTMLElement, type: string, className: string = Char.empty, beforeNode: HTMLElement = null ) : HTMLElement {\n        const nodeType: string = type.toLowerCase();\n        const isText: boolean = nodeType === \"text\";\n\n        let result: any = isText ? document.createTextNode( Char.empty ) : document.createElement( nodeType );\n\n        if ( Is.defined( className ) ) {\n            result.className = className;\n        }\n\n        if ( Is.defined( beforeNode ) ) {\n            container.insertBefore( result, beforeNode );\n        } else {\n            container.appendChild( result );\n        }\n\n        return result;\n    }\n\n    export function createWithHTML( container: HTMLElement, type: string, className: string, html: string, beforeNode: HTMLElement = null ) : HTMLElement {\n        const element: HTMLElement = create( container, type, className, beforeNode );\n        element.innerHTML = html;\n\n        return element;\n    }\n\n    export function getStyleValueByName( element: any, stylePropertyName: string, toNumber: boolean = false ) : any {\n        let value: any = null;\n        \n        if ( document.defaultView.getComputedStyle ) {\n            value = document.defaultView.getComputedStyle( element, null ).getPropertyValue( stylePropertyName ); \n        } else if ( element.currentStyle ) {\n            value = element.currentStyle[ stylePropertyName ];\n        }   \n        \n        if ( toNumber ) {\n            value = parseFloat( value );\n        }\n\n        return value;\n    }\n\n    export function addClass( element: HTMLElement, className: string ) {\n        element.className += Char.space + className;\n        element.className = element.className.trim();\n    }\n\n    export function removeClass( element: HTMLElement, className: string ) {\n        element.className = element.className.replace( className, Char.empty );\n        element.className = element.className.trim();\n    }\n\n    export function cancelBubble( e: any ) {\n        e.preventDefault();\n        e.cancelBubble = true;\n    }\n\n    export function getScrollPosition() : object {\n        const doc: HTMLElement = document.documentElement;\n        const left: number = ( window.pageXOffset || doc.scrollLeft )  - ( doc.clientLeft || 0 );\n        const top: number = ( window.pageYOffset || doc.scrollTop ) - ( doc.clientTop || 0 );\n\n        return {\n            left: left,\n            top: top\n        };\n    }\n\n    export function showElementAtMousePosition( e: any, element: HTMLElement ) {\n        let left: number = e.pageX;\n        let top: number = e.pageY;\n        const scrollPosition: any = getScrollPosition();\n\n        element.style.display = \"block\";\n\n        if ( left + element.offsetWidth > window.innerWidth ) {\n            left -= element.offsetWidth;\n        } else {\n            left++;\n        }\n\n        if ( top + element.offsetHeight > window.innerHeight ) {\n            top -= element.offsetHeight;\n        } else {\n            top++;\n        }\n\n        if ( left < scrollPosition.left ) {\n            left = e.pageX + 1;\n        }\n\n        if ( top < scrollPosition.top ) {\n            top = e.pageY + 1;\n        }\n        \n        element.style.left = left + \"px\";\n        element.style.top = top + \"px\";\n    }\n\n    export function reverseChildrenOrder( parent: HTMLElement ) {\n        const children: HTMLCollection = parent.children;\n        let childrenLength: number = children.length - 1;\n\n        for ( ; childrenLength--; ) {\n            parent.appendChild( children[ childrenLength ] );\n        }\n    }\n\n    export function createCheckBox( container: HTMLElement, labelText: string, checked: boolean = null, onClick: Function = null ) : any {\n        const lineContainer: HTMLElement = create( container, \"div\" );\n        const label: HTMLElement = create( lineContainer, \"label\", \"checkbox\" );\n        const input: any = create( label, \"input\" );\n\n        input.type = \"checkbox\";\n\n        if ( Is.defined( onClick ) ) {\n            input.onclick = onClick;\n        }\n\n        if ( Is.defined( checked ) ) {\n            input.checked = checked;\n        }\n\n        create( label, \"span\", \"check-mark\" );\n        createWithHTML( label, \"span\", \"text\", labelText );\n        \n        return {\n            input: input,\n            label: label\n        };\n    }\n}","/**\n * Heat.js\n * \n * A lightweight JavaScript library that generates customizable heat maps, charts, and statistics to visualize date-based activity and trends.\n * \n * @file        heat.ts\n * @version     v4.0.0\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nimport { Data } from \"./data\";\nimport { Configuration } from \"./type\";\n\n\nexport namespace DateTime {\n    export function getTotalDaysInMonth( year: number, month: number ) : number {\n        return new Date( year, month + 1, 0 ).getDate();\n    }\n\n    export function getWeekdayNumber( date: Date ) : number {\n        return date.getDay() - 1 < 0 ? 6 : date.getDay() - 1;\n    }\n\n    export function getDayOrdinal( configuration: Configuration, value: number ) : string {\n        let result: string = configuration.thText;\n\n        if ( value === 31 || value === 21 || value === 1 ) {\n            result = configuration.stText;\n        } else if ( value === 22 || value === 2 ) {\n            result = configuration.ndText;\n        } else if ( value === 23 || value === 3 ) {\n            result = configuration.rdText;\n        }\n\n        return result;\n    }\n\n    export function getCustomFormattedDateText( configuration: Configuration, dateFormat: string, date: Date ) : string {\n        let result: string = dateFormat;\n        const weekDayNumber: number = getWeekdayNumber( date );\n\n        result = result.replace( \"{dddd}\", configuration.dayNames[ weekDayNumber ] );\n        result = result.replace( \"{dd}\", Data.String.padNumber( date.getDate() ) );\n        result = result.replace( \"{d}\", date.getDate().toString() );\n\n        result = result.replace( \"{o}\", getDayOrdinal( configuration, date.getDate() ) );\n\n        result = result.replace( \"{mmmm}\", configuration.monthNames[ date.getMonth() ] );\n        result = result.replace( \"{mm}\", Data.String.padNumber( date.getMonth() + 1 ) );\n        result = result.replace( \"{m}\", ( date.getMonth() + 1 ).toString() );\n\n        result = result.replace( \"{yyyy}\", date.getFullYear().toString() );\n        result = result.replace( \"{yyy}\", date.getFullYear().toString().substring( 1 ) );\n        result = result.replace( \"{yy}\", date.getFullYear().toString().substring( 2 ) );\n        result = result.replace( \"{y}\", parseInt( date.getFullYear().toString().substring( 2 ) ).toString() );\n\n        return result;\n    }\n}","/**\n * Heat.js\n * \n * A lightweight JavaScript library that generates customizable heat maps, charts, and statistics to visualize date-based activity and trends.\n * \n * @file        heat.ts\n * @version     v4.0.0\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nimport {\n    type Configuration,\n    type Holiday,\n    type ColorRange,\n    type BindingOptions,\n    type BindingOptionsCurrentView,\n    type Title,\n    type Description,\n    type Guide,\n    type Tooltip,\n    type Map, \n    type Chart,\n    type Days,\n    type Statistics,\n    type Events } from \"./ts/type\";\n\nimport { ExportType, Char, Value, ViewId, ViewName } from \"./ts/enum\";\nimport { HEAT_JS_ATTRIBUTE_NAME } from \"./ts/constant\"\nimport { Is } from \"./ts/is\"\nimport { Data } from \"./ts/data\"\nimport { DomElement } from \"./ts/dom\"\nimport { DateTime } from \"./ts/datetime\"\nimport { type PublicApi } from \"./ts/api\";\n\n\n( () => {\n    // Types\n    type TypeCountsData = Record<string, number>;\n    type DateCounts = Record<string, {\n        options: BindingOptions;\n        types: number;\n        typeData: Record<string, TypeCountsData>\n    }>;\n\n    // Variables: Configuration\n    let _configuration: Configuration = {} as Configuration;\n\n    // Variables: Elements\n    let _elements_Day_Width: number = null;\n\n    // Variables: Date Counts\n    let _elements_DateCounts: DateCounts = {} as DateCounts;\n\n    // Variables: Internal Names\n    const _internal_Name_Holiday: string = \"HOLIDAY\";\n\n    // Variables: Local Storage\n    const _local_Storage_Start_ID: string = \"HJS_\";\n\n    // Variables: Defaults\n    const _default_MonthsToShow: number[] = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 ];\n    const _default_DaysToShow: number[] = [ 1, 2, 3, 4, 5, 6, 7 ];\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Render:  Disabled Background\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function renderDisabledBackground( bindingOptions: BindingOptions ) : void {\n        bindingOptions._currentView.disabledBackground = DomElement.create( bindingOptions._currentView.element, \"div\", \"disabled\" );\n    }\n\n    function showDisabledBackground( bindingOptions: BindingOptions ) : void {\n        if ( Is.defined( bindingOptions._currentView.disabledBackground ) && bindingOptions._currentView.disabledBackground.style.display !== \"block\" ) {\n            bindingOptions._currentView.disabledBackground.style.display = \"block\";\n        }\n    }\n\n    function hideDisabledBackground( bindingOptions: BindingOptions ) : void {\n        if ( Is.defined( bindingOptions._currentView.disabledBackground ) && bindingOptions._currentView.disabledBackground.style.display !== \"none\" ) {\n            bindingOptions._currentView.disabledBackground.style.display = \"none\";\n        }\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Render\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function render() : void {\n        const tagTypes: string[] = _configuration.domElementTypes;\n        const tagTypesLength: number = tagTypes.length;\n\n        for ( let tagTypeIndex: number = 0; tagTypeIndex < tagTypesLength; tagTypeIndex++ ) {\n            const domElements: HTMLCollectionOf<Element> = document.getElementsByTagName( tagTypes[ tagTypeIndex ] );\n            const elements: HTMLElement[] = [].slice.call( domElements );\n            const elementsLength: number = elements.length;\n\n            for ( let elementIndex: number = 0; elementIndex < elementsLength; elementIndex++ ) {\n                if ( !renderElement( elements[ elementIndex ] ) ) {\n                    break;\n                }\n            }\n        }\n    }\n\n    function renderElement( element: HTMLElement ) : boolean {\n        let result: boolean = true;\n\n        if ( Is.defined( element ) && element.hasAttribute( HEAT_JS_ATTRIBUTE_NAME ) ) {\n            const bindingOptionsData: string = element.getAttribute( HEAT_JS_ATTRIBUTE_NAME );\n\n            if ( Is.definedString( bindingOptionsData ) ) {\n                const bindingOptions: any = getObjectFromString( bindingOptionsData );\n\n                if ( bindingOptions.parsed && Is.definedObject( bindingOptions.result ) ) {\n                    renderControl( renderBindingOptions( bindingOptions.result, element ) );\n\n                } else {\n                    if ( !_configuration.safeMode ) {\n                        console.error( _configuration.attributeNotValidErrorText.replace( \"{{attribute_name}}\", HEAT_JS_ATTRIBUTE_NAME ) );\n                        result = false;\n                    }\n                }\n\n            } else {\n                if ( !_configuration.safeMode ) {\n                    console.error( _configuration.attributeNotSetErrorText.replace( \"{{attribute_name}}\", HEAT_JS_ATTRIBUTE_NAME ) );\n                    result = false;\n                }\n            }\n        }\n\n        return result;\n    }\n\n    function renderBindingOptions( data: any, element: HTMLElement ) : BindingOptions {\n        const bindingOptions: BindingOptions = buildAttributeOptions( data );\n        const view: string = !Is.definedString( bindingOptions.view ) ? Char.empty : bindingOptions.view.toLowerCase();\n\n        let currentView: BindingOptionsCurrentView = {} as BindingOptionsCurrentView;\n        currentView.element = element;\n        currentView.disabledBackground = null;\n        currentView.configurationDialog = null;\n        currentView.dayCheckBoxes = [];\n        currentView.monthCheckBoxes = [];\n        currentView.tooltip = null;\n        currentView.tooltipTimer = null;\n        currentView.mapContents = null;\n        currentView.mapContentsScrollLeft = 0;\n        currentView.year = bindingOptions.year;\n        currentView.type = _configuration.unknownTrendText;\n        currentView.isInFetchMode = Is.definedFunction( bindingOptions.events.onDataFetch );\n        currentView.isInFetchModeTimer = null;\n        currentView.yearsAvailable = [];\n\n        if ( bindingOptions.views.chart.enabled ) {\n            currentView.chartContents = null;\n            currentView.chartContentsScrollLeft = 0;\n        }\n\n        if ( bindingOptions.views.days.enabled ) {\n            currentView.daysContents = null;\n            currentView.daysContentsScrollLeft = 0;\n        }\n        \n        if ( bindingOptions.views.statistics.enabled ) {\n            currentView.statisticsContents = null;\n            currentView.statisticsContentsScrollLeft = 0;\n        }\n\n        if ( view === ViewName.map ) {\n            currentView.view = ViewId.map;\n        } else if ( view === ViewName.chart ) {\n            currentView.view = ViewId.chart;\n        } else if ( view === ViewName.days ) {\n            currentView.view = ViewId.days;\n        } else if ( view === ViewName.statistics ) {\n            currentView.view = ViewId.statistics;\n        } else {\n            currentView.view = ViewId.map;\n        }\n\n        bindingOptions._currentView = currentView;\n\n        return bindingOptions;\n    }\n\n    function renderControl( bindingOptions: BindingOptions ) : void {\n        fireCustomTriggerEvent( bindingOptions.events.onBeforeRender, bindingOptions._currentView.element );\n\n        if ( !Is.definedString( bindingOptions._currentView.element.id ) ) {\n            bindingOptions._currentView.element.id = Data.String.newGuid();\n        }\n\n        if ( bindingOptions._currentView.element.className.trim() === Char.empty ) {\n            bindingOptions._currentView.element.className = \"heat-js\";\n        } else {\n            DomElement.addClass( bindingOptions._currentView.element, \"heat-js\" );\n        }\n\n        bindingOptions._currentView.element.removeAttribute( HEAT_JS_ATTRIBUTE_NAME );\n\n        createDateStorageForElement( bindingOptions._currentView.element.id, bindingOptions );\n        renderControlContainer( bindingOptions );\n        fireCustomTriggerEvent( bindingOptions.events.onRenderComplete, bindingOptions._currentView.element );\n    }\n\n    function renderControlContainer( bindingOptions: BindingOptions, isForDataRefresh: boolean = false, isForViewSwitch: boolean = false ) : void {\n        if ( isForDataRefresh ) {\n            storeDataInLocalStorage( bindingOptions );\n        }\n\n        if ( Is.defined( bindingOptions._currentView.mapContents ) ) {\n            bindingOptions._currentView.mapContentsScrollLeft = bindingOptions._currentView.mapContents.scrollLeft;\n        }\n\n        if ( bindingOptions.views.chart.enabled && Is.defined( bindingOptions._currentView.chartContents ) ) {\n            bindingOptions._currentView.chartContentsScrollLeft = bindingOptions._currentView.chartContents.scrollLeft;\n        }\n\n        if ( bindingOptions.views.days.enabled && Is.defined( bindingOptions._currentView.daysContents ) ) {\n            bindingOptions._currentView.daysContentsScrollLeft = bindingOptions._currentView.daysContents.scrollLeft;\n        }\n\n        if ( bindingOptions.views.statistics.enabled && Is.defined( bindingOptions._currentView.statisticsContents ) ) {\n            bindingOptions._currentView.statisticsContentsScrollLeft = bindingOptions._currentView.statisticsContents.scrollLeft;\n        }\n        \n        bindingOptions._currentView.element.innerHTML = Char.empty;\n        bindingOptions._currentView.yearsAvailable = getYearsAvailableInData( bindingOptions );\n        \n        hideToolTip( bindingOptions );\n\n        startDataPullTimer( bindingOptions );\n\n        if ( bindingOptions.title.showConfigurationButton ) {\n            renderDisabledBackground( bindingOptions );\n            renderConfigurationDialog( bindingOptions );\n        }\n\n        renderControlToolTip( bindingOptions );\n        renderControlTitleBar( bindingOptions );\n        renderControlMap( bindingOptions, isForViewSwitch );\n\n        if ( bindingOptions.views.chart.enabled ) {\n            renderControlChart( bindingOptions, isForViewSwitch );\n\n            bindingOptions._currentView.chartContents.style.display = \"none\";\n        }\n\n        if ( bindingOptions.views.days.enabled ) {\n            renderControlDays( bindingOptions, isForViewSwitch );\n\n            bindingOptions._currentView.daysContents.style.display = \"none\";\n        }\n\n        if ( bindingOptions.views.statistics.enabled ) {\n            renderControlStatistics( bindingOptions, isForViewSwitch );\n\n            bindingOptions._currentView.statisticsContents.style.display = \"none\";\n        }\n\n        bindingOptions._currentView.mapContents.style.display = \"none\";\n\n        if ( bindingOptions._currentView.view === ViewId.map ) {\n            bindingOptions._currentView.mapContents.style.display = \"block\";\n        } else if ( bindingOptions.views.chart.enabled && bindingOptions._currentView.view === ViewId.chart ) {\n            bindingOptions._currentView.chartContents.style.display = \"block\";\n        } else if ( bindingOptions.views.days.enabled && bindingOptions._currentView.view === ViewId.days ) {\n            bindingOptions._currentView.daysContents.style.display = \"block\";\n        } else if ( bindingOptions.views.statistics.enabled && bindingOptions._currentView.view === ViewId.statistics ) {\n            bindingOptions._currentView.statisticsContents.style.display = \"block\";\n        } else {\n            bindingOptions._currentView.view = ViewId.map;\n            bindingOptions._currentView.mapContents.style.display = \"block\";\n        }\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Render:  Configuration Dialog\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function renderConfigurationDialog( bindingOptions: BindingOptions ) : void {\n        bindingOptions._currentView.configurationDialog = DomElement.create( bindingOptions._currentView.disabledBackground, \"div\", \"dialog configuration\" );\n\n        const titleBar: HTMLElement = DomElement.create( bindingOptions._currentView.configurationDialog, \"div\", \"dialog-title-bar\" );\n        const contents: HTMLElement = DomElement.create( bindingOptions._currentView.configurationDialog, \"div\", \"dialog-contents\" );\n        const closeButton: HTMLElement = DomElement.create( titleBar, \"div\", \"dialog-close\" );\n        const daysContainer: HTMLElement = DomElement.create( contents, \"div\", \"side-container panel\" );\n        const monthsContainer: HTMLElement = DomElement.create( contents, \"div\", \"side-container panel\" );\n\n        DomElement.createWithHTML( titleBar, \"span\", \"dialog-title-bar-text\", _configuration.configurationTitleText );\n        DomElement.createWithHTML( daysContainer, \"div\", \"side-container-title-text\", _configuration.visibleDaysText + Char.colon );\n        DomElement.createWithHTML( monthsContainer, \"div\", \"side-container-title-text\", _configuration.visibleMonthsText + Char.colon );\n\n        const months1Container: HTMLElement = DomElement.create( monthsContainer, \"div\", \"side-container\" );\n        const months2Container: HTMLElement = DomElement.create( monthsContainer, \"div\", \"side-container\" );\n\n        closeButton.onclick = function () {\n            hideConfigurationDialog( bindingOptions );\n        };\n\n        for ( let dayIndex: number = 0; dayIndex < 7; dayIndex++ ) {\n            bindingOptions._currentView.dayCheckBoxes[ dayIndex ] = DomElement.createCheckBox( daysContainer, _configuration.dayNames[ dayIndex ] ).input;\n        }\n\n        for ( let monthIndex1: number = 0; monthIndex1 < 7; monthIndex1++ ) {\n            bindingOptions._currentView.monthCheckBoxes[ monthIndex1 ] = DomElement.createCheckBox( months1Container, _configuration.monthNames[ monthIndex1 ] ).input;\n        }\n\n        for ( let monthIndex2: number = 7; monthIndex2 < 12; monthIndex2++ ) {\n            bindingOptions._currentView.monthCheckBoxes[ monthIndex2 ] = DomElement.createCheckBox( months2Container, _configuration.monthNames[ monthIndex2 ] ).input;\n        }\n\n        addToolTip( closeButton, bindingOptions, _configuration.closeToolTipText );\n    }\n\n    function showConfigurationDialog( bindingOptions: BindingOptions ) : void {\n        showDisabledBackground( bindingOptions );\n\n        if ( Is.defined( bindingOptions._currentView.configurationDialog ) && bindingOptions._currentView.configurationDialog.style.display !== \"block\" ) {\n            bindingOptions._currentView.configurationDialog.style.display = \"block\";\n        }\n\n        let daysToShow: number[] = [];\n        let monthsToShow: number[] = [];\n\n        if ( bindingOptions._currentView.view === ViewId.map ) {\n            daysToShow = bindingOptions.views.map.daysToShow;\n            monthsToShow = bindingOptions.views.map.monthsToShow;\n        } else if ( bindingOptions.views.chart.enabled && bindingOptions._currentView.view === ViewId.chart ) {\n            daysToShow = bindingOptions.views.chart.daysToShow;\n            monthsToShow = bindingOptions.views.chart.monthsToShow;\n        } else if ( bindingOptions.views.days.enabled && bindingOptions._currentView.view === ViewId.days ) {\n            daysToShow = bindingOptions.views.days.daysToShow;\n            monthsToShow = bindingOptions.views.days.monthsToShow;\n        } else if ( bindingOptions.views.statistics.enabled && bindingOptions._currentView.view === ViewId.statistics ) {\n            daysToShow = bindingOptions.views.statistics.daysToShow;\n            monthsToShow = bindingOptions.views.statistics.monthsToShow;\n        } else {\n            daysToShow = bindingOptions.views.map.daysToShow;\n            monthsToShow = bindingOptions.views.map.monthsToShow;\n        }\n\n        for ( let dayIndex: number = 0; dayIndex < 7; dayIndex++ ) {\n            bindingOptions._currentView.dayCheckBoxes[ dayIndex ].checked = isDayVisible( daysToShow, dayIndex + 1 );\n        }\n\n        for ( let monthIndex: number = 0; monthIndex < 12; monthIndex++ ) {\n            bindingOptions._currentView.monthCheckBoxes[ monthIndex ].checked = isMonthVisible( monthsToShow, monthIndex );\n        }\n\n        hideToolTip( bindingOptions );\n    }\n\n    function hideConfigurationDialog( bindingOptions: BindingOptions ) : void {\n        hideDisabledBackground( bindingOptions );\n\n        if ( Is.defined( bindingOptions._currentView.configurationDialog ) && bindingOptions._currentView.configurationDialog.style.display !== \"none\" ) {\n            bindingOptions._currentView.configurationDialog.style.display = \"none\";\n        }\n\n        const daysChecked: number[] = [];\n        const monthsChecked: number[] = [];\n        let render: boolean = false;\n\n        for ( let dayIndex: number = 0; dayIndex < 7; dayIndex++ ) {\n            if ( bindingOptions._currentView.dayCheckBoxes[ dayIndex ].checked ) {\n                daysChecked.push( dayIndex + 1 );\n            }\n        }\n\n        for ( let monthIndex: number = 0; monthIndex < 12; monthIndex++ ) {\n            if ( bindingOptions._currentView.monthCheckBoxes[ monthIndex ].checked ) {\n                monthsChecked.push( monthIndex + 1 );\n            }\n        }\n\n        if ( daysChecked.length >= 1 ) {\n            if ( bindingOptions._currentView.view === ViewId.map ) {\n                bindingOptions.views.map.daysToShow = daysChecked;\n            } else if ( bindingOptions.views.chart.enabled && bindingOptions._currentView.view === ViewId.chart ) {\n                bindingOptions.views.chart.daysToShow = daysChecked;\n            } else if ( bindingOptions.views.days.enabled && bindingOptions._currentView.view === ViewId.days ) {\n                bindingOptions.views.days.daysToShow = daysChecked;\n            } else if ( bindingOptions.views.statistics.enabled && bindingOptions._currentView.view === ViewId.statistics ) {\n                bindingOptions.views.statistics.daysToShow = daysChecked;\n            } else {\n                bindingOptions.views.map.daysToShow = daysChecked;\n            }\n\n            render = true;\n        }\n\n        if ( monthsChecked.length >= 1 ) {\n            if ( bindingOptions._currentView.view === ViewId.map ) {\n                bindingOptions.views.map.monthsToShow = monthsChecked;\n            } else if ( bindingOptions.views.chart.enabled && bindingOptions._currentView.view === ViewId.chart ) {\n                bindingOptions.views.chart.monthsToShow = monthsChecked;\n            } else if ( bindingOptions.views.days.enabled && bindingOptions._currentView.view === ViewId.days ) {\n                bindingOptions.views.days.monthsToShow = monthsChecked;\n            } else if ( bindingOptions.views.statistics.enabled && bindingOptions._currentView.view === ViewId.statistics ) {\n                bindingOptions.views.statistics.monthsToShow = monthsChecked;\n            } else {\n                bindingOptions.views.map.monthsToShow = monthsChecked;\n            }\n\n            render = true;\n        }\n\n        if ( render ) {\n            renderControlContainer( bindingOptions );\n            fireCustomTriggerEvent( bindingOptions.events.onOptionsUpdate, bindingOptions._currentView.element, bindingOptions );\n            \n        } else {\n            hideToolTip( bindingOptions );\n        }\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Render:  ToolTip\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function renderControlToolTip( bindingOptions: BindingOptions ) : void {\n        if ( !Is.defined( bindingOptions._currentView.tooltip ) ) {\n            bindingOptions._currentView.tooltip = DomElement.create( document.body, \"div\", \"heat-js-tooltip\" );\n            bindingOptions._currentView.tooltip.style.display = \"none\";\n    \n            assignToolTipEvents( bindingOptions );\n        }\n    }\n\n    function assignToolTipEvents( bindingOptions: BindingOptions, add: boolean = true ) : void {\n        let addEventListener_Window: Function = add ? window.addEventListener : window.removeEventListener;\n        let addEventListener_Document: Function = add ? document.addEventListener : document.removeEventListener;\n\n        addEventListener_Window( \"mousemove\", function() {\n            hideToolTip( bindingOptions );\n        } );\n\n        addEventListener_Document( \"scroll\", function() {\n            hideToolTip( bindingOptions );\n        } );\n    }\n\n    function addToolTip( element: HTMLElement, bindingOptions: BindingOptions, text: string ) : void {\n        if ( element !== null ) {\n            element.onmousemove = function ( e ) {\n                showToolTip( e, bindingOptions, text );\n            };\n        }\n    }\n\n    function showToolTip( e: any, bindingOptions: BindingOptions, text: string ) : void {\n        DomElement.cancelBubble( e );\n        hideToolTip( bindingOptions );\n\n        bindingOptions._currentView.tooltipTimer = setTimeout( function() {\n            bindingOptions._currentView.tooltip.innerHTML = text;\n            bindingOptions._currentView.tooltip.style.display = \"block\";\n\n            DomElement.showElementAtMousePosition( e, bindingOptions._currentView.tooltip );\n        }, bindingOptions.tooltip.delay );\n    }\n\n    function hideToolTip( bindingOptions: BindingOptions ) : void {\n        if ( Is.defined( bindingOptions._currentView.tooltip ) ) {\n            if ( Is.defined( bindingOptions._currentView.tooltipTimer ) ) {\n                clearTimeout( bindingOptions._currentView.tooltipTimer );\n                bindingOptions._currentView.tooltipTimer = null;\n            }\n    \n            if ( bindingOptions._currentView.tooltip.style.display !== \"none\" ) {\n                bindingOptions._currentView.tooltip.style.display = \"none\";\n            }\n        }\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Render:  Title Bar\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function renderControlTitleBar( bindingOptions: BindingOptions ) : void {\n        if ( bindingOptions.title.showText || bindingOptions.title.showYearSelector || bindingOptions.title.showRefreshButton || bindingOptions.title.showExportButton || bindingOptions.title.showImportButton ) {\n            const titleBar: HTMLElement = DomElement.create( bindingOptions._currentView.element, \"div\", \"title-bar\" );\n            const title: HTMLElement = DomElement.create( titleBar, \"div\", \"title\" );\n\n            if ( bindingOptions.views.chart.enabled || bindingOptions.views.days.enabled || bindingOptions.views.statistics.enabled ) {\n                if ( bindingOptions.title.showTitleDropDownButton ) {\n                    DomElement.create( title, \"div\", \"down-arrow\" );\n                }\n                \n            } else {\n                DomElement.addClass( title, \"no-click\" );\n            }\n\n            if ( bindingOptions.title.showText ) {\n                title.innerHTML += bindingOptions.title.text;\n            }\n\n            if ( bindingOptions.views.chart.enabled || bindingOptions.views.days.enabled || bindingOptions.views.statistics.enabled ) {\n                renderTitleDropDownMenu( bindingOptions, title );\n            }\n\n            if ( bindingOptions.title.showImportButton && !bindingOptions._currentView.isInFetchMode ) {\n                const importData: HTMLElement = DomElement.createWithHTML( titleBar, \"button\", \"import\", _configuration.importButtonText );\n        \n                importData.onclick = function () {\n                    importFromFilesSelected( bindingOptions );\n                };\n            }\n\n            if ( bindingOptions.title.showExportButton ) {\n                const exportData: HTMLElement = DomElement.createWithHTML( titleBar, \"button\", \"export\", _configuration.exportButtonText );\n        \n                exportData.onclick = function () {\n                    exportAllData( bindingOptions );\n                };\n            }\n\n            if ( bindingOptions.title.showRefreshButton ) {\n                const refresh: HTMLElement = DomElement.createWithHTML( titleBar, \"button\", \"refresh\", _configuration.refreshButtonText );\n        \n                refresh.onclick = function () {\n                    renderControlContainer( bindingOptions );\n                    fireCustomTriggerEvent( bindingOptions.events.onRefresh, bindingOptions._currentView.element );\n                };\n            }\n    \n            if ( bindingOptions.title.showYearSelector ) {\n                const back: any = DomElement.createWithHTML( titleBar, \"button\", \"back\", _configuration.backButtonText );\n        \n                back.onclick = function () {\n                    moveToPreviousYear( bindingOptions );\n                };\n\n                if ( isFirstVisibleYear( bindingOptions, bindingOptions._currentView.year ) ) {\n                    back.disabled = true;\n                }\n\n                bindingOptions._currentView.yearText = DomElement.createWithHTML( titleBar, \"div\", \"year-text\", bindingOptions._currentView.year.toString() );\n\n                if ( bindingOptions.title.showYearSelectionDropDown ) {\n                    renderYearDropDownMenu( bindingOptions );\n                } else {\n                    DomElement.addClass( bindingOptions._currentView.yearText, \"no-click\" );\n                }\n\n                if ( bindingOptions.title.showConfigurationButton ) {\n                    let configureButton: HTMLElement = DomElement.create( titleBar, \"div\", \"configure\" );\n\n                    addToolTip( configureButton, bindingOptions, _configuration.configurationToolTipText );\n\n                    configureButton.onclick = function () {\n                        showConfigurationDialog( bindingOptions );\n                    };\n                }\n\n                const next: any = DomElement.createWithHTML( titleBar, \"button\", \"next\", _configuration.nextButtonText );\n\n                next.onclick = function () {\n                    moveToNextYear( bindingOptions );\n                };\n\n                if ( isLastVisibleYear( bindingOptions, bindingOptions._currentView.year ) ) {\n                    next.disabled = true;\n                }\n            }\n        }\n    }\n\n    function renderTitleDropDownMenu( bindingOptions: BindingOptions, title: HTMLElement ) : void {\n        const titlesMenuContainer: HTMLElement = DomElement.create( title, \"div\", \"titles-menu-container\" );\n        const titlesMenu: HTMLElement = DomElement.create( titlesMenuContainer, \"div\", \"titles-menu\" );\n        \n        if ( bindingOptions.title.showTitleDropDownHeaders ) {\n            DomElement.createWithHTML( titlesMenu, \"div\", \"title-menu-header\", _configuration.dataText + Char.colon );\n        }\n\n        const menuItemMap: HTMLElement = DomElement.createWithHTML( titlesMenu, \"div\", \"title-menu-item\", _configuration.mapText );\n            \n        renderTitleDropDownMenuItemClickEvent( bindingOptions, menuItemMap, ViewId.map, ViewName.map );\n\n        if ( bindingOptions.views.chart.enabled ) {\n            const menuItemChart = DomElement.createWithHTML( titlesMenu, \"div\", \"title-menu-item\", _configuration.chartText );\n\n            renderTitleDropDownMenuItemClickEvent( bindingOptions, menuItemChart, ViewId.chart, ViewName.chart );\n        }\n\n        if ( bindingOptions.views.days.enabled ) {\n            if ( bindingOptions.title.showTitleDropDownHeaders ) {\n                DomElement.createWithHTML( titlesMenu, \"div\", \"title-menu-header\", _configuration.yearText + Char.colon );\n            }\n\n            const menuItemDays: HTMLElement = DomElement.createWithHTML( titlesMenu, \"div\", \"title-menu-item\", _configuration.daysText );\n\n            renderTitleDropDownMenuItemClickEvent( bindingOptions, menuItemDays, ViewId.days, ViewName.days );\n        }\n\n        if ( bindingOptions.views.statistics.enabled ) {\n            if ( bindingOptions.title.showTitleDropDownHeaders ) {\n                DomElement.createWithHTML( titlesMenu, \"div\", \"title-menu-header\", _configuration.statisticsText + Char.colon );\n            }\n\n            const menuItemStatistics: HTMLElement = DomElement.createWithHTML( titlesMenu, \"div\", \"title-menu-item\", _configuration.colorRangesText );\n\n            renderTitleDropDownMenuItemClickEvent( bindingOptions, menuItemStatistics, ViewId.statistics, ViewName.statistics );\n        }\n    }\n\n    function renderTitleDropDownMenuItemClickEvent( bindingOptions: BindingOptions, option: HTMLElement, view: number, viewName: string ) : void {\n        if ( bindingOptions._currentView.view === view ) {\n            DomElement.addClass( option, \"title-menu-item-active\" );\n            \n        } else {\n            option.onclick = function () {\n                bindingOptions._currentView.view = view;\n\n                fireCustomTriggerEvent( bindingOptions.events.onViewSwitch, viewName );\n                renderControlContainer( bindingOptions, false, true );\n            };\n        }\n    }\n\n    function renderYearDropDownMenu( bindingOptions: BindingOptions ) : void {\n        DomElement.create( bindingOptions._currentView.yearText, \"div\", \"down-arrow\" );\n\n        const yearsMenuContainer: HTMLElement = DomElement.create( bindingOptions._currentView.yearText, \"div\", \"years-menu-container\" );\n        const yearsMenu: HTMLElement = DomElement.create( yearsMenuContainer, \"div\", \"years-menu\" );\n        const thisYear: number = new Date().getFullYear();\n        let activeYearMenuItem: HTMLElement = null;\n\n        yearsMenuContainer.style.display = \"block\";\n        yearsMenuContainer.style.visibility = \"hidden\";\n\n        for ( let currentYear: number = thisYear - bindingOptions.title.extraSelectionYears; currentYear < thisYear + bindingOptions.title.extraSelectionYears; currentYear++ ) {\n            if ( isYearVisible( bindingOptions, currentYear ) ) {\n                let yearMenuItem: HTMLElement = renderYearDropDownMenuItem( bindingOptions, yearsMenu, currentYear, thisYear );\n\n                if ( !Is.defined( activeYearMenuItem ) ) {\n                    activeYearMenuItem = yearMenuItem;\n                }\n            }\n        }\n\n        if ( Is.defined( activeYearMenuItem ) ) {\n            yearsMenu.scrollTop = activeYearMenuItem.offsetTop - ( yearsMenu.offsetHeight / 2 );\n        }\n\n        yearsMenuContainer.style.display = \"none\";\n        yearsMenuContainer.style.visibility = \"visible\";\n    }\n\n    function renderYearDropDownMenuItem( bindingOptions: BindingOptions, years: HTMLElement, currentYear: number, actualYear: number ) : HTMLElement {\n        let result: HTMLElement = null;\n        const year: HTMLElement = DomElement.createWithHTML( years, \"div\", \"year-menu-item\", currentYear.toString() );\n\n        if ( bindingOptions._currentView.year !== currentYear ) {\n            year.onclick = function () {\n                bindingOptions._currentView.year = currentYear;\n    \n                renderControlContainer( bindingOptions );\n                fireCustomTriggerEvent( bindingOptions.events.onSetYear, bindingOptions._currentView.year );\n            };\n\n            if ( currentYear === actualYear ) {\n                DomElement.addClass( year, \"year-menu-item-current\" );\n            }\n\n        } else {\n            DomElement.addClass( year, \"year-menu-item-active\" );\n            result = year;\n        }\n\n        return result;\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Render:  View:  Map\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function renderControlMap( bindingOptions: BindingOptions, isForViewSwitch: boolean ) : void {\n        bindingOptions._currentView.mapContents = DomElement.create( bindingOptions._currentView.element, \"div\", \"map-contents\" );\n\n        if ( bindingOptions.views.chart.enabled ) {\n            renderControlChartContents( bindingOptions );\n        }\n\n        if ( bindingOptions.views.days.enabled ) {\n            renderControlDaysContents( bindingOptions );\n        }\n        \n        if ( bindingOptions.views.statistics.enabled ) {\n            renderControlStatisticsContents( bindingOptions );\n        }\n\n        renderControlViewGuide( bindingOptions );\n\n        if ( bindingOptions.views.map.showNoDataMessageWhenDataIsNotAvailable && !isDataAvailableForYear( bindingOptions ) ) {\n            const noDataMessage: HTMLElement = DomElement.createWithHTML( bindingOptions._currentView.mapContents, \"div\", \"no-data-message\", _configuration.noMapDataMessage );\n\n            if ( isForViewSwitch ) {\n                DomElement.addClass( noDataMessage, \"view-switch\" );\n            }\n\n        } else {\n            bindingOptions._currentView.mapContents.style.minHeight = \"unset\";\n\n            makeAreaDroppable( bindingOptions._currentView.mapContents, bindingOptions );\n\n            const map: HTMLElement = DomElement.create( bindingOptions._currentView.mapContents, \"div\", \"map\" );\n            const currentYear: number = bindingOptions._currentView.year;\n            let monthAdded: boolean = false;\n    \n            if ( isForViewSwitch ) {\n                DomElement.addClass( map, \"view-switch\" );\n            }\n    \n            if ( bindingOptions.views.map.showDayNames ) {\n                const days: HTMLElement = DomElement.create( map, \"div\", \"days\" );\n                const showMinimalDays: boolean = bindingOptions.views.map.showMinimalDayNames && bindingOptions.views.map.daysToShow.length === 7;\n    \n                if ( !bindingOptions.views.map.showMonthNames || bindingOptions.views.map.placeMonthNamesOnTheBottom ) {\n                    days.className = \"days-months-bottom\";\n                }\n        \n                for ( let dayNameIndex: number = 0; dayNameIndex < 7; dayNameIndex++ ) {\n                    if ( isDayVisible( bindingOptions.views.map.daysToShow, dayNameIndex + 1 ) ) {\n                        const dayText: string = !showMinimalDays || dayNameIndex % 3 === 0 ? _configuration.dayNames[ dayNameIndex ] : Char.space;\n\n                        DomElement.createWithHTML( days, \"div\", \"day-name\", dayText );\n                    }\n                }\n    \n                if ( bindingOptions.views.map.showDaysInReverseOrder ) {\n                    DomElement.reverseChildrenOrder( days );\n                }\n            }\n    \n            const months: HTMLElement = DomElement.create( map, \"div\", \"months\" );\n            const colorRanges: ColorRange[] = getSortedColorRanges( bindingOptions );\n    \n            for ( let monthIndex: number = 0; monthIndex < 12; monthIndex++ ) {\n                if ( isMonthVisible( bindingOptions.views.map.monthsToShow, monthIndex ) ) {\n                    const month: HTMLElement = DomElement.create( months, \"div\", \"month\" );\n                    const dayColumns: HTMLElement = DomElement.create( month, \"div\", \"day-columns\" );\n                    let totalDaysInMonth: number = DateTime.getTotalDaysInMonth( currentYear, monthIndex );\n                    let currentDayColumn: HTMLElement = DomElement.create( dayColumns, \"div\", \"day-column\" );\n                    let startFillingDays: boolean = false;\n                    const firstDayInMonth: Date = new Date( currentYear, monthIndex, 1 );\n                    const firstDayNumberInMonth: number = DateTime.getWeekdayNumber( firstDayInMonth );\n                    let actualDay: number = 1;\n        \n                    totalDaysInMonth += firstDayNumberInMonth;\n        \n                    for ( let dayIndex: number = 0; dayIndex < totalDaysInMonth; dayIndex++ ) {\n                        if ( dayIndex >= firstDayNumberInMonth ) {\n                            startFillingDays = true;\n        \n                        } else {\n                            if ( isDayVisible( bindingOptions.views.map.daysToShow, actualDay ) ) {\n                                DomElement.create( currentDayColumn, \"div\", \"day-disabled\" );\n                            }\n                        }\n        \n                        if ( startFillingDays ) {\n                            let day: HTMLElement = null;\n    \n                            if ( isDayVisible( bindingOptions.views.map.daysToShow, actualDay ) ) {\n                                day = renderControlMapMonthDay( bindingOptions, currentDayColumn, dayIndex - firstDayNumberInMonth, monthIndex, currentYear, colorRanges );\n                            }\n            \n                            if ( ( dayIndex + 1 ) % 7 === 0 ) {\n                                if ( bindingOptions.views.map.showDaysInReverseOrder ) {\n                                    DomElement.reverseChildrenOrder( currentDayColumn );\n                                }\n    \n                                currentDayColumn = DomElement.create( dayColumns, \"div\", \"day-column\" );\n                                actualDay = 0;\n    \n                                if ( !Is.defined( _elements_Day_Width ) && Is.defined( day ) ) {\n                                    let marginLeft: number = DomElement.getStyleValueByName( day, \"margin-left\", true );\n                                    let marginRight: number = DomElement.getStyleValueByName( day, \"margin-right\", true );\n                                    \n                                    _elements_Day_Width = day.offsetWidth + marginLeft + marginRight;\n                                }\n                            }\n                        }\n    \n                        actualDay++;\n                    }\n    \n                    if ( bindingOptions.views.map.showMonthNames ) {\n                        let monthName: HTMLElement = null;\n                        const monthWidth: number = month.offsetWidth;\n    \n                        if ( !bindingOptions.views.map.placeMonthNamesOnTheBottom ) {\n                            monthName = DomElement.createWithHTML( month, \"div\", \"month-name\", _configuration.monthNames[ monthIndex ], dayColumns );\n                        } else {\n                            monthName = DomElement.createWithHTML( month, \"div\", \"month-name-bottom\", _configuration.monthNames[ monthIndex ] );\n                        }\n    \n                        if ( Is.defined( monthName ) ) {\n                            if ( bindingOptions.views.map.showMonthDayGaps ) {\n                                monthName.style.width = monthWidth + \"px\";\n                            } else {\n                                monthName.style.width = ( monthWidth - _elements_Day_Width ) + \"px\";\n                            }\n                        }\n                    }\n    \n                    if ( monthAdded && Is.defined( _elements_Day_Width ) ) {\n                        if ( firstDayNumberInMonth > 0 && !bindingOptions.views.map.showMonthDayGaps ) {\n                            month.style.marginLeft = -_elements_Day_Width + \"px\";\n                        } else if ( firstDayNumberInMonth === 0 && bindingOptions.views.map.showMonthDayGaps ) {\n                            month.style.marginLeft = _elements_Day_Width + \"px\";\n                        }\n                    }\n\n                    if ( bindingOptions.views.map.showMonthsInReverseOrder ) {\n                        DomElement.reverseChildrenOrder( dayColumns );\n                    }\n    \n                    monthAdded = true;\n                }\n            }\n\n            if ( bindingOptions.views.map.showMonthsInReverseOrder ) {\n                DomElement.reverseChildrenOrder( months );\n            }\n            \n            if ( bindingOptions.views.map.keepScrollPositions ) {\n                bindingOptions._currentView.mapContents.scrollLeft = bindingOptions._currentView.mapContentsScrollLeft;\n            }\n        }\n    }\n\n    function renderControlMapMonthDay( bindingOptions: BindingOptions, currentDayColumn: HTMLElement, dayNumber: number, month: number, year: number, colorRanges: ColorRange[] ) : HTMLElement {\n        const actualDay: number = dayNumber + 1;\n        const day: HTMLElement = DomElement.create( currentDayColumn, \"div\", \"day\" );\n        const date: Date = new Date( year, month, actualDay );\n        let dateCount: number = _elements_DateCounts[ bindingOptions._currentView.element.id ].typeData[ bindingOptions._currentView.type ][ toStorageDate( date ) ];\n\n        dateCount = Data.getDefaultNumber( dateCount, 0 );\n\n        renderDayToolTip( bindingOptions, day, date, dateCount );\n\n        if ( bindingOptions.views.map.showDayNumbers && dateCount > 0 ) {\n            day.innerHTML = dateCount.toString();\n        }\n\n        if ( Is.definedFunction( bindingOptions.events.onDayClick ) ) {\n            day.onclick = function () {\n                fireCustomTriggerEvent( bindingOptions.events.onDayClick, date, dateCount );\n            };\n\n        } else {\n            DomElement.addClass( day, \"no-hover\" );\n        }\n\n        const useColorRange: ColorRange = getColorRange( bindingOptions, colorRanges, dateCount, date );\n\n        if ( Is.defined( useColorRange ) && isColorRangeVisible( bindingOptions, useColorRange.id ) ) {\n            if ( Is.definedString( useColorRange.mapCssClassName ) ) {\n                DomElement.addClass( day, useColorRange.mapCssClassName );\n            } else {\n                DomElement.addClass( day, useColorRange.cssClassName );\n            }\n        }\n\n        return day;\n    }\n\n    function isDataAvailableForYear( bindingOptions: BindingOptions ) : boolean {\n        let result: boolean = false;\n        const data: TypeCountsData = getCurrentViewData( bindingOptions );\n        const checkDate: string = bindingOptions._currentView.year.toString();\n\n        for ( let storageDate in data ) {\n            if ( data.hasOwnProperty( storageDate ) ) {\n                if ( getStorageDateYear( storageDate ) === checkDate ) {\n                    result = true;\n                    break;\n                }\n            }\n        }\n\n        return result;\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Render:  View:  Chart\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function renderControlChartContents( bindingOptions: BindingOptions ) : void {\n        bindingOptions._currentView.chartContents = DomElement.create( bindingOptions._currentView.element, \"div\", \"chart-contents\" );\n\n        makeAreaDroppable( bindingOptions._currentView.chartContents, bindingOptions );\n    }\n\n    function renderControlChart( bindingOptions: BindingOptions, isForViewSwitch: boolean) : void {\n        const chart: HTMLElement = DomElement.create( bindingOptions._currentView.chartContents, \"div\", \"chart\" );\n        let labels: HTMLElement = DomElement.create( chart, \"div\", \"y-labels\" );\n        const dayLines: HTMLElement = DomElement.create( chart, \"div\", \"day-lines\" );\n        const colorRanges: ColorRange[] = getSortedColorRanges( bindingOptions );\n        const largestValueForCurrentYear: number = getLargestValueForChartYear( bindingOptions );\n        const currentYear: number = bindingOptions._currentView.year;\n        let labelsWidth: number = 0;\n\n        if ( isForViewSwitch ) {\n            DomElement.addClass( chart, \"view-switch\" );\n        }\n\n        if ( largestValueForCurrentYear > 0 && bindingOptions.views.chart.showChartYLabels ) {\n            const topLabel: HTMLElement = DomElement.createWithHTML( labels, \"div\", \"label-0\", largestValueForCurrentYear.toString() );\n\n            DomElement.createWithHTML( labels, \"div\", \"label-25\", ( Math.floor( largestValueForCurrentYear / 4 ) * 3 ).toString() );\n            DomElement.createWithHTML( labels, \"div\", \"label-50\", Math.floor( largestValueForCurrentYear / 2 ).toString() );\n            DomElement.createWithHTML( labels, \"div\", \"label-75\", Math.floor( largestValueForCurrentYear / 4 ).toString() );\n            DomElement.createWithHTML( labels, \"div\", \"label-100\", Char.zero );\n\n            labels.style.width = topLabel.offsetWidth + \"px\";\n            labelsWidth = labels.offsetWidth + DomElement.getStyleValueByName( labels, \"margin-right\", true );\n\n        } else {\n            labels.parentNode.removeChild( labels );\n            labels = null;\n        }\n\n        if ( largestValueForCurrentYear === 0 ) {\n            bindingOptions._currentView.chartContents.style.minHeight = bindingOptions._currentView.mapContents.offsetHeight + \"px\";\n            chart.parentNode.removeChild( chart );\n\n            const noDataMessage: HTMLElement = DomElement.createWithHTML( bindingOptions._currentView.chartContents, \"div\", \"no-data-message\", _configuration.noChartDataMessage );\n\n            if ( isForViewSwitch ) {\n                DomElement.addClass( noDataMessage, \"view-switch\" );\n            }\n\n        } else {\n            const pixelsPerNumbers: number = bindingOptions._currentView.mapContents.offsetHeight / largestValueForCurrentYear;\n            let totalMonths: number = 0;\n            let totalDays: number = 0;\n\n            for ( let monthIndex1: number = 0; monthIndex1 < 12; monthIndex1++ ) {\n                if ( isMonthVisible( bindingOptions.views.chart.monthsToShow, monthIndex1 ) ) {\n                    const totalDaysInMonth: number = DateTime.getTotalDaysInMonth( currentYear, monthIndex1 );\n                    let actualDay: number = 1;\n                    \n                    totalMonths++;\n\n                    for ( let dayIndex: number = 0; dayIndex < totalDaysInMonth; dayIndex++ ) {\n                        if ( isDayVisible( bindingOptions.views.chart.daysToShow, actualDay ) ) {\n                            renderControlChartDay( dayLines, bindingOptions, dayIndex + 1, monthIndex1, currentYear, colorRanges, pixelsPerNumbers );\n                        }\n        \n                        if ( ( dayIndex + 1 ) % 7 === 0 ) {\n                            actualDay = 0;\n                        }\n    \n                        actualDay++;\n                        totalDays++;\n                    }\n                }\n            }\n\n            if ( bindingOptions.views.chart.showInReverseOrder ) {\n                DomElement.reverseChildrenOrder( dayLines );\n            }\n\n            if ( bindingOptions.views.chart.showMonthNames ) {\n                const chartMonths: HTMLElement = DomElement.create( bindingOptions._currentView.chartContents, \"div\", \"chart-months\" );\n                const linesWidth: number = dayLines.offsetWidth / totalMonths;\n                let monthTimesValue: number = 0;\n\n                const addMonthName: Function = function ( addMonthNameIndex: number ) {\n                    if ( isMonthVisible( bindingOptions.views.chart.monthsToShow, addMonthNameIndex ) ) {\n                        let monthName: HTMLElement = DomElement.createWithHTML( chartMonths, \"div\", \"month-name\", _configuration.monthNames[ addMonthNameIndex ] );\n                        monthName.style.left = labelsWidth + ( linesWidth * monthTimesValue ) + \"px\";\n\n                        monthTimesValue++;\n                    }\n                };\n\n                if ( bindingOptions.views.chart.showInReverseOrder ) {\n                    for ( let monthIndex2: number = 12; monthIndex2--; ) {\n                        addMonthName( monthIndex2 );\n                    }\n                } else {\n                    for ( let monthIndex3: number = 0; monthIndex3 < 12; monthIndex3++ ) {\n                        addMonthName( monthIndex3 );\n                    }\n                }\n\n                chartMonths.style.width = dayLines.offsetWidth + \"px\";\n\n                const monthNameSpace: HTMLElement = DomElement.create( chartMonths, \"div\", \"month-name-space\" );\n                monthNameSpace.style.height = chartMonths.offsetHeight + \"px\";\n                monthNameSpace.style.width = labelsWidth + \"px\";\n            }\n    \n            if ( bindingOptions.views.chart.keepScrollPositions ) {\n                bindingOptions._currentView.chartContents.scrollLeft = bindingOptions._currentView.chartContentsScrollLeft;\n            }\n        }\n    }\n\n    function renderControlChartDay( dayLines: HTMLElement, bindingOptions: BindingOptions, day: number, month: number, year: number, colorRanges: ColorRange[], pixelsPerNumbers: number ) : void {\n        const date: Date = new Date( year, month, day );\n        const dayLine: HTMLElement = DomElement.create( dayLines, \"div\", \"day-line\" );\n        let dateCount: number = getCurrentViewData( bindingOptions )[ toStorageDate( date ) ];\n\n        dateCount = Data.getDefaultNumber( dateCount, 0 );\n\n        renderDayToolTip( bindingOptions, dayLine, date, dateCount );\n\n        if ( bindingOptions.views.chart.showLineNumbers && dateCount > 0 ) {\n            DomElement.addClass( dayLine, \"day-line-number\" );\n\n            dayLine.innerHTML = dateCount.toString();\n        }\n\n        const dayLineHeight: number = dateCount * pixelsPerNumbers;\n        dayLine.style.height = dayLineHeight + \"px\";\n\n        if ( dayLineHeight <= 0 ) {\n            dayLine.style.visibility = \"hidden\";\n        }\n\n        if ( Is.definedFunction( bindingOptions.events.onDayClick ) ) {\n            dayLine.onclick = function () {\n                fireCustomTriggerEvent( bindingOptions.events.onDayClick, date, dateCount );\n            };\n\n        } else {\n            DomElement.addClass( dayLine, \"no-hover\" );\n        }\n\n        const useColorRange: ColorRange = getColorRange( bindingOptions, colorRanges, dateCount, date );\n\n        if ( Is.defined( useColorRange ) && isColorRangeVisible( bindingOptions, useColorRange.id ) ) {\n            if ( Is.definedString( useColorRange.chartCssClassName ) ) {\n                DomElement.addClass( dayLine, useColorRange.chartCssClassName );\n            } else {\n                DomElement.addClass( dayLine, useColorRange.cssClassName );\n            }\n        }\n    }\n\n    function getLargestValueForChartYear( bindingOptions: BindingOptions ) : number {\n        let result: number = 0;\n        const data: TypeCountsData = getCurrentViewData( bindingOptions );\n\n        for ( let monthIndex: number = 0; monthIndex < 12; monthIndex++ ) {\n            const totalDaysInMonth: number = DateTime.getTotalDaysInMonth( bindingOptions._currentView.year, monthIndex );\n    \n            for ( let dayIndex: number = 0; dayIndex < totalDaysInMonth; dayIndex++ ) {\n                const storageDate: string = toStorageDate( new Date( bindingOptions._currentView.year, monthIndex, dayIndex + 1 ) );\n\n                if ( data.hasOwnProperty( storageDate ) ) {\n                    if ( isMonthVisible( bindingOptions.views.chart.monthsToShow, monthIndex ) && isDayVisible( bindingOptions.views.chart.daysToShow, dayIndex + 1 ) ) {\n                        result = Math.max( result, data[ storageDate ] );\n                    }\n                }\n            }\n        }\n\n        return result;\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Render:  View:  Days\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function renderControlDaysContents( bindingOptions: BindingOptions ) : void {\n        bindingOptions._currentView.daysContents = DomElement.create( bindingOptions._currentView.element, \"div\", \"days-contents\" );\n\n        makeAreaDroppable( bindingOptions._currentView.daysContents, bindingOptions );\n    }\n\n    function renderControlDays( bindingOptions: BindingOptions, isForViewSwitch: boolean ) : void {\n        const days: HTMLElement = DomElement.create( bindingOptions._currentView.daysContents, \"div\", \"days\" );\n        const dayNames: HTMLElement = DomElement.create( bindingOptions._currentView.daysContents, \"div\", \"day-names\" );\n        let labels: HTMLElement = DomElement.create( days, \"div\", \"y-labels\" );\n        const dayLines: HTMLElement = DomElement.create( days, \"div\", \"day-lines\" );\n        const dayValuesForCurrentYear: any = getLargestValuesForEachDay( bindingOptions );\n\n        if ( isForViewSwitch ) {\n            DomElement.addClass( days, \"view-switch\" );\n        }\n\n        if ( dayValuesForCurrentYear.largestValue > 0 && bindingOptions.views.days.showChartYLabels ) {\n            const topLabel: HTMLElement = DomElement.createWithHTML( labels, \"div\", \"label-0\", dayValuesForCurrentYear.largestValue.toString() );\n\n            DomElement.createWithHTML( labels, \"div\", \"label-25\", ( Math.floor( dayValuesForCurrentYear.largestValue / 4 ) * 3 ).toString() );\n            DomElement.createWithHTML( labels, \"div\", \"label-50\", Math.floor( dayValuesForCurrentYear.largestValue / 2 ).toString() );\n            DomElement.createWithHTML( labels, \"div\", \"label-75\", Math.floor( dayValuesForCurrentYear.largestValue / 4 ).toString() );\n            DomElement.createWithHTML( labels, \"div\", \"label-100\", Char.zero );\n\n            labels.style.width = topLabel.offsetWidth + \"px\";\n            dayNames.style.paddingLeft = labels.offsetWidth + DomElement.getStyleValueByName( labels, \"margin-right\", true ) + \"px\";\n\n        } else {\n            labels.parentNode.removeChild( labels );\n            labels = null;\n        }\n\n        if ( dayValuesForCurrentYear.largestValue === 0 ) {\n            bindingOptions._currentView.daysContents.style.minHeight = bindingOptions._currentView.mapContents.offsetHeight + \"px\";\n            days.parentNode.removeChild( days );\n            dayNames.parentNode.removeChild( dayNames );\n\n            const noDataMessage: HTMLElement = DomElement.createWithHTML( bindingOptions._currentView.daysContents, \"div\", \"no-days-message\", _configuration.noDaysDataMessage );\n\n            if ( isForViewSwitch ) {\n                DomElement.addClass( noDataMessage, \"view-switch\" );\n            }\n\n        } else {\n            const pixelsPerNumbers: number = bindingOptions._currentView.mapContents.offsetHeight / dayValuesForCurrentYear.largestValue;\n\n            for ( let day in dayValuesForCurrentYear.days ) {\n                if ( dayValuesForCurrentYear.days.hasOwnProperty( day ) && isDayVisible( bindingOptions.views.days.daysToShow, parseInt( day ) ) ) {\n                    renderControlDaysDayLine( dayLines, parseInt( day ), dayValuesForCurrentYear.days[ day ], bindingOptions, pixelsPerNumbers );\n\n                    if ( bindingOptions.views.days.showDayNames ) {\n                        DomElement.createWithHTML( dayNames, \"div\", \"day-name\", _configuration.dayNames[ parseInt( day ) - 1 ] );\n                    }\n                }\n            }\n\n            if ( bindingOptions.views.days.showInReverseOrder ) {\n                DomElement.reverseChildrenOrder( dayLines );\n                DomElement.reverseChildrenOrder( dayNames );\n            }\n\n            if ( bindingOptions.views.days.keepScrollPositions ) {\n                bindingOptions._currentView.daysContents.scrollLeft = bindingOptions._currentView.daysContentsScrollLeft;\n            }\n        }\n    }\n\n    function renderControlDaysDayLine( dayLines: HTMLElement, dayNumber: number, dayCount: number, bindingOptions: BindingOptions, pixelsPerNumbers: number ) : void {\n        const dayLine: HTMLElement = DomElement.create( dayLines, \"div\", \"day-line\" );\n        const dayLineHeight: number = dayCount * pixelsPerNumbers;\n\n        dayLine.style.height = dayLineHeight + \"px\";\n\n        if ( dayLineHeight <= 0 ) {\n            dayLine.style.visibility = \"hidden\";\n        }\n        \n        addToolTip( dayLine, bindingOptions, dayCount.toString() );\n\n        if ( Is.definedFunction( bindingOptions.events.onWeekDayClick ) ) {\n            dayLine.onclick = function () {\n                fireCustomTriggerEvent( bindingOptions.events.onWeekDayClick, dayNumber, dayCount );\n            };\n\n        } else {\n            DomElement.addClass( dayLine, \"no-hover\" );\n        }\n\n        if ( bindingOptions.views.days.showDayNumbers && dayCount > 0 ) {\n            DomElement.addClass( dayLine, \"day-line-number\" );\n\n            DomElement.createWithHTML( dayLine, \"div\", \"count\", dayCount.toString() );\n        }\n    }\n\n    function getLargestValuesForEachDay( bindingOptions: BindingOptions ) : any {\n        let largestValue: number = 0;\n        const data: TypeCountsData = getCurrentViewData( bindingOptions );\n\n        const days : object = {\n            1: 0,\n            2: 0,\n            3: 0,\n            4: 0,\n            5: 0,\n            6: 0,\n            7: 0,\n        };\n\n        for ( let monthIndex: number = 0; monthIndex < 12; monthIndex++ ) {\n            const totalDaysInMonth: number = DateTime.getTotalDaysInMonth( bindingOptions._currentView.year, monthIndex );\n    \n            for ( let dayIndex: number = 0; dayIndex < totalDaysInMonth; dayIndex++ ) {\n                const storageDate: string = toStorageDate( new Date( bindingOptions._currentView.year, monthIndex, dayIndex + 1 ) );\n\n                if ( data.hasOwnProperty( storageDate ) ) {\n                    const storageDateParts: string[] = getStorageDate( storageDate );\n                    const storageDateObject: Date = new Date( parseInt( storageDateParts[ 2 ] ), parseInt( storageDateParts[ 1 ] ), parseInt( storageDateParts[ 0 ] ) );\n                    const weekDayNumber: number = DateTime.getWeekdayNumber( storageDateObject ) + 1;\n\n                    if ( !isHoliday( bindingOptions, storageDateObject ).matched && isMonthVisible( bindingOptions.views.days.monthsToShow, storageDateObject.getMonth() ) && isDayVisible( bindingOptions.views.days.daysToShow, weekDayNumber ) ) {\n                        days[ weekDayNumber ] += data[ storageDate ];\n\n                        largestValue = Math.max( largestValue, days[ weekDayNumber ] );\n                    }\n                }\n            }\n        }\n\n        return {\n            days: days,\n            largestValue: largestValue\n        };\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Render:  View:  Statistics\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function renderControlStatisticsContents( bindingOptions: BindingOptions ) : void {\n        bindingOptions._currentView.statisticsContents = DomElement.create( bindingOptions._currentView.element, \"div\", \"statistics-contents\" );\n\n        makeAreaDroppable( bindingOptions._currentView.statisticsContents, bindingOptions );\n    }\n\n    function renderControlStatistics( bindingOptions: BindingOptions, isForViewSwitch: boolean ) : void {\n        const statistics: HTMLElement = DomElement.create( bindingOptions._currentView.statisticsContents, \"div\", \"statistics\" );\n        const statisticsRanges: HTMLElement = DomElement.create( bindingOptions._currentView.statisticsContents, \"div\", \"statistics-ranges\" );\n        let labels: HTMLElement = DomElement.create( statistics, \"div\", \"y-labels\" );\n        const rangeLines: HTMLElement = DomElement.create( statistics, \"div\", \"range-lines\" );\n        const colorRanges: ColorRange[] = getSortedColorRanges( bindingOptions );\n        const colorRangeValuesForCurrentYear = getLargestValuesForEachRangeType( bindingOptions, colorRanges );\n\n        if ( isForViewSwitch ) {\n            DomElement.addClass( statistics, \"view-switch\" );\n        }\n\n        if ( colorRangeValuesForCurrentYear.largestValue > 0 && bindingOptions.views.statistics.showChartYLabels ) {\n            const topLabel: HTMLElement = DomElement.createWithHTML( labels, \"div\", \"label-0\", colorRangeValuesForCurrentYear.largestValue.toString() );\n\n            DomElement.createWithHTML( labels, \"div\", \"label-25\", ( Math.floor( colorRangeValuesForCurrentYear.largestValue / 4 ) * 3 ).toString() );\n            DomElement.createWithHTML( labels, \"div\", \"label-50\", Math.floor( colorRangeValuesForCurrentYear.largestValue / 2 ).toString() );\n            DomElement.createWithHTML( labels, \"div\", \"label-75\", Math.floor( colorRangeValuesForCurrentYear.largestValue / 4 ).toString() );\n            DomElement.createWithHTML( labels, \"div\", \"label-100\", Char.zero );\n\n            labels.style.width = topLabel.offsetWidth + \"px\";\n            statisticsRanges.style.paddingLeft = labels.offsetWidth + DomElement.getStyleValueByName( labels, \"margin-right\", true ) + \"px\";\n\n        } else {\n            labels.parentNode.removeChild( labels );\n            labels = null;\n        }\n\n        if ( colorRangeValuesForCurrentYear.largestValue === 0 ) {\n            bindingOptions._currentView.statisticsContents.style.minHeight = bindingOptions._currentView.mapContents.offsetHeight + \"px\";\n            statistics.parentNode.removeChild( statistics );\n            statisticsRanges.parentNode.removeChild( statisticsRanges );\n\n            const noDataMessage: HTMLElement = DomElement.createWithHTML( bindingOptions._currentView.statisticsContents, \"div\", \"no-statistics-message\", _configuration.noStatisticsDataMessage );\n\n            if ( isForViewSwitch ) {\n                DomElement.addClass( noDataMessage, \"view-switch\" );\n            }\n\n        } else {\n            const pixelsPerNumbers: number = bindingOptions._currentView.mapContents.offsetHeight / colorRangeValuesForCurrentYear.largestValue;\n\n            if ( !bindingOptions.views.statistics.showColorRangeLabels ) {\n                statisticsRanges.parentNode.removeChild( statisticsRanges );\n            }\n\n            for ( let type in colorRangeValuesForCurrentYear.types ) {\n                if ( colorRangeValuesForCurrentYear.types.hasOwnProperty( type ) ) {\n                    renderControlStatisticsRangeLine( parseInt( type ), rangeLines, colorRangeValuesForCurrentYear.types[ type ], bindingOptions, colorRanges, pixelsPerNumbers );\n\n                    const useColorRange: ColorRange = getColorRangeByMinimum( colorRanges, parseInt( type ) );\n\n                    if ( bindingOptions.views.statistics.showColorRangeLabels ) {\n                        if ( !bindingOptions.views.statistics.useColorRangeNamesForLabels || !Is.defined( useColorRange ) || !Is.definedString( useColorRange.name ) ) {\n                            DomElement.createWithHTML( statisticsRanges, \"div\", \"range-name\", type + Char.plus );\n                        } else {\n                            DomElement.createWithHTML( statisticsRanges, \"div\", \"range-name\", useColorRange.name );\n                        }\n                    }\n                }\n            }\n\n            if ( bindingOptions.views.statistics.showInReverseOrder ) {\n                DomElement.reverseChildrenOrder( rangeLines );\n                DomElement.reverseChildrenOrder( statisticsRanges );\n            }\n    \n            if ( bindingOptions.views.statistics.keepScrollPositions ) {\n                bindingOptions._currentView.statisticsContents.scrollLeft = bindingOptions._currentView.statisticsContentsScrollLeft;\n            }\n        }\n    }\n\n    function renderControlStatisticsRangeLine( colorRangeMinimum: number, dayLines: HTMLElement, rangeCount: number, bindingOptions: BindingOptions, colorRanges: ColorRange[], pixelsPerNumbers: number ) : void {\n        const rangeLine: HTMLElement = DomElement.create( dayLines, \"div\", \"range-line\" );\n        const useColorRange: ColorRange = getColorRangeByMinimum( colorRanges, colorRangeMinimum );\n        const rangeLineHeight: number = rangeCount * pixelsPerNumbers;\n\n        rangeLine.style.height = rangeLineHeight + \"px\";\n\n        if ( rangeLineHeight <= 0 ) {\n            rangeLine.style.visibility = \"hidden\";\n        }\n        \n        addToolTip( rangeLine, bindingOptions, rangeCount.toString() );\n\n        if ( bindingOptions.views.statistics.showRangeNumbers && rangeCount > 0 ) {\n            DomElement.addClass( rangeLine, \"range-line-number\" );\n\n            DomElement.createWithHTML( rangeLine, \"div\", \"count\", rangeCount.toString() );\n        }\n\n        if ( Is.definedFunction( bindingOptions.events.onStatisticClick ) ) {\n            rangeLine.onclick = function () {\n                fireCustomTriggerEvent( bindingOptions.events.onStatisticClick, useColorRange );\n            };\n\n        } else {\n            DomElement.addClass( rangeLine, \"no-hover\" );\n        }\n\n        if ( Is.defined( useColorRange ) && isColorRangeVisible( bindingOptions, useColorRange.id ) ) {\n            if ( Is.definedString( useColorRange.statisticsCssClassName ) ) {\n                DomElement.addClass( rangeLine, useColorRange.statisticsCssClassName );\n            } else {\n                DomElement.addClass( rangeLine, useColorRange.cssClassName );\n            }\n        }\n    }\n\n    function getLargestValuesForEachRangeType( bindingOptions: BindingOptions, colorRanges: ColorRange[] ) : any {\n        const types: TypeCountsData = {} as TypeCountsData;\n        const data: TypeCountsData = getCurrentViewData( bindingOptions );\n        let largestValue: number = 0;\n\n        types[ Char.zero ] = 0;\n\n        for ( let monthIndex: number = 0; monthIndex < 12; monthIndex++ ) {\n            const totalDaysInMonth: number = DateTime.getTotalDaysInMonth( bindingOptions._currentView.year, monthIndex );\n    \n            for ( let dayIndex: number = 0; dayIndex < totalDaysInMonth; dayIndex++ ) {\n                const storageDate: string = toStorageDate( new Date( bindingOptions._currentView.year, monthIndex, dayIndex + 1 ) );\n\n                if ( data.hasOwnProperty( storageDate ) ) {\n                    const storageDateParts: string[] = getStorageDate( storageDate );\n                    const storageDateObject: Date = new Date( parseInt( storageDateParts[ 2 ] ), parseInt( storageDateParts[ 1 ] ), parseInt( storageDateParts[ 0 ] ) );\n                    const weekDayNumber: number = DateTime.getWeekdayNumber( storageDateObject ) + 1;\n\n                    if ( !isHoliday( bindingOptions, storageDateObject ).matched && isMonthVisible( bindingOptions.views.statistics.monthsToShow, storageDateObject.getMonth() ) && isDayVisible( bindingOptions.views.statistics.daysToShow, weekDayNumber ) ) {\n                        const useColorRange: ColorRange = getColorRange( bindingOptions, colorRanges, data[ storageDate ] );\n\n                        if ( !Is.defined( useColorRange ) ) {\n                            types[ Char.zero ]++;\n    \n                        } else {\n                            if ( !types.hasOwnProperty( useColorRange.minimum.toString() ) ) {\n                                types[ useColorRange.minimum.toString() ] = 0;\n                            }\n    \n                            types[ useColorRange.minimum ]++;\n                            \n                            largestValue = Math.max( largestValue, types[ useColorRange.minimum ] );\n                        }\n                    }\n                }\n            }\n        }\n\n        return {\n            types: types,\n            largestValue: largestValue\n        };\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Render:  Guide\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function renderControlViewGuide( bindingOptions: BindingOptions ) : void {\n        const guide: HTMLElement = DomElement.create( bindingOptions._currentView.element, \"div\", \"guide\" )\n        const mapTypes: HTMLElement = DomElement.create( guide, \"div\", \"map-types\" );\n        let noneTypeCount: number = 0;\n\n        for ( let storageDate in _elements_DateCounts[ bindingOptions._currentView.element.id ].typeData[ _configuration.unknownTrendText ] ) {\n            if ( _elements_DateCounts[ bindingOptions._currentView.element.id ].typeData[ _configuration.unknownTrendText ].hasOwnProperty( storageDate ) ) {\n                noneTypeCount++;\n                break;\n            }\n        }\n\n        if ( _elements_DateCounts[ bindingOptions._currentView.element.id ].types > 1 ) {\n            if ( Is.definedString( bindingOptions.description.text ) ) {\n                const description: HTMLElement = DomElement.create( bindingOptions._currentView.element, \"div\", \"description\", guide );\n    \n                renderDescription( bindingOptions, description );\n            }\n\n            for ( let type in _elements_DateCounts[ bindingOptions._currentView.element.id ].typeData ) {\n                if ( type !== _configuration.unknownTrendText || noneTypeCount > 0 ) {\n                    if ( noneTypeCount === 0 && bindingOptions._currentView.type === _configuration.unknownTrendText ) {\n                        bindingOptions._currentView.type = type;\n                    }\n\n                    renderControlViewGuideTypeButton( bindingOptions, mapTypes, type );\n                }\n            }\n\n        } else {\n            renderDescription( bindingOptions, mapTypes );\n        }\n\n        if ( bindingOptions.guide.enabled ) {\n            const mapToggles: HTMLElement = DomElement.create( guide, \"div\", \"map-toggles\" );\n\n            if ( bindingOptions.guide.showLessAndMoreLabels ) {\n                let lessText: HTMLElement = DomElement.createWithHTML( mapToggles, \"div\", \"less-text\", _configuration.lessText );\n    \n                if ( bindingOptions.guide.colorRangeTogglesEnabled ) {\n                    lessText.onclick = function () {\n                        updateColorRangeToggles( bindingOptions, false );\n                    };\n        \n                } else {\n                    DomElement.addClass( lessText, \"no-click\" );\n                }\n            }\n    \n            const days: HTMLElement = DomElement.create( mapToggles, \"div\", \"days\" );\n            const colorRanges: ColorRange[] = getSortedColorRanges( bindingOptions );\n            const colorRangesLength: number = colorRanges.length;\n    \n            for ( let colorRangesIndex: number = 0; colorRangesIndex < colorRangesLength; colorRangesIndex++ ) {\n                renderControlViewGuideDay( bindingOptions, days, colorRanges[ colorRangesIndex ] );\n            }\n\n            if ( bindingOptions.guide.showLessAndMoreLabels ) {\n                const moreText: HTMLElement = DomElement.createWithHTML( mapToggles, \"div\", \"more-text\", _configuration.moreText );\n    \n                if ( bindingOptions.guide.colorRangeTogglesEnabled ) {\n                    moreText.onclick = function () {\n                        updateColorRangeToggles( bindingOptions, true );\n                    };\n        \n                } else {\n                    DomElement.addClass( moreText, \"no-click\" );\n                }\n            }\n        }\n    }\n\n    function renderControlViewGuideTypeButton( bindingOptions: BindingOptions, mapTypes: HTMLElement, type: string ) : void {\n        const typeButton: HTMLElement = DomElement.createWithHTML( mapTypes, \"button\", \"type\", type );\n\n        if ( bindingOptions._currentView.type === type ) {\n            DomElement.addClass( typeButton, \"active\" );\n        }\n\n        typeButton.onclick = function () {\n            if ( bindingOptions._currentView.type !== type ) {\n                bindingOptions._currentView.type = type;\n\n                fireCustomTriggerEvent( bindingOptions.events.onTypeSwitch, type );\n                renderControlContainer( bindingOptions );\n            }\n        };\n    }\n\n    function renderControlViewGuideDay( bindingOptions: BindingOptions, days: HTMLElement, colorRange: ColorRange ) : void {\n        const day: HTMLElement = DomElement.create( days, \"div\" );\n        day.className = \"day\";\n\n        addToolTip( day, bindingOptions, colorRange.tooltipText );\n\n        if ( isColorRangeVisible( bindingOptions, colorRange.id ) ) {\n            if ( bindingOptions._currentView.view === ViewId.map && Is.definedString( colorRange.mapCssClassName ) ) {\n                DomElement.addClass( day, colorRange.mapCssClassName );\n            } else if ( bindingOptions.views.chart.enabled && bindingOptions._currentView.view === ViewId.chart && Is.definedString( colorRange.chartCssClassName ) ) {\n                DomElement.addClass( day, colorRange.chartCssClassName );\n            } else if ( bindingOptions.views.statistics.enabled && bindingOptions._currentView.view === ViewId.statistics && Is.definedString( colorRange.statisticsCssClassName ) ) {\n                DomElement.addClass( day, colorRange.statisticsCssClassName );\n            } else {\n                DomElement.addClass( day, colorRange.cssClassName );\n            }   \n        }\n\n        if ( bindingOptions.guide.showNumbersInGuide ) {\n            DomElement.addClass( day, \"day-number\" );\n\n            day.innerHTML = colorRange.minimum + Char.plus;\n        }\n\n        if ( bindingOptions.guide.colorRangeTogglesEnabled ) {\n            day.onclick = function () {\n                toggleColorRangeVisibleState( bindingOptions, colorRange.id );\n            };\n\n        } else {\n            DomElement.addClass( day, \"no-hover\" );\n        }\n    }\n\n    function renderDescription( bindingOptions: BindingOptions, container: HTMLElement ) : void {\n        if ( Is.definedString( bindingOptions.description.text ) ) {\n            if ( Is.definedString( bindingOptions.description.url ) ) {\n                const link: any = DomElement.createWithHTML( container, \"a\", \"label\", bindingOptions.description.text );\n                link.href = bindingOptions.description.url;\n                link.target = bindingOptions.description.urlTarget;                \n\n            } else {\n                DomElement.createWithHTML( container, \"span\", \"label\", bindingOptions.description.text );\n            }\n        }\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Render:  Shared\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function renderDayToolTip( bindingOptions: BindingOptions, day: HTMLElement, date: Date, dateCount: number ) : void {\n        if ( Is.definedFunction( bindingOptions.events.onDayToolTipRender ) ) {\n            addToolTip( day, bindingOptions, fireCustomTriggerEvent( bindingOptions.events.onDayToolTipRender, date, dateCount ) );\n        } else {\n\n            let tooltip: string = DateTime.getCustomFormattedDateText( _configuration, bindingOptions.tooltip.dayText, date );\n\n            if ( bindingOptions.showHolidaysInDayToolTips ) {\n                let holiday: any = isHoliday( bindingOptions, date );\n\n                if ( holiday.matched && Is.definedString( holiday.name ) ) {\n                    tooltip += Char.colon + Char.space + holiday.name;\n                }\n            }\n\n            addToolTip( day, bindingOptions, tooltip );\n        }\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Data\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function createDateStorageForElement( elementId: string, bindingOptions: BindingOptions, storeLocalData: boolean = true ) : void {\n        _elements_DateCounts[ elementId ] = {\n            options: bindingOptions,\n            typeData: {},\n            types: 1\n        };\n\n        _elements_DateCounts[ elementId ].typeData[ _configuration.unknownTrendText ] = {} as TypeCountsData;\n\n        if ( storeLocalData && !bindingOptions._currentView.isInFetchMode ) {\n            loadDataFromLocalStorage( bindingOptions );\n        }\n    }\n\n    function getCurrentViewData( bindingOptions: BindingOptions ) : TypeCountsData {\n        return _elements_DateCounts[ bindingOptions._currentView.element.id ].typeData[ bindingOptions._currentView.type ];\n    }\n\n    function isMonthVisible( monthsToShow: number[], month: number ) : boolean {\n        return monthsToShow.indexOf( month + 1 ) > Value.notFound;\n    }\n\n    function isDayVisible( daysToShow: number[], day: number ) : boolean {\n        return daysToShow.indexOf( day ) > Value.notFound;\n    }\n\n    function getYearsAvailableInData( bindingOptions: BindingOptions ) : number[] {\n        let years: number[] = [];\n\n        if ( bindingOptions.showOnlyDataForYearsAvailable ) {\n            let data: TypeCountsData = getCurrentViewData( bindingOptions );\n\n            for ( let storageDate in data ) {\n                if ( data.hasOwnProperty( storageDate ) ) {\n                    let year: number = parseInt( getStorageDateYear( storageDate ) );\n                    \n                    if ( years.indexOf( year ) === Value.notFound ) {\n                        years.push( year );\n                    }\n                }\n            }\n        }\n\n        years = years.sort( function( a, b ) {\n            return a - b;\n        } );\n\n        return years;\n    }\n\n    function isYearVisible( bindingOptions: BindingOptions, year: number ) : boolean {\n        return bindingOptions.yearsToHide.indexOf( year ) === Value.notFound && ( bindingOptions._currentView.yearsAvailable.length === 0 || bindingOptions._currentView.yearsAvailable.indexOf( year ) > Value.notFound );\n    }\n\n    function isFirstVisibleYear( bindingOptions: BindingOptions, year: number ) : boolean {\n        return bindingOptions._currentView.yearsAvailable.length > 0 && year <= bindingOptions._currentView.yearsAvailable[ 0 ];\n    }\n\n    function isLastVisibleYear( bindingOptions: BindingOptions, year: number ) : boolean {\n        return bindingOptions._currentView.yearsAvailable.length > 0 && year >= bindingOptions._currentView.yearsAvailable[ bindingOptions._currentView.yearsAvailable.length - 1 ];\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Local Storage\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function loadDataFromLocalStorage( bindingOptions: BindingOptions ) : void {\n        if ( bindingOptions.useLocalStorageForData && window.localStorage ) {\n            const keysLength: number = window.localStorage.length;\n            const elementId: string = bindingOptions._currentView.element.id;\n\n            for ( let keyIndex: number = 0; keyIndex < keysLength; keyIndex++ ) {\n                const key : string = window.localStorage.key( keyIndex );\n\n                if ( Data.String.startsWithAnyCase( key, _local_Storage_Start_ID ) ) {\n                    const typesJson: string = window.localStorage.getItem( key );\n                    const typesObject: any = getObjectFromString( typesJson );\n\n                    if ( typesObject.parsed ) {\n                        _elements_DateCounts[ elementId ].typeData = typesObject.result;\n                        _elements_DateCounts[ elementId ].types = 0;\n\n                        for ( let type in _elements_DateCounts[ elementId ].typeData ) {\n                            if ( _elements_DateCounts[ elementId ].typeData.hasOwnProperty( type ) ) {\n                                _elements_DateCounts[ elementId ].types++;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    function storeDataInLocalStorage( bindingOptions: BindingOptions ) : void {\n        if ( bindingOptions.useLocalStorageForData && window.localStorage ) {\n            const elementId: string = bindingOptions._currentView.element.id;\n\n            clearLocalStorageObjects( bindingOptions );\n\n            const jsonData: string = JSON.stringify( _elements_DateCounts[ elementId ].typeData );\n\n            window.localStorage.setItem( _local_Storage_Start_ID + elementId, jsonData );\n        }\n    }\n\n    function clearLocalStorageObjects( bindingOptions: BindingOptions ) : void {\n        if ( bindingOptions.useLocalStorageForData && window.localStorage ) {\n            const keysLength: number = window.localStorage.length;\n            const keysToRemove: string[] = [];\n            const elementId: string = bindingOptions._currentView.element.id;\n\n            for ( let keyIndex: number = 0; keyIndex < keysLength; keyIndex++ ) {\n                if ( Data.String.startsWithAnyCase( window.localStorage.key( keyIndex ), _local_Storage_Start_ID + elementId ) ) {\n                    keysToRemove.push( window.localStorage.key( keyIndex ) );\n                }\n            }\n\n            const keysToRemoveLength: number = keysToRemove.length;\n\n            for ( let keyToRemoveIndex: number = 0; keyToRemoveIndex < keysToRemoveLength; keyToRemoveIndex++ ) {\n                window.localStorage.removeItem( keysToRemove[ keyToRemoveIndex ] );\n            }\n        }\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Data Pulling\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function startDataPullTimer( bindingOptions: BindingOptions ) : void {\n        if ( bindingOptions._currentView.isInFetchMode ) {\n            if ( !Is.defined( bindingOptions._currentView.isInFetchModeTimer ) ) {\n                pullDataFromCustomTrigger( bindingOptions );\n            }\n\n            if ( !Is.defined( bindingOptions._currentView.isInFetchModeTimer ) ) {\n                bindingOptions._currentView.isInFetchModeTimer = setInterval( function() {\n                    pullDataFromCustomTrigger( bindingOptions );\n                    renderControlContainer( bindingOptions );\n                }, bindingOptions.dataFetchDelay );\n            }\n        }\n    }\n\n    function pullDataFromCustomTrigger( bindingOptions: BindingOptions ) : void {\n        const elementId: string = bindingOptions._currentView.element.id;\n        const data: any = fireCustomTriggerEvent( bindingOptions.events.onDataFetch, elementId );\n\n        if ( Is.definedObject( data ) ) {\n            createDateStorageForElement( elementId, bindingOptions, false );\n\n            for ( let storageDate in data ) {\n                if ( data.hasOwnProperty( storageDate ) ) {\n                    if ( !_elements_DateCounts[ elementId ].typeData[ _configuration.unknownTrendText ].hasOwnProperty( storageDate ) ) {\n                        _elements_DateCounts[ elementId ].typeData[ _configuration.unknownTrendText ][ storageDate ] = 0;\n                    }\n            \n                    _elements_DateCounts[ elementId ].typeData[ _configuration.unknownTrendText ][ storageDate ] += data[ storageDate ];\n                }\n            }\n        }\n    }\n\n    function cancelAllPullDataTimers() : void {\n        for ( let elementId in _elements_DateCounts ) {\n            if ( _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n\n                if ( Is.defined( bindingOptions._currentView.isInFetchModeTimer ) ) {\n                    clearInterval( bindingOptions._currentView.isInFetchModeTimer );\n                }\n            }\n        }\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Color Ranges\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function isColorRangeVisible( bindingOptions: BindingOptions, id: string ) : boolean {\n        let result: boolean = false;\n        \n        if ( id === _internal_Name_Holiday ) {\n            result = true;\n\n        } else {\n            const colorRangesLength : number = bindingOptions.colorRanges.length;\n\n            for ( let colorRangesIndex: number = 0; colorRangesIndex < colorRangesLength; colorRangesIndex++ ) {\n                const colorRange: ColorRange = bindingOptions.colorRanges[ colorRangesIndex ];\n    \n                if ( colorRange.id === id && Data.getDefaultBoolean( colorRange.visible, true ) ) {\n                    result = true;\n                    break;\n                }\n            }\n        }\n\n        return result;\n    }\n\n    function updateColorRangeToggles( bindingOptions: BindingOptions, flag: boolean ) : void {\n        const colorRangesLength: number = bindingOptions.colorRanges.length;\n\n        for ( let colorRangesIndex: number = 0; colorRangesIndex < colorRangesLength; colorRangesIndex++ ) {\n            bindingOptions.colorRanges[ colorRangesIndex ].visible = flag;\n\n            fireCustomTriggerEvent( bindingOptions.events.onColorRangeTypeToggle, bindingOptions.colorRanges[ colorRangesIndex ].id, flag );\n        }\n\n        renderControlContainer( bindingOptions );\n    }\n\n    function toggleColorRangeVisibleState( bindingOptions: BindingOptions, id: string ) : void {\n        const colorRangesLength: number = bindingOptions.colorRanges.length;\n\n        for ( let colorRangesIndex: number = 0; colorRangesIndex < colorRangesLength; colorRangesIndex++ ) {\n            const colorRange: ColorRange = bindingOptions.colorRanges[ colorRangesIndex ];\n\n            if ( colorRange.id === id ) {\n                colorRange.visible = !Data.getDefaultBoolean( colorRange.visible, true );\n\n                fireCustomTriggerEvent( bindingOptions.events.onColorRangeTypeToggle, colorRange.id, colorRange.visible );\n                renderControlContainer( bindingOptions );\n                break;\n            }\n        }\n    }\n\n    function getColorRange( bindingOptions: BindingOptions, colorRanges: ColorRange[], dateCount: number, date: Date = null ) : ColorRange {\n        let useColorRange: ColorRange = null;\n\n        if ( Is.defined( date ) && isHoliday( bindingOptions, date ).matched ) {\n            useColorRange = {\n                cssClassName: \"holiday\",\n                id: _internal_Name_Holiday,\n                visible: true,\n                minimum: 0,\n            } as ColorRange;\n        }\n\n        if ( !Is.defined( useColorRange ) ) {\n            const colorRangesLength: number = colorRanges.length;\n\n            for ( let colorRangesIndex: number = 0; colorRangesIndex < colorRangesLength; colorRangesIndex++ ) {\n                const colorRange: ColorRange = colorRanges[ colorRangesIndex ];\n    \n                if ( dateCount >= colorRange.minimum ) {\n                    useColorRange = colorRange;\n                } else {\n                    break;\n                }\n            }\n        }\n\n        return useColorRange;\n    }\n\n    function getColorRangeByMinimum( colorRanges: ColorRange[], minimum: number ) : ColorRange {\n        const colorRangesLength: number = colorRanges.length;\n        let useColorRange: ColorRange = null;\n\n        for ( let colorRangesIndex: number = 0; colorRangesIndex < colorRangesLength; colorRangesIndex++ ) {\n            const colorRange: ColorRange = colorRanges[ colorRangesIndex ];\n\n            if ( minimum.toString() === colorRange.minimum.toString() ) {\n                useColorRange = colorRange;\n                break;\n            }\n        }\n\n        return useColorRange;\n    }\n\n    function getSortedColorRanges( bindingOptions: BindingOptions ) : ColorRange[] {\n        return bindingOptions.colorRanges.sort( function( a, b ) {\n            return a.minimum - b.minimum;\n        } );\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Holiday\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function isHoliday( bindingOptions: BindingOptions, date: Date ) : any {\n        const holidaysLength: number = bindingOptions.holidays.length;\n        const day: number = date.getDate();\n        const month: number = date.getMonth() + 1;\n        const year: number = date.getFullYear();\n        let holidayMatched: boolean = false;\n        let holidayName: string = null;\n        \n        for ( let holidayIndex: number = 0; holidayIndex < holidaysLength; holidayIndex++ ) {\n            let holiday: Holiday = bindingOptions.holidays[ holidayIndex ];\n\n            if ( Is.definedString( holiday.date ) && holiday.showInViews ) {\n                const dateParts: string[] = holiday.date.split( \"/\" );\n\n                if ( dateParts.length === 2 ) {\n                    holidayMatched = day === parseInt( dateParts[ 0 ] ) && month === parseInt( dateParts[ 1 ] );\n                } else if ( dateParts.length === 3 ) {\n                    holidayMatched = day === parseInt( dateParts[ 0 ] ) && month === parseInt( dateParts[ 1 ] ) && year === parseInt( dateParts[ 2 ] );\n                }\n\n                if ( holidayMatched ) {\n                    holidayName = holiday.name;\n                    break;\n                }\n            }\n        }\n\n        return {\n            matched: holidayMatched,\n            name: holidayName\n        };\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Import\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function makeAreaDroppable( element: HTMLElement, bindingOptions: BindingOptions ) : void {\n        if ( bindingOptions.allowFileImports && !bindingOptions._currentView.isInFetchMode ) {\n            element.ondragover = DomElement.cancelBubble;\n            element.ondragenter = DomElement.cancelBubble;\n            element.ondragleave = DomElement.cancelBubble;\n    \n            element.ondrop = function ( e ) {\n                DomElement.cancelBubble( e );\n    \n                if ( Is.defined( window.FileReader ) && e.dataTransfer.files.length > 0 ) {\n                    importFromFiles( e.dataTransfer.files, bindingOptions );\n                }\n            };\n        }\n    }\n\n    function importFromFilesSelected( bindingOptions: BindingOptions ) : void {\n        const input: any = DomElement.createWithNoContainer( \"input\" );\n        input.type = \"file\";\n        input.accept = \".json, .txt, .csv\";\n        input.multiple = \"multiple\";\n\n        input.onchange = function () {\n            importFromFiles( input.files, bindingOptions );\n        };\n\n        input.click();\n    }\n\n    function importFromFiles( files: FileList, bindingOptions: BindingOptions ) : void {\n        const filesLength: number = files.length;\n        const filesCompleted: string[] = [];\n        const data: TypeCountsData = getCurrentViewData( bindingOptions );\n\n        const onLoadEnd = function ( filename: string, readingObject: object ) {\n            filesCompleted.push( filename );\n\n            for ( let storageDate in readingObject ) {\n                if ( readingObject.hasOwnProperty( storageDate ) ) {\n                    if ( !data.hasOwnProperty( storageDate ) ) {\n                        data[ storageDate ] = 0;\n                    }\n\n                    data[ storageDate ] += readingObject[ storageDate ];\n                }\n            }\n            \n            if ( filesCompleted.length === filesLength ) {\n                fireCustomTriggerEvent( bindingOptions.events.onImport, bindingOptions._currentView.element );\n                renderControlContainer( bindingOptions );\n            }\n        };\n\n        for ( let fileIndex: number = 0; fileIndex < filesLength; fileIndex++ ) {\n            const file: File = files[ fileIndex ];\n            const fileExtension: string = file.name.split( \".\" ).pop().toLowerCase();\n\n            if ( fileExtension === ExportType.json ) {\n                importFromJson( file, onLoadEnd );\n            } else if ( fileExtension === ExportType.txt ) {\n                importFromTxt( file, onLoadEnd );\n            } else if ( fileExtension === ExportType.csv ) {\n                importFromCsv( file, onLoadEnd );\n            }\n        }\n    }\n\n    function importFromJson( file: File, onLoadEnd: Function ) : void {\n        const reader: FileReader = new FileReader();\n        let readingObject: TypeCountsData = {} as TypeCountsData;\n\n        reader.readAsText( file );\n\n        reader.onloadend = function () {\n            onLoadEnd( file.name, readingObject );\n        };\n    \n        reader.onload = function ( e ) {\n            const JSON: any = getObjectFromString( e.target.result );\n\n            if ( JSON.parsed && Is.definedObject( JSON.result ) ) {\n                readingObject = JSON.result;\n            }\n        };\n    }\n\n    function importFromTxt( file: File, onLoadEnd: Function ) : void {\n        const reader: FileReader = new FileReader();\n        const readingObject: TypeCountsData = {} as TypeCountsData;\n\n        reader.readAsText( file );\n\n        reader.onloadend = function () {\n            onLoadEnd( file.name, readingObject );\n        };\n    \n        reader.onload = function ( e ) {\n            const lines: string[] = e.target.result.toString().split( Char.newLine );\n            const linesLength: number = lines.length;\n\n            for ( let lineIndex: number = 0; lineIndex < linesLength; lineIndex++ ) {\n                const line: string[] = lines[ lineIndex ].split( Char.colon );\n\n                readingObject[ line[ 0 ].trim() ] = parseInt( line[ 1 ].trim() );\n            }\n        };\n    }\n\n    function importFromCsv( file: File, onLoadEnd: Function ) : void {\n        const reader: FileReader = new FileReader();\n        const readingObject: TypeCountsData = {} as TypeCountsData;\n\n        reader.readAsText( file );\n\n        reader.onloadend = function () {\n            onLoadEnd( file.name, readingObject );\n        };\n    \n        reader.onload = function ( e ) {\n            const data: string = e.target.result.toString().replace( new RegExp( \"\\\"\", \"g\" ), Char.empty );\n            const lines: string[] = data.split( Char.newLine );\n            \n            lines.shift();\n\n            let linesLength: number = lines.length;\n\n            for ( let lineIndex: number = 0; lineIndex < linesLength; lineIndex++ ) {\n                let line: string[] = lines[ lineIndex ].split( Char.comma );\n\n                readingObject[ line[ 0 ].trim() ] = parseInt( line[ 1 ].trim() );\n            }\n        };\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Export\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function exportAllData( bindingOptions: BindingOptions, exportType: string = null ) : void {\n        let contents: string = null;\n        const contentsMimeType: string = getExportMimeType( bindingOptions );\n        const contentExportType: string = Data.getDefaultString( exportType, bindingOptions.exportType ).toLowerCase();\n\n        if ( contentExportType === ExportType.csv ) {\n            contents = getCsvContent( bindingOptions );\n        } else if ( contentExportType === ExportType.json ) {\n            contents = getJsonContent( bindingOptions );\n        } else if ( contentExportType === ExportType.xml ) {\n            contents = getXmlContents( bindingOptions );\n        } else if ( contentExportType === ExportType.txt ) {\n            contents = getTxtContents( bindingOptions );\n        }\n\n        if ( Is.definedString( contents ) ) {\n            const tempLink: HTMLElement = DomElement.create( document.body, \"a\" );\n            tempLink.style.display = \"none\";\n            tempLink.setAttribute( \"target\", \"_blank\" );\n            tempLink.setAttribute( \"href\", \"data:\" + contentsMimeType + \";charset=utf-8,\" + encodeURIComponent( contents ) );\n            tempLink.setAttribute( \"download\", getExportFilename( bindingOptions ) );\n            tempLink.click();\n            \n            document.body.removeChild( tempLink );\n\n            fireCustomTriggerEvent( bindingOptions.events.onExport, bindingOptions._currentView.element );\n        }\n    }\n\n    function getCsvContent( bindingOptions: BindingOptions ) : string {\n        const data: TypeCountsData = getExportData( bindingOptions );\n        const csvContents: string[] = [];\n\n        for ( let storageDate in data ) {\n            if ( data.hasOwnProperty( storageDate ) ) {\n                csvContents.push( getCsvValueLine( [ getCsvValue( storageDate ), getCsvValue( data[ storageDate ].toString() ) ] ) );\n            }\n        }\n\n        if ( csvContents.length > 0 ) {\n            csvContents.unshift( getCsvValueLine( [ getCsvValue( _configuration.dateText ), getCsvValue( _configuration.countText ) ] ) );\n        }\n        \n        return csvContents.join( Char.newLine );\n    }\n\n    function getJsonContent( bindingOptions: BindingOptions ) : string {\n        return JSON.stringify( getExportData( bindingOptions ) );\n    }\n\n    function getXmlContents( bindingOptions: BindingOptions ) : string {\n        const data: TypeCountsData = getExportData( bindingOptions );\n        const contents: string[] = [];\n\n        contents.push( \"<?xml version=\\\"1.0\\\" ?>\" );\n        contents.push( \"<Dates>\" );\n\n        for ( let storageDate in data ) {\n            if ( data.hasOwnProperty( storageDate ) ) {\n                contents.push( \"<Date>\" );\n                contents.push( \"<FullDate>\" + storageDate + \"</FullDate>\" );\n                contents.push( \"<Count>\" + data[ storageDate ].toString() + \"</Count>\" );\n                contents.push( \"</Date>\" );\n            }\n        }\n\n        contents.push( \"</Dates>\" );\n\n        return contents.join( Char.newLine );\n    }\n\n    function getTxtContents( bindingOptions: BindingOptions ) : string {\n        const data: TypeCountsData = getExportData( bindingOptions );\n        const contents: string[] = [];\n\n        for ( let storageDate in data ) {\n            if ( data.hasOwnProperty( storageDate ) ) {\n                contents.push( storageDate + Char.colon + Char.space + data[ storageDate ].toString() );\n            }\n        }\n\n        return contents.join( Char.newLine );\n    }\n\n    function getExportData( bindingOptions: BindingOptions ) : TypeCountsData {\n        const contents: TypeCountsData = {} as TypeCountsData;\n        const data: TypeCountsData = getCurrentViewData( bindingOptions );\n\n        if ( bindingOptions.exportOnlyYearBeingViewed ) {\n            for ( let monthIndex: number = 0; monthIndex < 12; monthIndex++ ) {\n                const totalDaysInMonth: number = DateTime.getTotalDaysInMonth( bindingOptions._currentView.year, monthIndex );\n        \n                for ( let dayIndex: number = 0; dayIndex < totalDaysInMonth; dayIndex++ ) {\n                    const storageDate2: string = toStorageDate( new Date( bindingOptions._currentView.year, monthIndex, dayIndex + 1 ) );\n\n                    if ( data.hasOwnProperty( storageDate2 ) ) {\n                        contents[ storageDate2 ] = data[ storageDate2 ];\n                    }\n                }\n            }\n\n        } else {\n            const storageDates: string[] = [];\n\n            for ( let storageDate1 in data ) {\n                if ( data.hasOwnProperty( storageDate1 ) ) {\n                    storageDates.push( storageDate1 );\n                }\n            }\n    \n            storageDates.sort();\n\n            const storageDatesLength: number = storageDates.length;\n\n            for ( let storageDateIndex: number = 0; storageDateIndex < storageDatesLength; storageDateIndex++ ) {\n                const storageDate3: string = storageDates[ storageDateIndex ];\n    \n                if ( data.hasOwnProperty( storageDate3 ) ) {\n                    contents[ storageDate3 ] = data[ storageDate3 ];\n                }\n            }\n        }\n\n        return contents;\n    }\n\n    function getExportMimeType( bindingOptions: BindingOptions ) : string {\n        let result: string = null;\n\n        if ( bindingOptions.exportType.toLowerCase() === ExportType.csv ) {\n            result = \"text/csv\";\n        } else if ( bindingOptions.exportType.toLowerCase() === ExportType.json ) {\n            result = \"application/json\";\n        } else if ( bindingOptions.exportType.toLowerCase() === ExportType.xml ) {\n            result = \"application/xml\";\n        } else if ( bindingOptions.exportType.toLowerCase() === ExportType.txt ) {\n            result = \"text/plain\";\n        }\n\n        return result;\n    }\n\n    function getExportFilename( bindingOptions: BindingOptions ) : string {\n        const date: Date = new Date();\n        const datePart: string = Data.String.padNumber( date.getDate() ) + Char.dash + Data.String.padNumber( date.getMonth() + 1 ) + Char.dash + date.getFullYear();\n        const timePart: string = Data.String.padNumber( date.getHours() ) + Char.dash + Data.String.padNumber( date.getMinutes() );\n        let filenameStart: string = Char.empty;\n\n        if ( bindingOptions._currentView.type !== _configuration.unknownTrendText ) {\n            filenameStart = bindingOptions._currentView.type.toLowerCase().replace( Char.space, Char.underscore ) + Char.underscore;\n        }\n\n        return filenameStart + datePart + Char.underscore + timePart + \".\" + bindingOptions.exportType.toLowerCase();\n    }\n\n    function getCsvValue( text: string ) : string {\n        let result: string = text.toString().replace( /(\\r\\n|\\n|\\r)/gm, Char.empty ).replace( /(\\s\\s)/gm, Char.space );\n        result = result.replace( /\"/g, '\"\"' );\n        result = '\"' + result + '\"';\n\n        return result;\n    }\n\n    function getCsvValueLine( csvValues: string[] ) : string {\n        return csvValues.join( \",\" );\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Attribute Options\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function buildAttributeOptions( newOptions: any ) : BindingOptions {\n        let options: BindingOptions = Data.getDefaultObject( newOptions, {} as BindingOptions );\n        options.views = Data.getDefaultObject( options.views, {} );\n        options.exportOnlyYearBeingViewed = Data.getDefaultBoolean( options.exportOnlyYearBeingViewed, true );\n        options.year = Data.getDefaultNumber( options.year, new Date().getFullYear() );\n        options.view = Data.getDefaultString( options.view, ViewName.map );\n        options.exportType = Data.getDefaultString( options.exportType, ExportType.csv );\n        options.useLocalStorageForData = Data.getDefaultBoolean( options.useLocalStorageForData, false );\n        options.allowFileImports = Data.getDefaultBoolean( options.allowFileImports, true );\n        options.yearsToHide = Data.getDefaultArray( options.yearsToHide, [] );\n        options.dataFetchDelay = Data.getDefaultNumber( options.dataFetchDelay, 60000 );\n        options.showOnlyDataForYearsAvailable = Data.getDefaultBoolean( options.showOnlyDataForYearsAvailable, false );\n        options.showHolidaysInDayToolTips = Data.getDefaultBoolean( options.showHolidaysInDayToolTips, false );\n        \n        options = buildAttributeOptionColorRanges( options );\n        options = buildAttributeOptionHolidays( options );\n        options = buildAttributeOptionTitle( options );\n        options = buildAttributeOptionDescription( options );\n        options = buildAttributeOptionGuide( options );\n        options = buildAttributeOptionToolTip( options );\n        options = buildAttributeOptionMapView( options );\n        options = buildAttributeOptionChartView( options );\n        options = buildAttributeOptionDaysView( options );\n        options = buildAttributeOptionStatisticsView( options );\n        options = buildAttributeOptionCustomTriggers( options );\n        \n        return options;\n    }\n\n    function buildAttributeOptionColorRanges( options: BindingOptions ) : BindingOptions {\n        if ( Is.definedArray( options.colorRanges ) ) {\n            const colorRangesLength: number = options.colorRanges.length;\n\n            for ( let colorRangeIndex: number = 0; colorRangeIndex < colorRangesLength; colorRangeIndex++ ) {\n                const colorRange: ColorRange = options.colorRanges[ colorRangeIndex ];\n\n                colorRange.id = Data.getDefaultString( colorRange.id, Data.String.newGuid() );\n                colorRange.name = Data.getDefaultString( colorRange.name, null );\n                colorRange.minimum = Data.getDefaultNumber( colorRange.minimum, 0 );\n                colorRange.cssClassName = Data.getDefaultString( colorRange.cssClassName, null );\n                colorRange.mapCssClassName = Data.getDefaultString( colorRange.mapCssClassName, null );\n                colorRange.chartCssClassName = Data.getDefaultString( colorRange.chartCssClassName, null );\n                colorRange.statisticsCssClassName = Data.getDefaultString( colorRange.statisticsCssClassName, null );\n                colorRange.tooltipText = Data.getDefaultString( colorRange.tooltipText, null );\n                colorRange.visible = Data.getDefaultBoolean( colorRange.visible, true );\n            }\n\n        } else {\n            options.colorRanges = [\n                {\n                    id: Data.String.newGuid(),\n                    name: \"Day Color 1\",\n                    minimum: 10,\n                    cssClassName: \"day-color-1\",\n                    tooltipText: \"Day Color 1\",\n                    visible: true\n                },\n                {\n                    id: Data.String.newGuid(),\n                    name: \"Day Color 2\",\n                    minimum: 15,\n                    cssClassName: \"day-color-2\",\n                    tooltipText: \"Day Color 2\",\n                    visible: true\n                },\n                {\n                    id: Data.String.newGuid(),\n                    name: \"Day Color 3\",\n                    minimum: 20,\n                    cssClassName: \"day-color-3\",\n                    tooltipText: \"Day Color 3\",\n                    visible: true\n                },\n                {\n                    id: Data.String.newGuid(),\n                    name: \"Day Color 4\",\n                    minimum: 25,\n                    cssClassName: \"day-color-4\",\n                    tooltipText: \"Day Color 4\",\n                    visible: true\n                }\n            ];\n        }\n\n        return options;\n    }\n\n    function buildAttributeOptionHolidays( options: BindingOptions ) : BindingOptions {\n        if ( Is.definedArray( options.holidays ) ) {\n            const holidaysLength: number = options.holidays.length;\n\n            for ( let holidayIndex: number = 0; holidayIndex < holidaysLength; holidayIndex++ ) {\n                const holiday: Holiday = options.holidays[ holidayIndex ];\n                \n                holiday.date = Data.getDefaultString( holiday.date, null );\n                holiday.name = Data.getDefaultString( holiday.name, null );\n                holiday.showInViews = Data.getDefaultBoolean( holiday.showInViews, true );\n            }\n\n        } else {\n            options.holidays = [];\n        }\n\n        return options;\n    }\n\n    function buildAttributeOptionTitle( options: BindingOptions ) : BindingOptions {\n        options.title = Data.getDefaultObject( options.title, {} as Title );\n        options.title.text = Data.getDefaultString( options.title.text, \"Heat.js\" );\n        options.title.showText = Data.getDefaultBoolean( options.title.showText, true );\n        options.title.showYearSelector = Data.getDefaultBoolean( options.title.showYearSelector, true );\n        options.title.showRefreshButton = Data.getDefaultBoolean( options.title.showRefreshButton, false );\n        options.title.showExportButton = Data.getDefaultBoolean( options.title.showExportButton, false );\n        options.title.extraSelectionYears = Data.getDefaultNumber( options.title.extraSelectionYears, 50 );\n        options.title.showYearSelectionDropDown = Data.getDefaultBoolean( options.title.showYearSelectionDropDown, true );\n        options.title.showImportButton = Data.getDefaultBoolean( options.title.showImportButton, false );\n        options.title.showConfigurationButton = Data.getDefaultBoolean( options.title.showConfigurationButton, true );\n        options.title.showTitleDropDownButton = Data.getDefaultBoolean( options.title.showTitleDropDownButton, true );\n        options.title.showTitleDropDownHeaders = Data.getDefaultBoolean( options.title.showTitleDropDownHeaders, true );\n\n        return options;\n    }\n\n    function buildAttributeOptionDescription( options: BindingOptions ) : BindingOptions {\n        options.description = Data.getDefaultObject( options.description, {} as Description );\n        options.description.text = Data.getDefaultString( options.description.text, null );\n        options.description.url = Data.getDefaultString( options.description.url, null );\n        options.description.urlTarget = Data.getDefaultString( options.description.urlTarget, \"_blank\" );\n\n        return options;\n    }\n\n    function buildAttributeOptionGuide( options: BindingOptions ) : BindingOptions {\n        options.guide = Data.getDefaultObject( options.guide, {} as Guide );\n        options.guide.enabled = Data.getDefaultBoolean( options.guide.enabled, true );\n        options.guide.colorRangeTogglesEnabled = Data.getDefaultBoolean( options.guide.colorRangeTogglesEnabled, true );\n        options.guide.showLessAndMoreLabels = Data.getDefaultBoolean( options.guide.showLessAndMoreLabels, true );\n        options.guide.showNumbersInGuide = Data.getDefaultBoolean( options.guide.showNumbersInGuide, false );\n\n        return options;\n    }\n\n    function buildAttributeOptionToolTip( options: BindingOptions ) : BindingOptions {\n        options.tooltip = Data.getDefaultObject( options.tooltip, {} as Tooltip );\n        options.tooltip.delay = Data.getDefaultNumber( options.tooltip.delay, 750 );\n        options.tooltip.dayText = Data.getDefaultString( options.tooltip.dayText, \"{d}{o} {mmmm} {yyyy}\" );\n\n        return options;\n    }\n\n    function buildAttributeOptionMapView( options: BindingOptions ) : BindingOptions {\n        options.views.map = Data.getDefaultObject( options.views.map, {} as Map );\n        options.views.map.showMonthDayGaps = Data.getDefaultBoolean( options.views.map.showMonthDayGaps, true );\n        options.views.map.showDayNames = Data.getDefaultBoolean( options.views.map.showDayNames, true );\n        options.views.map.placeMonthNamesOnTheBottom = Data.getDefaultBoolean( options.views.map.placeMonthNamesOnTheBottom, false );\n        options.views.map.showDayNumbers = Data.getDefaultBoolean( options.views.map.showDayNumbers, false );\n        options.views.map.showMonthNames = Data.getDefaultBoolean( options.views.map.showMonthNames, true );\n        options.views.map.showDaysInReverseOrder = Data.getDefaultBoolean( options.views.map.showDaysInReverseOrder, false );\n        options.views.map.showNoDataMessageWhenDataIsNotAvailable = Data.getDefaultBoolean( options.views.map.showNoDataMessageWhenDataIsNotAvailable, false );\n        options.views.map.showMinimalDayNames = Data.getDefaultBoolean( options.views.map.showMinimalDayNames, false );\n        options.views.map.showMonthsInReverseOrder = Data.getDefaultBoolean( options.views.map.showMonthsInReverseOrder, false );\n        options.views.map.keepScrollPositions = Data.getDefaultBoolean( options.views.map.keepScrollPositions, false );\n\n        if ( Is.invalidOptionArray( options.views.map.monthsToShow ) ) {\n            options.views.map.monthsToShow = _default_MonthsToShow;\n        }\n\n        if ( Is.invalidOptionArray( options.views.map.daysToShow ) ) {\n            options.views.map.daysToShow = _default_DaysToShow;\n        }\n\n        return options;\n    }\n\n    function buildAttributeOptionChartView( options: BindingOptions ) : BindingOptions {\n        options.views.chart = Data.getDefaultObject( options.views.chart, {} as Chart );\n        options.views.chart.enabled = Data.getDefaultBoolean( options.views.chart.enabled, true );\n        options.views.chart.showChartYLabels = Data.getDefaultBoolean( options.views.chart.showChartYLabels, true );\n        options.views.chart.showMonthNames = Data.getDefaultBoolean( options.views.chart.showMonthNames, true );\n        options.views.chart.showLineNumbers = Data.getDefaultBoolean( options.views.chart.showLineNumbers, false );\n        options.views.chart.showInReverseOrder = Data.getDefaultBoolean( options.views.chart.showInReverseOrder, false );\n        options.views.chart.keepScrollPositions = Data.getDefaultBoolean( options.views.chart.keepScrollPositions, false );\n\n        if ( Is.invalidOptionArray( options.views.chart.monthsToShow ) ) {\n            options.views.chart.monthsToShow = _default_MonthsToShow;\n        }\n\n        if ( Is.invalidOptionArray( options.views.chart.daysToShow ) ) {\n            options.views.chart.daysToShow = _default_DaysToShow;\n        }\n\n        return options;\n    }\n\n    function buildAttributeOptionDaysView( options: BindingOptions ) : BindingOptions {\n        options.views.days = Data.getDefaultObject( options.views.days, {} as Days );\n        options.views.days.enabled = Data.getDefaultBoolean( options.views.days.enabled, true );\n        options.views.days.showChartYLabels = Data.getDefaultBoolean( options.views.days.showChartYLabels, true );\n        options.views.days.showDayNames = Data.getDefaultBoolean( options.views.days.showDayNames, true );\n        options.views.days.showInReverseOrder = Data.getDefaultBoolean( options.views.days.showInReverseOrder, false );\n        options.views.days.showDayNumbers = Data.getDefaultBoolean( options.views.days.showDayNumbers, false );\n        options.views.days.keepScrollPositions = Data.getDefaultBoolean( options.views.days.keepScrollPositions, false );\n\n        if ( Is.invalidOptionArray( options.views.days.monthsToShow ) ) {\n            options.views.days.monthsToShow = _default_MonthsToShow;\n        }\n\n        if ( Is.invalidOptionArray( options.views.days.daysToShow ) ) {\n            options.views.days.daysToShow = _default_DaysToShow;\n        }\n\n        return options;\n    }\n\n    function buildAttributeOptionStatisticsView( options: BindingOptions ) : BindingOptions {\n        options.views.statistics = Data.getDefaultObject( options.views.statistics, {} as Statistics );\n        options.views.statistics.enabled = Data.getDefaultBoolean( options.views.statistics.enabled, true );\n        options.views.statistics.showChartYLabels = Data.getDefaultBoolean( options.views.statistics.showChartYLabels, true );\n        options.views.statistics.showColorRangeLabels = Data.getDefaultBoolean( options.views.statistics.showColorRangeLabels, true );\n        options.views.statistics.useColorRangeNamesForLabels = Data.getDefaultBoolean( options.views.statistics.useColorRangeNamesForLabels, false );\n        options.views.statistics.showRangeNumbers = Data.getDefaultBoolean( options.views.statistics.showRangeNumbers, false );\n        options.views.statistics.showInReverseOrder = Data.getDefaultBoolean( options.views.statistics.showInReverseOrder, false );\n        options.views.statistics.keepScrollPositions = Data.getDefaultBoolean( options.views.statistics.keepScrollPositions, false );\n\n        if ( Is.invalidOptionArray( options.views.statistics.monthsToShow ) ) {\n            options.views.statistics.monthsToShow = _default_MonthsToShow;\n        }\n\n        if ( Is.invalidOptionArray( options.views.statistics.daysToShow ) ) {\n            options.views.statistics.daysToShow = _default_DaysToShow;\n        }\n\n        return options;\n    }\n\n    function buildAttributeOptionCustomTriggers( options : BindingOptions ) : BindingOptions {\n        options.events = Data.getDefaultObject( options.events, {} as Events );\n        options.events.onDayClick = Data.getDefaultFunction( options.events.onDayClick, null );\n        options.events.onBackYear = Data.getDefaultFunction( options.events.onBackYear, null );\n        options.events.onNextYear = Data.getDefaultFunction( options.events.onNextYear, null );\n        options.events.onRefresh = Data.getDefaultFunction( options.events.onRefresh, null );\n        options.events.onBeforeRender = Data.getDefaultFunction( options.events.onBeforeRender, null );\n        options.events.onRenderComplete = Data.getDefaultFunction( options.events.onRenderComplete, null );\n        options.events.onDestroy = Data.getDefaultFunction( options.events.onDestroy, null );\n        options.events.onExport = Data.getDefaultFunction( options.events.onExport, null );\n        options.events.onSetYear = Data.getDefaultFunction( options.events.onSetYear, null );\n        options.events.onTypeSwitch = Data.getDefaultFunction( options.events.onTypeSwitch, null );\n        options.events.onDayToolTipRender = Data.getDefaultFunction( options.events.onDayToolTipRender, null );\n        options.events.onAdd = Data.getDefaultFunction( options.events.onAdd, null );\n        options.events.onRemove = Data.getDefaultFunction( options.events.onRemove, null );\n        options.events.onReset = Data.getDefaultFunction( options.events.onReset, null );\n        options.events.onViewSwitch = Data.getDefaultFunction( options.events.onViewSwitch, null );\n        options.events.onColorRangeTypeToggle = Data.getDefaultFunction( options.events.onColorRangeTypeToggle, null );\n        options.events.onImport = Data.getDefaultFunction( options.events.onImport, null );\n        options.events.onStatisticClick = Data.getDefaultFunction( options.events.onStatisticClick, null );\n        options.events.onDataFetch = Data.getDefaultFunction( options.events.onDataFetch, null );\n        options.events.onClear = Data.getDefaultFunction( options.events.onClear, null );\n        options.events.onUpdate = Data.getDefaultFunction( options.events.onUpdate, null );\n        options.events.onOptionsUpdate = Data.getDefaultFunction( options.events.onOptionsUpdate, null );\n        options.events.onWeekDayClick = Data.getDefaultFunction( options.events.onWeekDayClick, null );\n\n        return options;\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Triggering Custom Events\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function fireCustomTriggerEvent( triggerFunction: Function, ...args : any[] ) : any {\n        let result: any = null;\n\n        if ( Is.definedFunction( triggerFunction ) ) {\n            result = triggerFunction.apply( null, [].slice.call( args, 0 ) );\n        }\n\n        return result;\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Default Parameter/Option Handling\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function getObjectFromString( objectString: any ) : any {\n        let parsed: boolean = true,\n            result: any = null;\n\n        try {\n            if ( Is.definedString( objectString ) ) {\n                result = JSON.parse( objectString );\n            }\n\n        } catch ( e1 ) {\n            try {\n                let evalResult: Function = result = eval( \"(\" + objectString + \")\" );\n\n                if ( Is.definedFunction( result ) ) {\n                    result = evalResult();\n                }\n                \n            } catch ( e2 ) {\n                if ( !_configuration.safeMode ) {\n                    console.error( _configuration.objectErrorText.replace( \"{{error_1}}\",  e1.message ).replace( \"{{error_2}}\",  e2.message ) );\n                    parsed = false;\n                }\n                \n                result = null;\n            }\n        }\n\n        return {\n            parsed: parsed,\n            result: result\n        };\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Storage Dates\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function toStorageDate( date: Date ) : string {\n        return date.getFullYear() + Char.dash + Data.String.padNumber( date.getMonth() + 1 ) + Char.dash + Data.String.padNumber( date.getDate() );\n    }\n\n    function getStorageDate( data: string ) : string[] {\n        return data.split( Char.dash );\n    }\n\n    function getStorageDateYear( data: string ) : string {\n        return data.split( Char.dash )[ 0 ];\n    }\n\n\n\t/*\n\t * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t * Public API Functions:  Helpers:  Manage Instances\n\t * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t */\n\n    function moveToPreviousYear( bindingOptions: BindingOptions, callCustomTrigger: boolean = true ) : void {\n        let render: boolean = true;\n        let year: number = bindingOptions._currentView.year;\n            \n        year--;\n\n        while ( !isYearVisible( bindingOptions, year ) ) {\n            if ( isFirstVisibleYear( bindingOptions, year ) ) {\n                render = false;\n                break;\n            }\n\n            year--;\n        }\n\n        if ( render ) {\n            bindingOptions._currentView.year = year;\n\n            renderControlContainer( bindingOptions );\n\n            if ( callCustomTrigger ) {\n                fireCustomTriggerEvent( bindingOptions.events.onBackYear, bindingOptions._currentView.year );\n            }\n        }\n    }\n\n    function moveToNextYear( bindingOptions: BindingOptions, callCustomTrigger: boolean = true ) : void {\n        let render: boolean = true;\n        let year: number = bindingOptions._currentView.year;\n\n        year++;\n\n        while ( !isYearVisible( bindingOptions, year ) ) {\n            if ( isLastVisibleYear( bindingOptions, year ) ) {\n                render = false;\n                break;\n            }\n\n            year++;\n        }\n\n        if ( render ) {\n            bindingOptions._currentView.year = year;\n\n            renderControlContainer( bindingOptions );\n\n            if ( callCustomTrigger ) {\n                fireCustomTriggerEvent( bindingOptions.events.onBackYear, bindingOptions._currentView.year );\n            }\n        }\n    }\n\n\n\t/*\n\t * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t * Public API Functions:  Helpers:  Destroy\n\t * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t */\n\n    function destroyElement( bindingOptions: BindingOptions ) : void {\n        bindingOptions._currentView.element.innerHTML = Char.empty;\n\n        DomElement.removeClass( bindingOptions._currentView.element, \"heat-js\" );\n        assignToolTipEvents( bindingOptions, false );\n\n        document.body.removeChild( bindingOptions._currentView.tooltip );\n\n        if ( bindingOptions._currentView.isInFetchMode && Is.defined( bindingOptions._currentView.isInFetchModeTimer ) ) {\n            clearInterval( bindingOptions._currentView.isInFetchModeTimer );\n        }\n\n        fireCustomTriggerEvent( bindingOptions.events.onDestroy, bindingOptions._currentView.element );\n    }\n\n\n\t/*\n\t * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t * Public API Functions:  Helpers:  Configuration\n\t * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t */\n\n    function buildDefaultConfiguration( newConfiguration: Configuration = null ) : void {\n        _configuration = !Is.definedObject( newConfiguration ) ? {} as Configuration : newConfiguration;\n        _configuration.safeMode = Data.getDefaultBoolean( _configuration.safeMode, true );\n        _configuration.domElementTypes = Data.getDefaultStringOrArray( _configuration.domElementTypes, [ \"*\" ] );\n\n        buildDefaultConfigurationStrings();\n        buildDefaultConfigurationArrays();\n    }\n\n    function buildDefaultConfigurationStrings() : void {\n        _configuration.stText = Data.getDefaultAnyString( _configuration.stText, \"st\" );\n        _configuration.ndText = Data.getDefaultAnyString( _configuration.ndText, \"nd\" );\n        _configuration.rdText = Data.getDefaultAnyString( _configuration.rdText, \"rd\" );\n        _configuration.thText = Data.getDefaultAnyString( _configuration.thText, \"th\" );\n        _configuration.backButtonText = Data.getDefaultAnyString( _configuration.backButtonText, \"Back\" );\n        _configuration.nextButtonText = Data.getDefaultAnyString( _configuration.nextButtonText, \"Next\" );\n        _configuration.refreshButtonText = Data.getDefaultAnyString( _configuration.refreshButtonText, \"Refresh\" );\n        _configuration.exportButtonText = Data.getDefaultAnyString( _configuration.exportButtonText, \"Export\" );\n        _configuration.lessText = Data.getDefaultAnyString( _configuration.lessText, \"Less\" );\n        _configuration.moreText = Data.getDefaultAnyString( _configuration.moreText, \"More\" );\n        _configuration.dateText = Data.getDefaultAnyString( _configuration.dateText, \"Date\" );\n        _configuration.countText = Data.getDefaultAnyString( _configuration.countText, \"Count\" );\n        _configuration.mapText = Data.getDefaultAnyString( _configuration.mapText, \"Map\" );\n        _configuration.chartText = Data.getDefaultAnyString( _configuration.chartText, \"Chart\" );\n        _configuration.noChartDataMessage = Data.getDefaultAnyString( _configuration.noChartDataMessage, \"There is currently no data to view.\" );\n        _configuration.statisticsText = Data.getDefaultAnyString( _configuration.statisticsText, \"Statistics\" );\n        _configuration.noStatisticsDataMessage = Data.getDefaultAnyString( _configuration.noStatisticsDataMessage, \"There are currently no statistics to view.\" );\n        _configuration.unknownTrendText = Data.getDefaultAnyString( _configuration.unknownTrendText, \"Unknown\" );\n        _configuration.importButtonText = Data.getDefaultAnyString( _configuration.importButtonText, \"Import\" );\n        _configuration.noMapDataMessage = Data.getDefaultAnyString( _configuration.noMapDataMessage, \"There is currently no data to view.\" );\n        _configuration.objectErrorText = Data.getDefaultAnyString( _configuration.objectErrorText, \"Errors in object: {{error_1}}, {{error_2}}\" );\n        _configuration.attributeNotValidErrorText = Data.getDefaultAnyString( _configuration.attributeNotValidErrorText, \"The attribute '{{attribute_name}}' is not a valid object.\" );\n        _configuration.attributeNotSetErrorText = Data.getDefaultAnyString( _configuration.attributeNotSetErrorText, \"The attribute '{{attribute_name}}' has not been set correctly.\" );\n        _configuration.closeToolTipText = Data.getDefaultAnyString( _configuration.closeToolTipText, \"Close\" );\n        _configuration.configurationToolTipText = Data.getDefaultAnyString( _configuration.configurationToolTipText, \"Configuration\" );\n        _configuration.configurationTitleText = Data.getDefaultAnyString( _configuration.configurationTitleText, \"Configuration\" );\n        _configuration.visibleMonthsText = Data.getDefaultAnyString( _configuration.visibleMonthsText, \"Visible Months\" );\n        _configuration.visibleDaysText = Data.getDefaultAnyString( _configuration.visibleDaysText, \"Visible Days\" );\n        _configuration.dataText = Data.getDefaultAnyString( _configuration.dataText, \"Data\" );\n        _configuration.colorRangesText = Data.getDefaultAnyString( _configuration.colorRangesText, \"Color Ranges\" );\n        _configuration.yearText = Data.getDefaultAnyString( _configuration.yearText, \"Year\" );\n        _configuration.daysText = Data.getDefaultAnyString( _configuration.daysText, \"Days\" );\n        _configuration.noDaysDataMessage = Data.getDefaultAnyString( _configuration.noDaysDataMessage, \"There are currently no days to view.\" );\n    }\n\n    function buildDefaultConfigurationArrays() : void {\n        if ( Is.invalidOptionArray( _configuration.monthNames, 12 ) ) {\n            _configuration.monthNames = [\n                \"Jan\",\n                \"Feb\",\n                \"Mar\",\n                \"Apr\",\n                \"May\",\n                \"Jun\",\n                \"Jul\",\n                \"Aug\",\n                \"Sep\",\n                \"Oct\",\n                \"Nov\",\n                \"Dec\"\n            ];\n        }\n\n        if ( Is.invalidOptionArray( _configuration.dayNames, 7 ) ) {\n            _configuration.dayNames = [\n                \"Mon\",\n                \"Tue\",\n                \"Wed\",\n                \"Thu\",\n                \"Fri\",\n                \"Sat\",\n                \"Sun\"\n            ];\n        }\n    }\n\n\n\t/*\n\t * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t * Public API Functions:\n\t * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t */\n\n    const _public: PublicApi = {\n        /*\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         * Public Functions:  Manage Dates\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         */\n\n        addDates: function ( elementId: string, dates: Date[], type: string = null, triggerRefresh: boolean = true ) : PublicApi {\n            if ( Is.definedString( elementId ) && Is.definedArray( dates ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n                \n                if ( !bindingOptions._currentView.isInFetchMode ) {\n                    type = Data.getDefaultString( type, _configuration.unknownTrendText );\n\n                    const datesLength: number = dates.length;\n        \n                    for ( let dateIndex: number = 0; dateIndex < datesLength; dateIndex++ ) {\n                        _public.addDate( elementId, dates[ dateIndex ], type, false );\n                    }\n        \n                    if ( triggerRefresh ) {\n                        renderControlContainer( bindingOptions, true );\n                    }\n                }\n            }\n    \n            return _public;\n        },\n\n        addDate: function ( elementId: string, date: Date, type: string = null, triggerRefresh: boolean = true ) : PublicApi {\n            if ( Is.definedString( elementId ) && Is.definedDate( date ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n                \n                if ( !bindingOptions._currentView.isInFetchMode ) {\n                    type = Data.getDefaultString( type, _configuration.unknownTrendText );\n\n                    const storageDate: string = toStorageDate( date );\n        \n                    if ( !_elements_DateCounts[ elementId ].typeData.hasOwnProperty( type ) ) {\n                        _elements_DateCounts[ elementId ].typeData[ type ] = {} as TypeCountsData;\n                        _elements_DateCounts[ elementId ].types++;\n                    }\n        \n                    if ( !_elements_DateCounts[ elementId ].typeData[ type ].hasOwnProperty( storageDate ) ) {\n                        _elements_DateCounts[ elementId ].typeData[ type ][ storageDate ] = 0;\n                    }\n            \n                    _elements_DateCounts[ elementId ].typeData[ type ][ storageDate ]++;\n        \n                    fireCustomTriggerEvent( bindingOptions.events.onAdd, bindingOptions._currentView.element );\n        \n                    if ( triggerRefresh ) {\n                        renderControlContainer( bindingOptions, true );\n                    }\n                }\n            }\n    \n            return _public;\n        },\n\n        updateDate: function ( elementId: string, date: Date, count: number, type: string = null, triggerRefresh: boolean = true ) : PublicApi {\n            if ( Is.definedString( elementId ) && Is.definedDate( date ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n                \n                if ( !bindingOptions._currentView.isInFetchMode && count > 0 ) {\n                    const storageDate: string = toStorageDate( date );\n        \n                    if ( _elements_DateCounts[ elementId ].typeData.hasOwnProperty( type ) ) {    \n                        type = Data.getDefaultString( type, _configuration.unknownTrendText );\n\n                        _elements_DateCounts[ elementId ].typeData[ type ][ storageDate ] = count;\n        \n                        fireCustomTriggerEvent( bindingOptions.events.onUpdate, bindingOptions._currentView.element );\n        \n                        if ( triggerRefresh ) {\n                            renderControlContainer( bindingOptions, true );\n                        }\n                    }\n                }\n            }\n    \n            return _public;\n        },\n\n        removeDates: function ( elementId: string, dates: Date[], type: string = null, triggerRefresh: boolean = true ) : PublicApi {\n            if ( Is.definedString( elementId ) && Is.definedArray( dates ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n                \n                if ( !bindingOptions._currentView.isInFetchMode ) {\n                    type = Data.getDefaultString( type, _configuration.unknownTrendText );\n\n                    const datesLength: number = dates.length;\n        \n                    for ( let dateIndex: number = 0; dateIndex < datesLength; dateIndex++ ) {\n                        _public.removeDate( elementId, dates[ dateIndex ], type, false );\n                    }\n        \n                    if ( triggerRefresh ) {\n                        renderControlContainer( bindingOptions, true );\n                    }\n                }\n            }\n    \n            return _public;\n        },\n\n        removeDate: function ( elementId: string, date: Date, type: string = null, triggerRefresh: boolean = true ) : PublicApi {\n            if ( Is.definedString( elementId ) && Is.definedDate( date ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n                \n                if ( !bindingOptions._currentView.isInFetchMode ) {\n                    const storageDate: string = toStorageDate( date );\n        \n                    if ( _elements_DateCounts[ elementId ].typeData.hasOwnProperty( type ) && _elements_DateCounts[ elementId ].typeData[ type ].hasOwnProperty( storageDate ) ) {\n                        type = Data.getDefaultString( type, _configuration.unknownTrendText );\n\n                        if ( _elements_DateCounts[ elementId ].typeData[ type ][ storageDate ] > 0 ) {\n                            _elements_DateCounts[ elementId ].typeData[ type ][ storageDate ]--;\n                        }\n        \n                        fireCustomTriggerEvent( bindingOptions.events.onRemove, bindingOptions._currentView.element );\n        \n                        if ( triggerRefresh ) {\n                            renderControlContainer( bindingOptions, true );\n                        }\n                    }\n                }\n            }\n    \n            return _public;\n        },\n\n        clearDate: function ( elementId: string, date: Date, type: string = null, triggerRefresh: boolean = true ) : PublicApi {\n            if ( Is.definedString( elementId ) && Is.definedDate( date ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n                \n                if ( !bindingOptions._currentView.isInFetchMode ) {\n                    const storageDate: string = toStorageDate( date );\n        \n                    if ( _elements_DateCounts[ elementId ].typeData.hasOwnProperty( type ) && _elements_DateCounts[ elementId ].typeData[ type ].hasOwnProperty( storageDate ) ) {\n                        type = Data.getDefaultString( type, _configuration.unknownTrendText );\n\n                        delete _elements_DateCounts[ elementId ].typeData[ type ][ storageDate ];\n        \n                        fireCustomTriggerEvent( bindingOptions.events.onClear, bindingOptions._currentView.element );\n        \n                        if ( triggerRefresh ) {\n                            renderControlContainer( bindingOptions, true );\n                        }\n                    }\n                }\n            }\n    \n            return _public;\n        },\n\n        resetAll: function ( triggerRefresh: boolean = true ) : PublicApi {\n            for ( let elementId in _elements_DateCounts ) {\n                if ( _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                    _public.reset( elementId, triggerRefresh );\n                }\n            }\n    \n            return _public;\n        },\n\n        reset: function ( elementId: string, triggerRefresh: boolean = true ) : PublicApi {\n            if ( Is.definedString( elementId ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n                \n                if ( !bindingOptions._currentView.isInFetchMode ) {\n                    bindingOptions._currentView.type = _configuration.unknownTrendText;\n        \n                    createDateStorageForElement( elementId, bindingOptions, false );\n                    fireCustomTriggerEvent( bindingOptions.events.onReset, bindingOptions._currentView.element );\n        \n                    if ( triggerRefresh ) {\n                        renderControlContainer( bindingOptions, true );\n                    }\n                }\n            }\n    \n            return _public;\n        },\n\n\n        /*\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         * Public Functions:  Export/Import\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         */\n\n        import: function ( elementId: string, files: FileList ) : PublicApi {\n            if ( Is.definedString( elementId ) && _elements_DateCounts.hasOwnProperty( elementId ) && Is.definedArray( files ) ) {\n                importFromFiles( files, _elements_DateCounts[ elementId ].options );\n            }\n    \n            return _public;\n        },\n\n        export: function ( elementId: string, exportType: string = null ) : PublicApi {\n            if ( Is.definedString( elementId ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                exportAllData( _elements_DateCounts[ elementId ].options, exportType );\n            }\n    \n            return _public;\n        },\n\n\n        /*\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         * Public Functions:  Manage Instances\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         */\n\n        refresh: function ( elementId: string ) : PublicApi {\n            if ( Is.definedString( elementId ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n    \n                renderControlContainer( bindingOptions, true );\n                fireCustomTriggerEvent( bindingOptions.events.onRefresh, bindingOptions._currentView.element );\n            }\n    \n            return _public;\n        },\n\n        refreshAll: function () : PublicApi {\n            for ( let elementId in _elements_DateCounts ) {\n                if ( _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                    const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n    \n                    renderControlContainer( bindingOptions, true );\n                    fireCustomTriggerEvent( bindingOptions.events.onRefresh, bindingOptions._currentView.element );\n                }\n            }\n    \n            return _public;\n        },\n\n        setYear: function ( elementId: string, year: number ) : PublicApi {\n            if ( Is.definedString( elementId ) && Is.definedNumber( year ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n                bindingOptions._currentView.year = year;\n    \n                if ( !isYearVisible( bindingOptions, bindingOptions._currentView.year ) ) {\n                    moveToNextYear( bindingOptions, false );\n                } else {\n                    renderControlContainer( bindingOptions );\n                }\n    \n                fireCustomTriggerEvent( bindingOptions.events.onSetYear, bindingOptions._currentView.year );\n            }\n    \n            return _public;\n        },\n\n        setYearToHighest: function ( elementId: string ) : PublicApi {\n            if ( Is.definedString( elementId ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n                const data: TypeCountsData = getCurrentViewData( bindingOptions );\n                let maximumYear: number = 0;\n    \n                for ( let storageDate in data ) {\n                    if ( data.hasOwnProperty( storageDate ) ) {\n                        maximumYear = Math.max( maximumYear, parseInt( getStorageDateYear( storageDate ) ) );\n                    }\n                }\n    \n                if ( maximumYear > 0 ) {\n                    bindingOptions._currentView.year = maximumYear;\n    \n                    if ( !isYearVisible( bindingOptions, bindingOptions._currentView.year ) ) {\n                        moveToNextYear( bindingOptions, false );\n                    } else {\n                        renderControlContainer( bindingOptions );\n                    }\n    \n                    fireCustomTriggerEvent( bindingOptions.events.onSetYear, bindingOptions._currentView.year );\n                }\n            }\n    \n            return _public;\n        },\n\n        setYearToLowest: function ( elementId: string ) : PublicApi {\n            if ( Is.definedString( elementId ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n                const data: TypeCountsData = getCurrentViewData( bindingOptions );\n                let minimumYear: number = 9999;\n    \n                for ( let storageDate in data ) {\n                    if ( data.hasOwnProperty( storageDate ) ) {\n                        minimumYear = Math.min( minimumYear, parseInt( getStorageDateYear( storageDate ) ) );\n                    }\n                }\n    \n                if ( minimumYear < 9999 ) {\n                    bindingOptions._currentView.year = minimumYear;\n    \n                    if ( !isYearVisible( bindingOptions, bindingOptions._currentView.year ) ) {\n                        moveToPreviousYear( bindingOptions, false );\n                    } else {\n                        renderControlContainer( bindingOptions );\n                    }\n    \n                    fireCustomTriggerEvent( bindingOptions.events.onSetYear, bindingOptions._currentView.year );\n                }\n            }\n    \n            return _public;\n        },\n\n        moveToPreviousYear: function ( elementId: string ) : PublicApi {\n            if ( Is.definedString( elementId ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                moveToPreviousYear( _elements_DateCounts[ elementId ].options );\n            }\n    \n            return _public;\n        },\n\n        moveToNextYear: function ( elementId: string ) : PublicApi {\n            if ( Is.definedString( elementId ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                moveToNextYear( _elements_DateCounts[ elementId ].options );\n            }\n    \n            return _public;\n        },\n\n        moveToCurrentYear: function ( elementId: string ) : PublicApi {\n            if ( Is.definedString( elementId ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n                bindingOptions._currentView.year = new Date().getFullYear();\n    \n                if ( !isYearVisible( bindingOptions, bindingOptions._currentView.year ) ) {\n                    moveToNextYear( bindingOptions, false );\n                } else {\n                    renderControlContainer( bindingOptions );\n                }\n    \n                fireCustomTriggerEvent( bindingOptions.events.onSetYear, bindingOptions._currentView.year );\n            }\n    \n            return _public;\n        },\n\n        getYear: function ( elementId: string ) : number {\n            let result: number = null;\n\n            if ( Is.definedString( elementId ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n    \n                result = bindingOptions._currentView.year;\n            }\n    \n            return result;\n        },\n\n        render: function ( element: HTMLElement, options: BindingOptions ) : PublicApi {\n            if ( Is.definedObject( element ) && Is.definedObject( options ) ) {\n                renderControl( renderBindingOptions( options, element ) );\n            }\n    \n            return _public;\n        },\n\n        renderAll: function () : PublicApi {\n            render();\n\n            return _public;\n        },\n\n        switchView: function ( elementId: string, viewName: string ) : PublicApi {\n            if ( Is.definedString( elementId ) && Is.definedString( viewName ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n                let view: number = null;\n    \n                if ( viewName.toLowerCase() === ViewName.map ) {\n                    view = ViewId.map;\n                } else if ( viewName.toLowerCase() === ViewName.chart ) {\n                    view = ViewId.chart;\n                } else if ( viewName.toLowerCase() === ViewName.days ) {\n                    view = ViewId.days;\n                } else if ( viewName.toLowerCase() === ViewName.statistics ) {\n                    view = ViewId.statistics;\n                }\n    \n                if ( Is.definedNumber( view ) ) {\n                    bindingOptions._currentView.view = view;\n    \n                    fireCustomTriggerEvent( bindingOptions.events.onViewSwitch, viewName );\n                    renderControlContainer( bindingOptions, false, true );\n                }\n            }\n    \n            return _public;\n        },\n\n        switchType: function ( elementId: string, type: string ) : PublicApi {\n            if ( Is.definedString( elementId ) && Is.definedString( type ) && _elements_DateCounts.hasOwnProperty( elementId ) && _elements_DateCounts[ elementId ].typeData.hasOwnProperty( type ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n    \n                if ( bindingOptions._currentView.type !== type ) {\n                    bindingOptions._currentView.type = type;\n                \n                    fireCustomTriggerEvent( bindingOptions.events.onTypeSwitch, type );\n                    renderControlContainer( bindingOptions );\n                }\n            }\n    \n            return _public;\n        },\n\n        updateOptions: function ( elementId: string, newOptions: BindingOptions ) : PublicApi {\n            if ( Is.definedString( elementId ) && Is.definedObject( newOptions ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n                const newBindingOptions: BindingOptions = buildAttributeOptions( newOptions );\n                let optionChanged: boolean = false;\n    \n                for ( let propertyName in newBindingOptions ) {\n                    if ( newBindingOptions.hasOwnProperty( propertyName ) && bindingOptions.hasOwnProperty( propertyName ) && bindingOptions[ propertyName ] !== newBindingOptions[ propertyName ] ) {\n                        bindingOptions[ propertyName ] = newBindingOptions[ propertyName ];\n                        optionChanged = true;\n                    }\n                }\n    \n                if ( optionChanged ) {\n                    renderControlContainer( bindingOptions, true );\n                    fireCustomTriggerEvent( bindingOptions.events.onRefresh, bindingOptions._currentView.element );\n                    fireCustomTriggerEvent( bindingOptions.events.onOptionsUpdate, bindingOptions._currentView.element, bindingOptions );\n                }\n            }\n    \n            return _public;\n        },\n\n\n        /*\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         * Public Functions:  Destroying\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         */\n\n        destroyAll: function () : PublicApi {\n            for ( let elementId in _elements_DateCounts ) {\n                if ( _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                    destroyElement( _elements_DateCounts[ elementId ].options );\n                }\n            }\n    \n            _elements_DateCounts = {} as DateCounts;\n    \n            return _public;\n        },\n\n        destroy: function ( elementId: string ) : PublicApi {\n            if ( Is.definedString( elementId ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                destroyElement( _elements_DateCounts[ elementId ].options );\n    \n                delete _elements_DateCounts[ elementId ];\n            }\n    \n            return _public;\n        },\n\n\n        /*\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         * Public Functions:  Configuration\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         */\n\n        setConfiguration: function ( newConfiguration: Configuration, triggerRefresh: boolean = true ) : PublicApi {\n            if ( Is.definedObject( newConfiguration ) ) {\n                let configurationHasChanged: boolean = false;\n            \n                for ( let propertyName in newConfiguration ) {\n                    if ( newConfiguration.hasOwnProperty( propertyName ) && _configuration.hasOwnProperty( propertyName ) && _configuration[ propertyName ] !== newConfiguration[ propertyName ] ) {\n                        _configuration[ propertyName ] = newConfiguration[ propertyName ];\n                        configurationHasChanged = true;\n                    }\n                }\n        \n                if ( configurationHasChanged ) {\n                    buildDefaultConfiguration( _configuration );\n        \n                    if ( triggerRefresh ) {\n                        _public.refreshAll();\n                    }\n                }\n            }\n    \n            return _public;\n        },\n\n\n        /*\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         * Public Functions:  Additional Data\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         */\n\n        getIds: function () : string[] {\n            const result: string[] = [];\n        \n            for ( let elementId in _elements_DateCounts ) {\n                if ( _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                    result.push( elementId );\n                }\n            }\n    \n            return result;\n        },\n\n        getVersion: function () : string {\n            return \"4.0.0\";\n        }\n    };\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Initialize Heat.js\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    ( () => {\n        buildDefaultConfiguration();\n\n        document.addEventListener( \"DOMContentLoaded\", function () {\n            render();\n        } );\n\n        window.addEventListener( \"pagehide\", function () {\n            cancelAllPullDataTimers();\n        } );\n\n        if ( !Is.defined( window.$heat ) ) {\n            window.$heat = _public;\n        }\n    } )();\n} )();"]}