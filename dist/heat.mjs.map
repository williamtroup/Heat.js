{"version":3,"sources":["../src/ts/enum.ts","../src/ts/constant.ts","../src/ts/is.ts","../src/ts/data.ts","../src/ts/dom.ts","../src/ts/datetime.ts","../src/heat.ts"],"names":["Is","Data","String","result","DomElement","DateTime","render","JSON"],"mappings":"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","sourcesContent":["/**\n * Heat.js\n * \n * A lightweight JavaScript library that generates customizable heat maps, charts, and statistics to visualize date-based activity and trends.\n * \n * @file        enum.ts\n * @version     v4.0.0\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nexport const enum STRING {\n    empty = \"\",\n    space = \" \",\n    newLine = \"\\n\",\n    dash = \"-\",\n    underscore = \"_\",\n    plus = \"+\",\n    zero = \"0\",\n    colon = \":\",\n    comma = \",\"\n}\n\nexport const enum VALUE {\n    notFound = -1\n}\n\nexport const enum VIEW_ID {\n    map = 1,\n    chart = 2,\n    days = 3,\n    statistics = 4\n}\n\nexport const enum VIEW_NAME {\n    map = \"map\",\n    chart = \"chart\",\n    days = \"days\",\n    statistics = \"statistics\"\n}\n\nexport const enum EXPORT_TYPE {\n    csv = \"csv\",\n    json = \"json\",\n    xml = \"xml\",\n    txt = \"txt\"\n}","export const ATTRIBUTE_NAME_OPTION = \"data-heat-js\";","import { STRING } from \"./enum\";\n\n\nexport namespace Is {\n    export function defined( value: any ) : boolean  {\n        return value !== null && value !== undefined && value.toString() !== STRING.empty;\n    }\n\n    export function definedObject( object: any ) : boolean {\n        return defined( object ) && typeof object === \"object\";\n    }\n\n    export function definedBoolean( object: any ) : boolean  {\n        return defined( object ) && typeof object === \"boolean\";\n    }\n\n    export function definedString( object: any ) : boolean  {\n        return defined( object ) && typeof object === \"string\";\n    }\n\n    export function definedFunction( object: any ) : boolean  {\n        return defined( object ) && typeof object === \"function\";\n    }\n\n    export function definedNumber( object: any ) : boolean  {\n        return defined( object ) && typeof object === \"number\";\n    }\n\n    export function definedArray( object: any ) : boolean  {\n        return definedObject( object ) && object instanceof Array;\n    }\n\n    export function definedDate( object: any ) : boolean  {\n        return definedObject( object ) && object instanceof Date;\n    }\n\n    export function invalidOptionArray( array: any, minimumLength: number = 1 ) : boolean {\n        return !definedArray( array ) || array.length < minimumLength;\n    }\n}","import { STRING } from \"./enum\";\nimport { Validation } from \"./validation\";\n\n\nexport namespace Data {\n    export function getDefaultAnyString( value: any, defaultValue: string ) : string  {\n        return typeof value === \"string\" ? value : defaultValue;\n    }\n\n    export function getDefaultString( value: any, defaultValue: string ) : string {\n        return Validation.isDefinedString( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultBoolean( value: any, defaultValue: boolean ) : boolean {\n        return Validation.isDefinedBoolean( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultNumber( value: any, defaultValue: number ) : number {\n        return Validation.isDefinedNumber( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultFunction( value: any, defaultValue: object ) : any {\n        return Validation.isDefinedFunction( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultArray( value: any, defaultValue: any[] ) : any[] {\n        return Validation.isDefinedArray( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultObject( value: any, defaultValue: object ) : any {\n        return Validation.isDefinedObject( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultStringOrArray( value: any, defaultValue: any[] ) : any[] {\n        let result: any[] = defaultValue;\n\n        if ( Validation.isDefinedString( value ) ) {\n            const values: string[] = value.toString().split( STRING.space );\n\n            if ( values.length === 0 ) {\n                value = defaultValue;\n            } else {\n                result = values;\n            }\n\n        } else {\n            result = getDefaultArray( value, defaultValue );\n        }\n\n        return result;\n    }\n}","import { STRING } from \"./enum\";\nimport { Validation } from \"./validation\";\n\n\nexport namespace DomElement {\n    export function createWithNoContainer( type: string ) : HTMLElement {\n        const nodeType: string = type.toLowerCase();\n        const isText: boolean = nodeType === \"text\";\n\n        let result: any = isText ? document.createTextNode( STRING.empty ) : document.createElement( nodeType );\n\n        return result;\n    }\n\n    export function create( container: HTMLElement, type: string, className: string = STRING.empty, beforeNode: HTMLElement = null ) : HTMLElement {\n        const nodeType: string = type.toLowerCase();\n        const isText: boolean = nodeType === \"text\";\n\n        let result: any = isText ? document.createTextNode( STRING.empty ) : document.createElement( nodeType );\n\n        if ( Validation.isDefined( className ) ) {\n            result.className = className;\n        }\n\n        if ( Validation.isDefined( beforeNode ) ) {\n            container.insertBefore( result, beforeNode );\n        } else {\n            container.appendChild( result );\n        }\n\n        return result;\n    }\n\n    export function createWithHTML( container: HTMLElement, type: string, className: string, html: string, beforeNode: HTMLElement = null ) : HTMLElement {\n        const element: HTMLElement = create( container, type, className, beforeNode );\n        element.innerHTML = html;\n\n        return element;\n    }\n\n    export function getStyleValueByName( element: any, stylePropertyName: string, toNumber: boolean = false ) : any {\n        let value: any = null;\n        \n        if ( document.defaultView.getComputedStyle ) {\n            value = document.defaultView.getComputedStyle( element, null ).getPropertyValue( stylePropertyName ); \n        } else if ( element.currentStyle ) {\n            value = element.currentStyle[ stylePropertyName ];\n        }   \n        \n        if ( toNumber ) {\n            value = parseFloat( value );\n        }\n\n        return value;\n    }\n\n    export function addClass( element: HTMLElement, className: string ) {\n        element.className += STRING.space + className;\n        element.className = element.className.trim();\n    }\n\n    export function removeClass( element: HTMLElement, className: string ) {\n        element.className = element.className.replace( className, STRING.empty );\n        element.className = element.className.trim();\n    }\n\n    export function cancelBubble( e: any ) {\n        e.preventDefault();\n        e.cancelBubble = true;\n    }\n\n    export function getScrollPosition() : object {\n        const doc: HTMLElement = document.documentElement;\n        const left: number = ( window.pageXOffset || doc.scrollLeft )  - ( doc.clientLeft || 0 );\n        const top: number = ( window.pageYOffset || doc.scrollTop ) - ( doc.clientTop || 0 );\n\n        return {\n            left: left,\n            top: top\n        };\n    }\n\n    export function showElementAtMousePosition( e: any, element: HTMLElement ) {\n        let left: number = e.pageX;\n        let top: number = e.pageY;\n        const scrollPosition: any = getScrollPosition();\n\n        element.style.display = \"block\";\n\n        if ( left + element.offsetWidth > window.innerWidth ) {\n            left -= element.offsetWidth;\n        } else {\n            left++;\n        }\n\n        if ( top + element.offsetHeight > window.innerHeight ) {\n            top -= element.offsetHeight;\n        } else {\n            top++;\n        }\n\n        if ( left < scrollPosition.left ) {\n            left = e.pageX + 1;\n        }\n\n        if ( top < scrollPosition.top ) {\n            top = e.pageY + 1;\n        }\n        \n        element.style.left = left + \"px\";\n        element.style.top = top + \"px\";\n    }\n\n    export function reverseChildrenOrder( parent: HTMLElement ) {\n        const children: HTMLCollection = parent.children;\n        let childrenLength: number = children.length - 1;\n\n        for ( ; childrenLength--; ) {\n            parent.appendChild( children[ childrenLength ] );\n        }\n    }\n\n    export function createCheckBox( container: HTMLElement, labelText: string, checked: boolean = null, onClick: Function = null ) : any {\n        const lineContainer: HTMLElement = create( container, \"div\" );\n        const label: HTMLElement = create( lineContainer, \"label\", \"checkbox\" );\n        const input: any = create( label, \"input\" );\n\n        input.type = \"checkbox\";\n\n        if ( Validation.isDefined( onClick ) ) {\n            input.onclick = onClick;\n        }\n\n        if ( Validation.isDefined( checked ) ) {\n            input.checked = checked;\n        }\n\n        create( label, \"span\", \"check-mark\" );\n        createWithHTML( label, \"span\", \"text\", labelText );\n        \n        return {\n            input: input,\n            label: label\n        };\n    }\n}","import { Data } from \"./data\";\nimport { Configuration } from \"./type\";\n\n\nexport namespace DateTime {\n    export function getTotalDaysInMonth( year: number, month: number ) : number {\n        return new Date( year, month + 1, 0 ).getDate();\n    }\n\n    export function getWeekdayNumber( date: Date ) : number {\n        return date.getDay() - 1 < 0 ? 6 : date.getDay() - 1;\n    }\n\n    export function getDayOrdinal( configuration: Configuration, value: number ) : string {\n        let result: string = configuration.thText;\n\n        if ( value === 31 || value === 21 || value === 1 ) {\n            result = configuration.stText;\n        } else if ( value === 22 || value === 2 ) {\n            result = configuration.ndText;\n        } else if ( value === 23 || value === 3 ) {\n            result = configuration.rdText;\n        }\n\n        return result;\n    }\n\n    export function getCustomFormattedDateText( configuration: Configuration, dateFormat: string, date: Date ) : string {\n        let result: string = dateFormat;\n        const weekDayNumber: number = getWeekdayNumber( date );\n\n        result = result.replace( \"{dddd}\", configuration.dayNames[ weekDayNumber ] );\n        result = result.replace( \"{dd}\", Data.String.padNumber( date.getDate() ) );\n        result = result.replace( \"{d}\", date.getDate().toString() );\n\n        result = result.replace( \"{o}\", getDayOrdinal( configuration, date.getDate() ) );\n\n        result = result.replace( \"{mmmm}\", configuration.monthNames[ date.getMonth() ] );\n        result = result.replace( \"{mm}\", Data.String.padNumber( date.getMonth() + 1 ) );\n        result = result.replace( \"{m}\", ( date.getMonth() + 1 ).toString() );\n\n        result = result.replace( \"{yyyy}\", date.getFullYear().toString() );\n        result = result.replace( \"{yyy}\", date.getFullYear().toString().substring( 1 ) );\n        result = result.replace( \"{yy}\", date.getFullYear().toString().substring( 2 ) );\n        result = result.replace( \"{y}\", parseInt( date.getFullYear().toString().substring( 2 ) ).toString() );\n\n        return result;\n    }\n}","/**\n * Heat.js\n * \n * A lightweight JavaScript library that generates customizable heat maps, charts, and statistics to visualize date-based activity and trends.\n * \n * @file        heat.ts\n * @version     v4.0.0\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nimport {\n    type Configuration,\n    type Holiday,\n    type ColorRange,\n    type BindingOptions,\n    type BindingOptionsCurrentView,\n    type Title,\n    type Description,\n    type Guide,\n    type Tooltip,\n    type Map, \n    type Chart,\n    type Days,\n    type Statistics,\n    type Events } from \"./ts/type\";\n\nimport {\n    EXPORT_TYPE,\n    STRING,\n    VALUE,\n    VIEW_ID,\n    VIEW_NAME } from \"./ts/enum\";\n\nimport { type PublicApi } from \"./ts/api\";\n\n\n( ( documentObject, windowObject, mathObject, jsonObject ) => {\n\n    // Variables: Configuration\n    let _configuration: Configuration = {} as Configuration;\n\n    // Variables: Elements\n    const _elements_Type: object = {};\n    let _elements_Day_Width: number = null;\n\n    // Variables: Date Counts\n    let _elements_DateCounts: object = {};\n\n    // Variables: Internal Names\n    const _internal_Name_Holiday: string = \"HOLIDAY\";\n\n    // Variables: Local Storage\n    const _local_Storage_Start_ID: string = \"HJS_\";\n\n    // Variables: Defaults\n    const _default_MonthsToShow: number[] = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 ];\n    const _default_DaysToShow: number[] = [ 1, 2, 3, 4, 5, 6, 7 ];\n\n    // Variables: Attribute Names\n    const _attribute_Name_Options: string = \"data-heat-js\";\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Render:  Disabled Background\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function renderDisabledBackground( bindingOptions: BindingOptions ) : void {\n        bindingOptions._currentView.disabledBackground = createElement( bindingOptions._currentView.element, \"div\", \"disabled\" );\n    }\n\n    function showDisabledBackground( bindingOptions: BindingOptions ) : void {\n        if ( isDefined( bindingOptions._currentView.disabledBackground ) && bindingOptions._currentView.disabledBackground.style.display !== \"block\" ) {\n            bindingOptions._currentView.disabledBackground.style.display = \"block\";\n        }\n    }\n\n    function hideDisabledBackground( bindingOptions: BindingOptions ) : void {\n        if ( isDefined( bindingOptions._currentView.disabledBackground ) && bindingOptions._currentView.disabledBackground.style.display !== \"none\" ) {\n            bindingOptions._currentView.disabledBackground.style.display = \"none\";\n        }\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Render\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function render() : void {\n        const tagTypes: string[] = _configuration.domElementTypes;\n        const tagTypesLength: number = tagTypes.length;\n\n        for ( let tagTypeIndex: number = 0; tagTypeIndex < tagTypesLength; tagTypeIndex++ ) {\n            const domElements: HTMLCollectionOf<Element> = documentObject.getElementsByTagName( tagTypes[ tagTypeIndex ] );\n            const elements: HTMLElement[] = [].slice.call( domElements );\n            const elementsLength: number = elements.length;\n\n            for ( let elementIndex: number = 0; elementIndex < elementsLength; elementIndex++ ) {\n                if ( !renderElement( elements[ elementIndex ] ) ) {\n                    break;\n                }\n            }\n        }\n    }\n\n    function renderElement( element: HTMLElement ) : boolean {\n        let result: boolean = true;\n\n        if ( isDefined( element ) && element.hasAttribute( _attribute_Name_Options ) ) {\n            const bindingOptionsData: string = element.getAttribute( _attribute_Name_Options );\n\n            if ( isDefinedString( bindingOptionsData ) ) {\n                const bindingOptions: any = getObjectFromString( bindingOptionsData );\n\n                if ( bindingOptions.parsed && isDefinedObject( bindingOptions.result ) ) {\n                    renderControl( renderBindingOptions( bindingOptions.result, element ) );\n\n                } else {\n                    if ( !_configuration.safeMode ) {\n                        console.error( _configuration.attributeNotValidErrorText.replace( \"{{attribute_name}}\", _attribute_Name_Options ) );\n                        result = false;\n                    }\n                }\n\n            } else {\n                if ( !_configuration.safeMode ) {\n                    console.error( _configuration.attributeNotSetErrorText.replace( \"{{attribute_name}}\", _attribute_Name_Options ) );\n                    result = false;\n                }\n            }\n        }\n\n        return result;\n    }\n\n    function renderBindingOptions( data: any, element: HTMLElement ) : BindingOptions {\n        const bindingOptions: BindingOptions = buildAttributeOptions( data );\n        const view: string = !isDefinedString( bindingOptions.view ) ? STRING.empty : bindingOptions.view.toLowerCase();\n\n        let currentView: BindingOptionsCurrentView = {} as BindingOptionsCurrentView;\n        currentView.element = element;\n        currentView.disabledBackground = null;\n        currentView.configurationDialog = null;\n        currentView.dayCheckBoxes = [];\n        currentView.monthCheckBoxes = [];\n        currentView.tooltip = null;\n        currentView.tooltipTimer = null;\n        currentView.mapContents = null;\n        currentView.mapContentsScrollLeft = 0;\n        currentView.year = bindingOptions.year;\n        currentView.type = _configuration.unknownTrendText;\n        currentView.isInFetchMode = isDefinedFunction( bindingOptions.events.onDataFetch );\n        currentView.isInFetchModeTimer = null;\n        currentView.yearsAvailable = [];\n\n        if ( bindingOptions.views.chart.enabled ) {\n            currentView.chartContents = null;\n            currentView.chartContentsScrollLeft = 0;\n        }\n\n        if ( bindingOptions.views.days.enabled ) {\n            currentView.daysContents = null;\n            currentView.daysContentsScrollLeft = 0;\n        }\n        \n        if ( bindingOptions.views.statistics.enabled ) {\n            currentView.statisticsContents = null;\n            currentView.statisticsContentsScrollLeft = 0;\n        }\n\n        if ( view === VIEW_NAME.map ) {\n            currentView.view = VIEW_ID.map;\n        } else if ( view === VIEW_NAME.chart ) {\n            currentView.view = VIEW_ID.chart;\n        } else if ( view === VIEW_NAME.days ) {\n            currentView.view = VIEW_ID.days;\n        } else if ( view === VIEW_NAME.statistics ) {\n            currentView.view = VIEW_ID.statistics;\n        } else {\n            currentView.view = VIEW_ID.map;\n        }\n\n        bindingOptions._currentView = currentView;\n\n        return bindingOptions;\n    }\n\n    function renderControl( bindingOptions: BindingOptions ) : void {\n        fireCustomTriggerEvent( bindingOptions.events.onBeforeRender, bindingOptions._currentView.element );\n\n        if ( !isDefinedString( bindingOptions._currentView.element.id ) ) {\n            bindingOptions._currentView.element.id = newGuid();\n        }\n\n        if ( bindingOptions._currentView.element.className.trim() === STRING.empty ) {\n            bindingOptions._currentView.element.className = \"heat-js\";\n        } else {\n            addClass( bindingOptions._currentView.element, \"heat-js\" );\n        }\n\n        bindingOptions._currentView.element.removeAttribute( _attribute_Name_Options );\n\n        createDateStorageForElement( bindingOptions._currentView.element.id, bindingOptions );\n        renderControlContainer( bindingOptions );\n        fireCustomTriggerEvent( bindingOptions.events.onRenderComplete, bindingOptions._currentView.element );\n    }\n\n    function renderControlContainer( bindingOptions: BindingOptions, isForDataRefresh: boolean = false, isForViewSwitch: boolean = false ) : void {\n        if ( isForDataRefresh ) {\n            storeDataInLocalStorage( bindingOptions );\n        }\n\n        if ( isDefined( bindingOptions._currentView.mapContents ) ) {\n            bindingOptions._currentView.mapContentsScrollLeft = bindingOptions._currentView.mapContents.scrollLeft;\n        }\n\n        if ( bindingOptions.views.chart.enabled && isDefined( bindingOptions._currentView.chartContents ) ) {\n            bindingOptions._currentView.chartContentsScrollLeft = bindingOptions._currentView.chartContents.scrollLeft;\n        }\n\n        if ( bindingOptions.views.days.enabled && isDefined( bindingOptions._currentView.daysContents ) ) {\n            bindingOptions._currentView.daysContentsScrollLeft = bindingOptions._currentView.daysContents.scrollLeft;\n        }\n\n        if ( bindingOptions.views.statistics.enabled && isDefined( bindingOptions._currentView.statisticsContents ) ) {\n            bindingOptions._currentView.statisticsContentsScrollLeft = bindingOptions._currentView.statisticsContents.scrollLeft;\n        }\n        \n        bindingOptions._currentView.element.innerHTML = STRING.empty;\n        bindingOptions._currentView.yearsAvailable = getYearsAvailableInData( bindingOptions );\n        \n        hideToolTip( bindingOptions );\n\n        startDataPullTimer( bindingOptions );\n\n        if ( bindingOptions.title.showConfigurationButton ) {\n            renderDisabledBackground( bindingOptions );\n            renderConfigurationDialog( bindingOptions );\n        }\n\n        renderControlToolTip( bindingOptions );\n        renderControlTitleBar( bindingOptions );\n        renderControlMap( bindingOptions, isForViewSwitch );\n\n        if ( bindingOptions.views.chart.enabled ) {\n            renderControlChart( bindingOptions, isForViewSwitch );\n\n            bindingOptions._currentView.chartContents.style.display = \"none\";\n        }\n\n        if ( bindingOptions.views.days.enabled ) {\n            renderControlDays( bindingOptions, isForViewSwitch );\n\n            bindingOptions._currentView.daysContents.style.display = \"none\";\n        }\n\n        if ( bindingOptions.views.statistics.enabled ) {\n            renderControlStatistics( bindingOptions, isForViewSwitch );\n\n            bindingOptions._currentView.statisticsContents.style.display = \"none\";\n        }\n\n        bindingOptions._currentView.mapContents.style.display = \"none\";\n\n        if ( bindingOptions._currentView.view === VIEW_ID.map ) {\n            bindingOptions._currentView.mapContents.style.display = \"block\";\n        } else if ( bindingOptions.views.chart.enabled && bindingOptions._currentView.view === VIEW_ID.chart ) {\n            bindingOptions._currentView.chartContents.style.display = \"block\";\n        } else if ( bindingOptions.views.days.enabled && bindingOptions._currentView.view === VIEW_ID.days ) {\n            bindingOptions._currentView.daysContents.style.display = \"block\";\n        } else if ( bindingOptions.views.statistics.enabled && bindingOptions._currentView.view === VIEW_ID.statistics ) {\n            bindingOptions._currentView.statisticsContents.style.display = \"block\";\n        } else {\n            bindingOptions._currentView.view = VIEW_ID.map;\n            bindingOptions._currentView.mapContents.style.display = \"block\";\n        }\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Render:  Configuration Dialog\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function renderConfigurationDialog( bindingOptions: BindingOptions ) : void {\n        bindingOptions._currentView.configurationDialog = createElement( bindingOptions._currentView.disabledBackground, \"div\", \"dialog configuration\" );\n\n        const titleBar: HTMLElement = createElement( bindingOptions._currentView.configurationDialog, \"div\", \"dialog-title-bar\" );\n        const contents: HTMLElement = createElement( bindingOptions._currentView.configurationDialog, \"div\", \"dialog-contents\" );\n        const closeButton: HTMLElement = createElement( titleBar, \"div\", \"dialog-close\" );\n        const daysContainer: HTMLElement = createElement( contents, \"div\", \"side-container panel\" );\n        const monthsContainer: HTMLElement = createElement( contents, \"div\", \"side-container panel\" );\n\n        createElementWithHTML( titleBar, \"span\", \"dialog-title-bar-text\", _configuration.configurationTitleText );\n        createElementWithHTML( daysContainer, \"div\", \"side-container-title-text\", _configuration.visibleDaysText + STRING.colon );\n        createElementWithHTML( monthsContainer, \"div\", \"side-container-title-text\", _configuration.visibleMonthsText + STRING.colon );\n\n        const months1Container: HTMLElement = createElement( monthsContainer, \"div\", \"side-container\" );\n        const months2Container: HTMLElement = createElement( monthsContainer, \"div\", \"side-container\" );\n\n        closeButton.onclick = function() {\n            hideConfigurationDialog( bindingOptions );\n        };\n\n        for ( let dayIndex: number = 0; dayIndex < 7; dayIndex++ ) {\n            bindingOptions._currentView.dayCheckBoxes[ dayIndex ] = buildCheckBox( daysContainer, _configuration.dayNames[ dayIndex ] ).input;\n        }\n\n        for ( let monthIndex1: number = 0; monthIndex1 < 7; monthIndex1++ ) {\n            bindingOptions._currentView.monthCheckBoxes[ monthIndex1 ] = buildCheckBox( months1Container, _configuration.monthNames[ monthIndex1 ] ).input;\n        }\n\n        for ( let monthIndex2: number = 7; monthIndex2 < 12; monthIndex2++ ) {\n            bindingOptions._currentView.monthCheckBoxes[ monthIndex2 ] = buildCheckBox( months2Container, _configuration.monthNames[ monthIndex2 ] ).input;\n        }\n\n        addToolTip( closeButton, bindingOptions, _configuration.closeToolTipText );\n    }\n\n    function showConfigurationDialog( bindingOptions: BindingOptions ) : void {\n        showDisabledBackground( bindingOptions );\n\n        if ( isDefined( bindingOptions._currentView.configurationDialog ) && bindingOptions._currentView.configurationDialog.style.display !== \"block\" ) {\n            bindingOptions._currentView.configurationDialog.style.display = \"block\";\n        }\n\n        let daysToShow: number[] = [];\n        let monthsToShow: number[] = [];\n\n        if ( bindingOptions._currentView.view === VIEW_ID.map ) {\n            daysToShow = bindingOptions.views.map.daysToShow;\n            monthsToShow = bindingOptions.views.map.monthsToShow;\n        } else if ( bindingOptions.views.chart.enabled && bindingOptions._currentView.view === VIEW_ID.chart ) {\n            daysToShow = bindingOptions.views.chart.daysToShow;\n            monthsToShow = bindingOptions.views.chart.monthsToShow;\n        } else if ( bindingOptions.views.days.enabled && bindingOptions._currentView.view === VIEW_ID.days ) {\n            daysToShow = bindingOptions.views.days.daysToShow;\n            monthsToShow = bindingOptions.views.days.monthsToShow;\n        } else if ( bindingOptions.views.statistics.enabled && bindingOptions._currentView.view === VIEW_ID.statistics ) {\n            daysToShow = bindingOptions.views.statistics.daysToShow;\n            monthsToShow = bindingOptions.views.statistics.monthsToShow;\n        } else {\n            daysToShow = bindingOptions.views.map.daysToShow;\n            monthsToShow = bindingOptions.views.map.monthsToShow;\n        }\n\n        for ( let dayIndex: number = 0; dayIndex < 7; dayIndex++ ) {\n            bindingOptions._currentView.dayCheckBoxes[ dayIndex ].checked = isDayVisible( daysToShow, dayIndex + 1 );\n        }\n\n        for ( let monthIndex: number = 0; monthIndex < 12; monthIndex++ ) {\n            bindingOptions._currentView.monthCheckBoxes[ monthIndex ].checked = isMonthVisible( monthsToShow, monthIndex );\n        }\n\n        hideToolTip( bindingOptions );\n    }\n\n    function hideConfigurationDialog( bindingOptions: BindingOptions ) : void {\n        hideDisabledBackground( bindingOptions );\n\n        if ( isDefined( bindingOptions._currentView.configurationDialog ) && bindingOptions._currentView.configurationDialog.style.display !== \"none\" ) {\n            bindingOptions._currentView.configurationDialog.style.display = \"none\";\n        }\n\n        const daysChecked: number[] = [];\n        const monthsChecked: number[] = [];\n        let render: boolean = false;\n\n        for ( let dayIndex: number = 0; dayIndex < 7; dayIndex++ ) {\n            if ( bindingOptions._currentView.dayCheckBoxes[ dayIndex ].checked ) {\n                daysChecked.push( dayIndex + 1 );\n            }\n        }\n\n        for ( let monthIndex: number = 0; monthIndex < 12; monthIndex++ ) {\n            if ( bindingOptions._currentView.monthCheckBoxes[ monthIndex ].checked ) {\n                monthsChecked.push( monthIndex + 1 );\n            }\n        }\n\n        if ( daysChecked.length >= 1 ) {\n            if ( bindingOptions._currentView.view === VIEW_ID.map ) {\n                bindingOptions.views.map.daysToShow = daysChecked;\n            } else if ( bindingOptions.views.chart.enabled && bindingOptions._currentView.view === VIEW_ID.chart ) {\n                bindingOptions.views.chart.daysToShow = daysChecked;\n            } else if ( bindingOptions.views.days.enabled && bindingOptions._currentView.view === VIEW_ID.days ) {\n                bindingOptions.views.days.daysToShow = daysChecked;\n            } else if ( bindingOptions.views.statistics.enabled && bindingOptions._currentView.view === VIEW_ID.statistics ) {\n                bindingOptions.views.statistics.daysToShow = daysChecked;\n            } else {\n                bindingOptions.views.map.daysToShow = daysChecked;\n            }\n\n            render = true;\n        }\n\n        if ( monthsChecked.length >= 1 ) {\n            if ( bindingOptions._currentView.view === VIEW_ID.map ) {\n                bindingOptions.views.map.monthsToShow = monthsChecked;\n            } else if ( bindingOptions.views.chart.enabled && bindingOptions._currentView.view === VIEW_ID.chart ) {\n                bindingOptions.views.chart.monthsToShow = monthsChecked;\n            } else if ( bindingOptions.views.days.enabled && bindingOptions._currentView.view === VIEW_ID.days ) {\n                bindingOptions.views.days.monthsToShow = monthsChecked;\n            } else if ( bindingOptions.views.statistics.enabled && bindingOptions._currentView.view === VIEW_ID.statistics ) {\n                bindingOptions.views.statistics.monthsToShow = monthsChecked;\n            } else {\n                bindingOptions.views.map.monthsToShow = monthsChecked;\n            }\n\n            render = true;\n        }\n\n        if ( render ) {\n            renderControlContainer( bindingOptions );\n            fireCustomTriggerEvent( bindingOptions.events.onOptionsUpdate, bindingOptions._currentView.element, bindingOptions );\n            \n        } else {\n            hideToolTip( bindingOptions );\n        }\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Render:  ToolTip\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function renderControlToolTip( bindingOptions: BindingOptions ) : void {\n        if ( !isDefined( bindingOptions._currentView.tooltip ) ) {\n            bindingOptions._currentView.tooltip = createElement( documentObject.body, \"div\", \"heat-js-tooltip\" );\n            bindingOptions._currentView.tooltip.style.display = \"none\";\n    \n            assignToolTipEvents( bindingOptions );\n        }\n    }\n\n    function assignToolTipEvents( bindingOptions: BindingOptions, add: boolean = true ) : void {\n        let addEventListener_Window: Function = add ? windowObject.addEventListener : windowObject.removeEventListener;\n        let addEventListener_Document: Function = add ? documentObject.addEventListener : documentObject.removeEventListener;\n\n        addEventListener_Window( \"mousemove\", function() {\n            hideToolTip( bindingOptions );\n        } );\n\n        addEventListener_Document( \"scroll\", function() {\n            hideToolTip( bindingOptions );\n        } );\n    }\n\n    function addToolTip( element: HTMLElement, bindingOptions: BindingOptions, text: string ) : void {\n        if ( element !== null ) {\n            element.onmousemove = function( e ) {\n                showToolTip( e, bindingOptions, text );\n            };\n        }\n    }\n\n    function showToolTip( e: any, bindingOptions: BindingOptions, text: string ) : void {\n        cancelBubble( e );\n        hideToolTip( bindingOptions );\n\n        bindingOptions._currentView.tooltipTimer = setTimeout( function() {\n            bindingOptions._currentView.tooltip.innerHTML = text;\n            bindingOptions._currentView.tooltip.style.display = \"block\";\n\n            showElementAtMousePosition( e, bindingOptions._currentView.tooltip );\n        }, bindingOptions.tooltip.delay );\n    }\n\n    function hideToolTip( bindingOptions: BindingOptions ) : void {\n        if ( isDefined( bindingOptions._currentView.tooltip ) ) {\n            if ( isDefined( bindingOptions._currentView.tooltipTimer ) ) {\n                clearTimeout( bindingOptions._currentView.tooltipTimer );\n                bindingOptions._currentView.tooltipTimer = null;\n            }\n    \n            if ( bindingOptions._currentView.tooltip.style.display !== \"none\" ) {\n                bindingOptions._currentView.tooltip.style.display = \"none\";\n            }\n        }\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Render:  Title Bar\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function renderControlTitleBar( bindingOptions: BindingOptions ) : void {\n        if ( bindingOptions.title.showText || bindingOptions.title.showYearSelector || bindingOptions.title.showRefreshButton || bindingOptions.title.showExportButton || bindingOptions.title.showImportButton ) {\n            const titleBar: HTMLElement = createElement( bindingOptions._currentView.element, \"div\", \"title-bar\" );\n            const title: HTMLElement = createElement( titleBar, \"div\", \"title\" );\n\n            if ( bindingOptions.views.chart.enabled || bindingOptions.views.days.enabled || bindingOptions.views.statistics.enabled ) {\n                if ( bindingOptions.title.showTitleDropDownButton ) {\n                    createElement( title, \"div\", \"down-arrow\" );\n                }\n                \n            } else {\n                addClass( title, \"no-click\" );\n            }\n\n            if ( bindingOptions.title.showText ) {\n                title.innerHTML += bindingOptions.title.text;\n            }\n\n            if ( bindingOptions.views.chart.enabled || bindingOptions.views.days.enabled || bindingOptions.views.statistics.enabled ) {\n                renderTitleDropDownMenu( bindingOptions, title );\n            }\n\n            if ( bindingOptions.title.showImportButton && !bindingOptions._currentView.isInFetchMode ) {\n                const importData: HTMLElement = createElementWithHTML( titleBar, \"button\", \"import\", _configuration.importButtonText );\n        \n                importData.onclick = function() {\n                    importFromFilesSelected( bindingOptions );\n                };\n            }\n\n            if ( bindingOptions.title.showExportButton ) {\n                const exportData: HTMLElement = createElementWithHTML( titleBar, \"button\", \"export\", _configuration.exportButtonText );\n        \n                exportData.onclick = function() {\n                    exportAllData( bindingOptions );\n                };\n            }\n\n            if ( bindingOptions.title.showRefreshButton ) {\n                const refresh: HTMLElement = createElementWithHTML( titleBar, \"button\", \"refresh\", _configuration.refreshButtonText );\n        \n                refresh.onclick = function() {\n                    renderControlContainer( bindingOptions );\n                    fireCustomTriggerEvent( bindingOptions.events.onRefresh, bindingOptions._currentView.element );\n                };\n            }\n    \n            if ( bindingOptions.title.showYearSelector ) {\n                const back: any = createElementWithHTML( titleBar, \"button\", \"back\", _configuration.backButtonText );\n        \n                back.onclick = function() {\n                    moveToPreviousYear( bindingOptions );\n                };\n\n                if ( isFirstVisibleYear( bindingOptions, bindingOptions._currentView.year ) ) {\n                    back.disabled = true;\n                }\n\n                bindingOptions._currentView.yearText = createElementWithHTML( titleBar, \"div\", \"year-text\", bindingOptions._currentView.year.toString() );\n\n                if ( bindingOptions.title.showYearSelectionDropDown ) {\n                    renderYearDropDownMenu( bindingOptions );\n                } else {\n                    addClass( bindingOptions._currentView.yearText, \"no-click\" );\n                }\n\n                if ( bindingOptions.title.showConfigurationButton ) {\n                    let configureButton: HTMLElement = createElement( titleBar, \"div\", \"configure\" );\n\n                    addToolTip( configureButton, bindingOptions, _configuration.configurationToolTipText );\n\n                    configureButton.onclick = function() {\n                        showConfigurationDialog( bindingOptions );\n                    };\n                }\n\n                const next: any = createElementWithHTML( titleBar, \"button\", \"next\", _configuration.nextButtonText );\n\n                next.onclick = function() {\n                    moveToNextYear( bindingOptions );\n                };\n\n                if ( isLastVisibleYear( bindingOptions, bindingOptions._currentView.year ) ) {\n                    next.disabled = true;\n                }\n            }\n        }\n    }\n\n    function renderTitleDropDownMenu( bindingOptions: BindingOptions, title: HTMLElement ) : void {\n        const titlesMenuContainer: HTMLElement = createElement( title, \"div\", \"titles-menu-container\" );\n        const titlesMenu: HTMLElement = createElement( titlesMenuContainer, \"div\", \"titles-menu\" );\n        \n        if ( bindingOptions.title.showTitleDropDownHeaders ) {\n            createElementWithHTML( titlesMenu, \"div\", \"title-menu-header\", _configuration.dataText + STRING.colon );\n        }\n\n        const menuItemMap: HTMLElement = createElementWithHTML( titlesMenu, \"div\", \"title-menu-item\", _configuration.mapText );\n            \n        renderTitleDropDownMenuItemClickEvent( bindingOptions, menuItemMap, VIEW_ID.map, VIEW_NAME.map );\n\n        if ( bindingOptions.views.chart.enabled ) {\n            const menuItemChart = createElementWithHTML( titlesMenu, \"div\", \"title-menu-item\", _configuration.chartText );\n\n            renderTitleDropDownMenuItemClickEvent( bindingOptions, menuItemChart, VIEW_ID.chart, VIEW_NAME.chart );\n        }\n\n        if ( bindingOptions.views.days.enabled ) {\n            if ( bindingOptions.title.showTitleDropDownHeaders ) {\n                createElementWithHTML( titlesMenu, \"div\", \"title-menu-header\", _configuration.yearText + STRING.colon );\n            }\n\n            const menuItemDays: HTMLElement = createElementWithHTML( titlesMenu, \"div\", \"title-menu-item\", _configuration.daysText );\n\n            renderTitleDropDownMenuItemClickEvent( bindingOptions, menuItemDays, VIEW_ID.days, VIEW_NAME.days );\n        }\n\n        if ( bindingOptions.views.statistics.enabled ) {\n            if ( bindingOptions.title.showTitleDropDownHeaders ) {\n                createElementWithHTML( titlesMenu, \"div\", \"title-menu-header\", _configuration.statisticsText + STRING.colon );\n            }\n\n            const menuItemStatistics: HTMLElement = createElementWithHTML( titlesMenu, \"div\", \"title-menu-item\", _configuration.colorRangesText );\n\n            renderTitleDropDownMenuItemClickEvent( bindingOptions, menuItemStatistics, VIEW_ID.statistics, VIEW_NAME.statistics );\n        }\n    }\n\n    function renderTitleDropDownMenuItemClickEvent( bindingOptions: BindingOptions, option: HTMLElement, view: number, viewName: string ) : void {\n        if ( bindingOptions._currentView.view === view ) {\n            addClass( option, \"title-menu-item-active\" );\n            \n        } else {\n            option.onclick = function() {\n                bindingOptions._currentView.view = view;\n\n                fireCustomTriggerEvent( bindingOptions.events.onViewSwitch, viewName );\n                renderControlContainer( bindingOptions, false, true );\n            };\n        }\n    }\n\n    function renderYearDropDownMenu( bindingOptions: BindingOptions ) : void {\n        createElement( bindingOptions._currentView.yearText, \"div\", \"down-arrow\" );\n\n        const yearsMenuContainer: HTMLElement = createElement( bindingOptions._currentView.yearText, \"div\", \"years-menu-container\" );\n        const yearsMenu: HTMLElement = createElement( yearsMenuContainer, \"div\", \"years-menu\" );\n        const thisYear: number = new Date().getFullYear();\n        let activeYearMenuItem: HTMLElement = null;\n\n        yearsMenuContainer.style.display = \"block\";\n        yearsMenuContainer.style.visibility = \"hidden\";\n\n        for ( let currentYear: number = thisYear - bindingOptions.title.extraSelectionYears; currentYear < thisYear + bindingOptions.title.extraSelectionYears; currentYear++ ) {\n            if ( isYearVisible( bindingOptions, currentYear ) ) {\n                let yearMenuItem: HTMLElement = renderYearDropDownMenuItem( bindingOptions, yearsMenu, currentYear, thisYear );\n\n                if ( !isDefined( activeYearMenuItem ) ) {\n                    activeYearMenuItem = yearMenuItem;\n                }\n            }\n        }\n\n        if ( isDefined( activeYearMenuItem ) ) {\n            yearsMenu.scrollTop = activeYearMenuItem.offsetTop - ( yearsMenu.offsetHeight / 2 );\n        }\n\n        yearsMenuContainer.style.display = \"none\";\n        yearsMenuContainer.style.visibility = \"visible\";\n    }\n\n    function renderYearDropDownMenuItem( bindingOptions: BindingOptions, years: HTMLElement, currentYear: number, actualYear: number ) : HTMLElement {\n        let result: HTMLElement = null;\n        const year: HTMLElement = createElementWithHTML( years, \"div\", \"year-menu-item\", currentYear.toString() );\n\n        if ( bindingOptions._currentView.year !== currentYear ) {\n            year.onclick = function() {\n                bindingOptions._currentView.year = currentYear;\n    \n                renderControlContainer( bindingOptions );\n                fireCustomTriggerEvent( bindingOptions.events.onSetYear, bindingOptions._currentView.year );\n            };\n\n            if ( currentYear === actualYear ) {\n                addClass( year, \"year-menu-item-current\" );\n            }\n\n        } else {\n            addClass( year, \"year-menu-item-active\" );\n            result = year;\n        }\n\n        return result;\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Render:  View:  Map\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function renderControlMap( bindingOptions: BindingOptions, isForViewSwitch: boolean ) : void {\n        bindingOptions._currentView.mapContents = createElement( bindingOptions._currentView.element, \"div\", \"map-contents\" );\n\n        if ( bindingOptions.views.chart.enabled ) {\n            renderControlChartContents( bindingOptions );\n        }\n\n        if ( bindingOptions.views.days.enabled ) {\n            renderControlDaysContents( bindingOptions );\n        }\n        \n        if ( bindingOptions.views.statistics.enabled ) {\n            renderControlStatisticsContents( bindingOptions );\n        }\n\n        renderControlViewGuide( bindingOptions );\n\n        if ( bindingOptions.views.map.showNoDataMessageWhenDataIsNotAvailable && !isDataAvailableForYear( bindingOptions ) ) {\n            const noDataMessage: HTMLElement = createElementWithHTML( bindingOptions._currentView.mapContents, \"div\", \"no-data-message\", _configuration.noMapDataMessage );\n\n            if ( isForViewSwitch ) {\n                addClass( noDataMessage, \"view-switch\" );\n            }\n\n        } else {\n            bindingOptions._currentView.mapContents.style.minHeight = \"unset\";\n\n            makeAreaDroppable( bindingOptions._currentView.mapContents, bindingOptions );\n\n            const map: HTMLElement = createElement( bindingOptions._currentView.mapContents, \"div\", \"map\" );\n            const currentYear: number = bindingOptions._currentView.year;\n            let monthAdded: boolean = false;\n    \n            if ( isForViewSwitch ) {\n                addClass( map, \"view-switch\" );\n            }\n    \n            if ( bindingOptions.views.map.showDayNames ) {\n                const days: HTMLElement = createElement( map, \"div\", \"days\" );\n                const showMinimalDays: boolean = bindingOptions.views.map.showMinimalDayNames && bindingOptions.views.map.daysToShow.length === 7;\n    \n                if ( !bindingOptions.views.map.showMonthNames || bindingOptions.views.map.placeMonthNamesOnTheBottom ) {\n                    days.className = \"days-months-bottom\";\n                }\n        \n                for ( let dayNameIndex: number = 0; dayNameIndex < 7; dayNameIndex++ ) {\n                    if ( isDayVisible( bindingOptions.views.map.daysToShow, dayNameIndex + 1 ) ) {\n                        const dayText: string = !showMinimalDays || dayNameIndex % 3 === 0 ? _configuration.dayNames[ dayNameIndex ] : STRING.space;\n\n                        createElementWithHTML( days, \"div\", \"day-name\", dayText );\n                    }\n                }\n    \n                if ( bindingOptions.views.map.showDaysInReverseOrder ) {\n                    reverseElementsOrder( days );\n                }\n            }\n    \n            const months: HTMLElement = createElement( map, \"div\", \"months\" );\n            const colorRanges: ColorRange[] = getSortedColorRanges( bindingOptions );\n    \n            for ( let monthIndex: number = 0; monthIndex < 12; monthIndex++ ) {\n                if ( isMonthVisible( bindingOptions.views.map.monthsToShow, monthIndex ) ) {\n                    const month: HTMLElement = createElement( months, \"div\", \"month\" );\n                    const dayColumns: HTMLElement = createElement( month, \"div\", \"day-columns\" );\n                    let totalDaysInMonth: number = getTotalDaysInMonth( currentYear, monthIndex );\n                    let currentDayColumn: HTMLElement = createElement( dayColumns, \"div\", \"day-column\" );\n                    let startFillingDays: boolean = false;\n                    const firstDayInMonth: Date = new Date( currentYear, monthIndex, 1 );\n                    const firstDayNumberInMonth: number = getWeekdayNumber( firstDayInMonth );\n                    let actualDay: number = 1;\n        \n                    totalDaysInMonth += firstDayNumberInMonth;\n        \n                    for ( let dayIndex: number = 0; dayIndex < totalDaysInMonth; dayIndex++ ) {\n                        if ( dayIndex >= firstDayNumberInMonth ) {\n                            startFillingDays = true;\n        \n                        } else {\n                            if ( isDayVisible( bindingOptions.views.map.daysToShow, actualDay ) ) {\n                                createElement( currentDayColumn, \"div\", \"day-disabled\" );\n                            }\n                        }\n        \n                        if ( startFillingDays ) {\n                            let day: HTMLElement = null;\n    \n                            if ( isDayVisible( bindingOptions.views.map.daysToShow, actualDay ) ) {\n                                day = renderControlMapMonthDay( bindingOptions, currentDayColumn, dayIndex - firstDayNumberInMonth, monthIndex, currentYear, colorRanges );\n                            }\n            \n                            if ( ( dayIndex + 1 ) % 7 === 0 ) {\n                                if ( bindingOptions.views.map.showDaysInReverseOrder ) {\n                                    reverseElementsOrder( currentDayColumn );\n                                }\n    \n                                currentDayColumn = createElement( dayColumns, \"div\", \"day-column\" );\n                                actualDay = 0;\n    \n                                if ( !isDefined( _elements_Day_Width ) && isDefined( day ) ) {\n                                    let marginLeft: number = getStyleValueByName( day, \"margin-left\", true );\n                                    let marginRight: number = getStyleValueByName( day, \"margin-right\", true );\n                                    \n                                    _elements_Day_Width = day.offsetWidth + marginLeft + marginRight;\n                                }\n                            }\n                        }\n    \n                        actualDay++;\n                    }\n    \n                    if ( bindingOptions.views.map.showMonthNames ) {\n                        let monthName: HTMLElement = null;\n                        const monthWidth: number = month.offsetWidth;\n    \n                        if ( !bindingOptions.views.map.placeMonthNamesOnTheBottom ) {\n                            monthName = createElementWithHTML( month, \"div\", \"month-name\", _configuration.monthNames[ monthIndex ], dayColumns );\n                        } else {\n                            monthName = createElementWithHTML( month, \"div\", \"month-name-bottom\", _configuration.monthNames[ monthIndex ] );\n                        }\n    \n                        if ( isDefined( monthName ) ) {\n                            if ( bindingOptions.views.map.showMonthDayGaps ) {\n                                monthName.style.width = monthWidth + \"px\";\n                            } else {\n                                monthName.style.width = ( monthWidth - _elements_Day_Width ) + \"px\";\n                            }\n                        }\n                    }\n    \n                    if ( monthAdded && isDefined( _elements_Day_Width ) ) {\n                        if ( firstDayNumberInMonth > 0 && !bindingOptions.views.map.showMonthDayGaps ) {\n                            month.style.marginLeft = -_elements_Day_Width + \"px\";\n                        } else if ( firstDayNumberInMonth === 0 && bindingOptions.views.map.showMonthDayGaps ) {\n                            month.style.marginLeft = _elements_Day_Width + \"px\";\n                        }\n                    }\n\n                    if ( bindingOptions.views.map.showMonthsInReverseOrder ) {\n                        reverseElementsOrder( dayColumns );\n                    }\n    \n                    monthAdded = true;\n                }\n            }\n\n            if ( bindingOptions.views.map.showMonthsInReverseOrder ) {\n                reverseElementsOrder( months );\n            }\n            \n            if ( bindingOptions.views.map.keepScrollPositions ) {\n                bindingOptions._currentView.mapContents.scrollLeft = bindingOptions._currentView.mapContentsScrollLeft;\n            }\n        }\n    }\n\n    function renderControlMapMonthDay( bindingOptions: BindingOptions, currentDayColumn: HTMLElement, dayNumber: number, month: number, year: number, colorRanges: ColorRange[] ) : HTMLElement {\n        const actualDay: number = dayNumber + 1;\n        const day: HTMLElement = createElement( currentDayColumn, \"div\", \"day\" );\n        const date: Date = new Date( year, month, actualDay );\n        let dateCount: number = _elements_DateCounts[ bindingOptions._currentView.element.id ].type[ bindingOptions._currentView.type ][ toStorageDate( date ) ];\n\n        dateCount = getDefaultNumber( dateCount, 0 );\n\n        renderDayToolTip( bindingOptions, day, date, dateCount );\n\n        if ( bindingOptions.views.map.showDayNumbers && dateCount > 0 ) {\n            day.innerHTML = dateCount.toString();\n        }\n\n        if ( isDefinedFunction( bindingOptions.events.onDayClick ) ) {\n            day.onclick = function() {\n                fireCustomTriggerEvent( bindingOptions.events.onDayClick, date, dateCount );\n            };\n\n        } else {\n            addClass( day, \"no-hover\" );\n        }\n\n        const useColorRange: ColorRange = getColorRange( bindingOptions, colorRanges, dateCount, date );\n\n        if ( isDefined( useColorRange ) && isColorRangeVisible( bindingOptions, useColorRange.id ) ) {\n            if ( isDefinedString( useColorRange.mapCssClassName ) ) {\n                addClass( day, useColorRange.mapCssClassName );\n            } else {\n                addClass( day, useColorRange.cssClassName );\n            }\n        }\n\n        return day;\n    }\n\n    function isDataAvailableForYear( bindingOptions: BindingOptions ) : boolean {\n        let result: boolean = false;\n        const data: any = getCurrentViewData( bindingOptions );\n        const checkDate: string = bindingOptions._currentView.year.toString();\n\n        for ( let storageDate in data ) {\n            if ( data.hasOwnProperty( storageDate ) ) {\n                if ( getStorageDateYear( storageDate ) === checkDate ) {\n                    result = true;\n                    break;\n                }\n            }\n        }\n\n        return result;\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Render:  View:  Chart\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function renderControlChartContents( bindingOptions: BindingOptions ) {\n        bindingOptions._currentView.chartContents = createElement( bindingOptions._currentView.element, \"div\", \"chart-contents\" );\n\n        makeAreaDroppable( bindingOptions._currentView.chartContents, bindingOptions );\n    }\n\n    function renderControlChart( bindingOptions: BindingOptions, isForViewSwitch: boolean) : void {\n        const chart: HTMLElement = createElement( bindingOptions._currentView.chartContents, \"div\", \"chart\" );\n        let labels: HTMLElement = createElement( chart, \"div\", \"y-labels\" );\n        const dayLines: HTMLElement = createElement( chart, \"div\", \"day-lines\" );\n        const colorRanges: ColorRange[] = getSortedColorRanges( bindingOptions );\n        const largestValueForCurrentYear: number = getLargestValueForChartYear( bindingOptions );\n        const currentYear: number = bindingOptions._currentView.year;\n        let labelsWidth: number = 0;\n\n        if ( isForViewSwitch ) {\n            addClass( chart, \"view-switch\" );\n        }\n\n        if ( largestValueForCurrentYear > 0 && bindingOptions.views.chart.showChartYLabels ) {\n            const topLabel: HTMLElement = createElementWithHTML( labels, \"div\", \"label-0\", largestValueForCurrentYear.toString() );\n\n            createElementWithHTML( labels, \"div\", \"label-25\", ( mathObject.floor( largestValueForCurrentYear / 4 ) * 3 ).toString() );\n            createElementWithHTML( labels, \"div\", \"label-50\", mathObject.floor( largestValueForCurrentYear / 2 ).toString() );\n            createElementWithHTML( labels, \"div\", \"label-75\", mathObject.floor( largestValueForCurrentYear / 4 ).toString() );\n            createElementWithHTML( labels, \"div\", \"label-100\", STRING.zero );\n\n            labels.style.width = topLabel.offsetWidth + \"px\";\n            labelsWidth = labels.offsetWidth + getStyleValueByName( labels, \"margin-right\", true );\n\n        } else {\n            labels.parentNode.removeChild( labels );\n            labels = null;\n        }\n\n        if ( largestValueForCurrentYear === 0 ) {\n            bindingOptions._currentView.chartContents.style.minHeight = bindingOptions._currentView.mapContents.offsetHeight + \"px\";\n            chart.parentNode.removeChild( chart );\n\n            const noDataMessage: HTMLElement = createElementWithHTML( bindingOptions._currentView.chartContents, \"div\", \"no-data-message\", _configuration.noChartDataMessage );\n\n            if ( isForViewSwitch ) {\n                addClass( noDataMessage, \"view-switch\" );\n            }\n\n        } else {\n            const pixelsPerNumbers: number = bindingOptions._currentView.mapContents.offsetHeight / largestValueForCurrentYear;\n            let totalMonths: number = 0;\n            let totalDays: number = 0;\n\n            for ( let monthIndex1: number = 0; monthIndex1 < 12; monthIndex1++ ) {\n                if ( isMonthVisible( bindingOptions.views.chart.monthsToShow, monthIndex1 ) ) {\n                    const totalDaysInMonth: number = getTotalDaysInMonth( currentYear, monthIndex1 );\n                    let actualDay: number = 1;\n                    \n                    totalMonths++;\n\n                    for ( let dayIndex: number = 0; dayIndex < totalDaysInMonth; dayIndex++ ) {\n                        if ( isDayVisible( bindingOptions.views.chart.daysToShow, actualDay ) ) {\n                            renderControlChartDay( dayLines, bindingOptions, dayIndex + 1, monthIndex1, currentYear, colorRanges, pixelsPerNumbers );\n                        }\n        \n                        if ( ( dayIndex + 1 ) % 7 === 0 ) {\n                            actualDay = 0;\n                        }\n    \n                        actualDay++;\n                        totalDays++;\n                    }\n                }\n            }\n\n            if ( bindingOptions.views.chart.showInReverseOrder ) {\n                reverseElementsOrder( dayLines );\n            }\n\n            if ( bindingOptions.views.chart.showMonthNames ) {\n                const chartMonths: HTMLElement = createElement( bindingOptions._currentView.chartContents, \"div\", \"chart-months\" );\n                const linesWidth: number = dayLines.offsetWidth / totalMonths;\n                let monthTimesValue: number = 0;\n\n                const addMonthName: Function = function( addMonthNameIndex: number ) {\n                    if ( isMonthVisible( bindingOptions.views.chart.monthsToShow, addMonthNameIndex ) ) {\n                        let monthName: HTMLElement = createElementWithHTML( chartMonths, \"div\", \"month-name\", _configuration.monthNames[ addMonthNameIndex ] );\n                        monthName.style.left = labelsWidth + ( linesWidth * monthTimesValue ) + \"px\";\n\n                        monthTimesValue++;\n                    }\n                };\n\n                if ( bindingOptions.views.chart.showInReverseOrder ) {\n                    for ( let monthIndex2: number = 12; monthIndex2--; ) {\n                        addMonthName( monthIndex2 );\n                    }\n                } else {\n                    for ( let monthIndex3: number = 0; monthIndex3 < 12; monthIndex3++ ) {\n                        addMonthName( monthIndex3 );\n                    }\n                }\n\n                chartMonths.style.width = dayLines.offsetWidth + \"px\";\n\n                const monthNameSpace: HTMLElement = createElement( chartMonths, \"div\", \"month-name-space\" );\n                monthNameSpace.style.height = chartMonths.offsetHeight + \"px\";\n                monthNameSpace.style.width = labelsWidth + \"px\";\n            }\n    \n            if ( bindingOptions.views.chart.keepScrollPositions ) {\n                bindingOptions._currentView.chartContents.scrollLeft = bindingOptions._currentView.chartContentsScrollLeft;\n            }\n        }\n    }\n\n    function renderControlChartDay( dayLines: HTMLElement, bindingOptions: BindingOptions, day: number, month: number, year: number, colorRanges: ColorRange[], pixelsPerNumbers: number ) : void {\n        const date: Date = new Date( year, month, day );\n        const dayLine: HTMLElement = createElement( dayLines, \"div\", \"day-line\" );\n        let dateCount: number = getCurrentViewData( bindingOptions )[ toStorageDate( date ) ];\n\n        dateCount = getDefaultNumber( dateCount, 0 );\n\n        renderDayToolTip( bindingOptions, dayLine, date, dateCount );\n\n        if ( bindingOptions.views.chart.showLineNumbers && dateCount > 0 ) {\n            addClass( dayLine, \"day-line-number\" );\n\n            dayLine.innerHTML = dateCount.toString();\n        }\n\n        const dayLineHeight: number = dateCount * pixelsPerNumbers;\n        dayLine.style.height = dayLineHeight + \"px\";\n\n        if ( dayLineHeight <= 0 ) {\n            dayLine.style.visibility = \"hidden\";\n        }\n\n        if ( isDefinedFunction( bindingOptions.events.onDayClick ) ) {\n            dayLine.onclick = function() {\n                fireCustomTriggerEvent( bindingOptions.events.onDayClick, date, dateCount );\n            };\n\n        } else {\n            addClass( dayLine, \"no-hover\" );\n        }\n\n        const useColorRange: ColorRange = getColorRange( bindingOptions, colorRanges, dateCount, date );\n\n        if ( isDefined( useColorRange ) && isColorRangeVisible( bindingOptions, useColorRange.id ) ) {\n            if ( isDefinedString( useColorRange.chartCssClassName ) ) {\n                addClass( dayLine, useColorRange.chartCssClassName );\n            } else {\n                addClass( dayLine, useColorRange.cssClassName );\n            }\n        }\n    }\n\n    function getLargestValueForChartYear( bindingOptions: BindingOptions ) : number {\n        let result: number = 0;\n        const data: any = getCurrentViewData( bindingOptions );\n\n        for ( let monthIndex: number = 0; monthIndex < 12; monthIndex++ ) {\n            const totalDaysInMonth: number = getTotalDaysInMonth( bindingOptions._currentView.year, monthIndex );\n    \n            for ( let dayIndex: number = 0; dayIndex < totalDaysInMonth; dayIndex++ ) {\n                const storageDate: string = toStorageDate( new Date( bindingOptions._currentView.year, monthIndex, dayIndex + 1 ) );\n\n                if ( data.hasOwnProperty( storageDate ) ) {\n                    if ( isMonthVisible( bindingOptions.views.chart.monthsToShow, monthIndex ) && isDayVisible( bindingOptions.views.chart.daysToShow, dayIndex + 1 ) ) {\n                        result = mathObject.max( result, parseInt( data[ storageDate ] ) );\n                    }\n                }\n            }\n        }\n\n        return result;\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Render:  View:  Days\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function renderControlDaysContents( bindingOptions: BindingOptions ) : void {\n        bindingOptions._currentView.daysContents = createElement( bindingOptions._currentView.element, \"div\", \"days-contents\" );\n\n        makeAreaDroppable( bindingOptions._currentView.daysContents, bindingOptions );\n    }\n\n    function renderControlDays( bindingOptions: BindingOptions, isForViewSwitch: boolean ) : void {\n        const days: HTMLElement = createElement( bindingOptions._currentView.daysContents, \"div\", \"days\" );\n        const dayNames: HTMLElement = createElement( bindingOptions._currentView.daysContents, \"div\", \"day-names\" );\n        let labels: HTMLElement = createElement( days, \"div\", \"y-labels\" );\n        const dayLines: HTMLElement = createElement( days, \"div\", \"day-lines\" );\n        const dayValuesForCurrentYear: any = getLargestValuesForEachDay( bindingOptions );\n\n        if ( isForViewSwitch ) {\n            addClass( days, \"view-switch\" );\n        }\n\n        if ( dayValuesForCurrentYear.largestValue > 0 && bindingOptions.views.days.showChartYLabels ) {\n            const topLabel: HTMLElement = createElementWithHTML( labels, \"div\", \"label-0\", dayValuesForCurrentYear.largestValue.toString() );\n\n            createElementWithHTML( labels, \"div\", \"label-25\", ( mathObject.floor( dayValuesForCurrentYear.largestValue / 4 ) * 3 ).toString() );\n            createElementWithHTML( labels, \"div\", \"label-50\", mathObject.floor( dayValuesForCurrentYear.largestValue / 2 ).toString() );\n            createElementWithHTML( labels, \"div\", \"label-75\", mathObject.floor( dayValuesForCurrentYear.largestValue / 4 ).toString() );\n            createElementWithHTML( labels, \"div\", \"label-100\", STRING.zero );\n\n            labels.style.width = topLabel.offsetWidth + \"px\";\n            dayNames.style.paddingLeft = labels.offsetWidth + getStyleValueByName( labels, \"margin-right\", true ) + \"px\";\n\n        } else {\n            labels.parentNode.removeChild( labels );\n            labels = null;\n        }\n\n        if ( dayValuesForCurrentYear.largestValue === 0 ) {\n            bindingOptions._currentView.daysContents.style.minHeight = bindingOptions._currentView.mapContents.offsetHeight + \"px\";\n            days.parentNode.removeChild( days );\n            dayNames.parentNode.removeChild( dayNames );\n\n            const noDataMessage: HTMLElement = createElementWithHTML( bindingOptions._currentView.daysContents, \"div\", \"no-days-message\", _configuration.noDaysDataMessage );\n\n            if ( isForViewSwitch ) {\n                addClass( noDataMessage, \"view-switch\" );\n            }\n\n        } else {\n            const pixelsPerNumbers: number = bindingOptions._currentView.mapContents.offsetHeight / dayValuesForCurrentYear.largestValue;\n\n            for ( let day in dayValuesForCurrentYear.days ) {\n                if ( dayValuesForCurrentYear.days.hasOwnProperty( day ) && isDayVisible( bindingOptions.views.days.daysToShow, parseInt( day ) ) ) {\n                    renderControlDaysDayLine( dayLines, parseInt( day ), dayValuesForCurrentYear.days[ day ], bindingOptions, pixelsPerNumbers );\n\n                    if ( bindingOptions.views.days.showDayNames ) {\n                        createElementWithHTML( dayNames, \"div\", \"day-name\", _configuration.dayNames[ parseInt( day ) - 1 ] );\n                    }\n                }\n            }\n\n            if ( bindingOptions.views.days.showInReverseOrder ) {\n                reverseElementsOrder( dayLines );\n                reverseElementsOrder( dayNames );\n            }\n\n            if ( bindingOptions.views.days.keepScrollPositions ) {\n                bindingOptions._currentView.daysContents.scrollLeft = bindingOptions._currentView.daysContentsScrollLeft;\n            }\n        }\n    }\n\n    function renderControlDaysDayLine( dayLines: HTMLElement, dayNumber: number, dayCount: number, bindingOptions: BindingOptions, pixelsPerNumbers: number ) : void {\n        const dayLine: HTMLElement = createElement( dayLines, \"div\", \"day-line\" );\n        const dayLineHeight: number = dayCount * pixelsPerNumbers;\n\n        dayLine.style.height = dayLineHeight + \"px\";\n\n        if ( dayLineHeight <= 0 ) {\n            dayLine.style.visibility = \"hidden\";\n        }\n        \n        addToolTip( dayLine, bindingOptions, dayCount.toString() );\n\n        if ( isDefinedFunction( bindingOptions.events.onWeekDayClick ) ) {\n            dayLine.onclick = function() {\n                fireCustomTriggerEvent( bindingOptions.events.onWeekDayClick, dayNumber, dayCount );\n            };\n\n        } else {\n            addClass( dayLine, \"no-hover\" );\n        }\n\n        if ( bindingOptions.views.days.showDayNumbers && dayCount > 0 ) {\n            addClass( dayLine, \"day-line-number\" );\n\n            createElementWithHTML( dayLine, \"div\", \"count\", dayCount.toString() );\n        }\n    }\n\n    function getLargestValuesForEachDay( bindingOptions: BindingOptions ) : any {\n        let largestValue: number = 0;\n        const data: any = getCurrentViewData( bindingOptions );\n\n        const days : object = {\n            1: 0,\n            2: 0,\n            3: 0,\n            4: 0,\n            5: 0,\n            6: 0,\n            7: 0,\n        };\n\n        for ( let monthIndex: number = 0; monthIndex < 12; monthIndex++ ) {\n            const totalDaysInMonth: number = getTotalDaysInMonth( bindingOptions._currentView.year, monthIndex );\n    \n            for ( let dayIndex: number = 0; dayIndex < totalDaysInMonth; dayIndex++ ) {\n                const storageDate: string = toStorageDate( new Date( bindingOptions._currentView.year, monthIndex, dayIndex + 1 ) );\n\n                if ( data.hasOwnProperty( storageDate ) ) {\n                    const storageDateParts: string[] = getStorageDate( storageDate );\n                    const storageDateObject: Date = new Date( parseInt( storageDateParts[ 2 ] ), parseInt( storageDateParts[ 1 ] ), parseInt( storageDateParts[ 0 ] ) );\n                    const weekDayNumber: number = getWeekdayNumber( storageDateObject ) + 1;\n\n                    if ( !isHoliday( bindingOptions, storageDateObject ).matched && isMonthVisible( bindingOptions.views.days.monthsToShow, storageDateObject.getMonth() ) && isDayVisible( bindingOptions.views.days.daysToShow, weekDayNumber ) ) {\n                        days[ weekDayNumber ] += data[ storageDate ];\n\n                        largestValue = mathObject.max( largestValue, days[ weekDayNumber ] );\n                    }\n                }\n            }\n        }\n\n        return {\n            days: days,\n            largestValue: largestValue\n        };\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Render:  View:  Statistics\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function renderControlStatisticsContents( bindingOptions: BindingOptions ) : void {\n        bindingOptions._currentView.statisticsContents = createElement( bindingOptions._currentView.element, \"div\", \"statistics-contents\" );\n\n        makeAreaDroppable( bindingOptions._currentView.statisticsContents, bindingOptions );\n    }\n\n    function renderControlStatistics( bindingOptions: BindingOptions, isForViewSwitch: boolean ) : void {\n        const statistics: HTMLElement = createElement( bindingOptions._currentView.statisticsContents, \"div\", \"statistics\" );\n        const statisticsRanges: HTMLElement = createElement( bindingOptions._currentView.statisticsContents, \"div\", \"statistics-ranges\" );\n        let labels: HTMLElement = createElement( statistics, \"div\", \"y-labels\" );\n        const rangeLines: HTMLElement = createElement( statistics, \"div\", \"range-lines\" );\n        const colorRanges: ColorRange[] = getSortedColorRanges( bindingOptions );\n        const colorRangeValuesForCurrentYear = getLargestValuesForEachRangeType( bindingOptions, colorRanges );\n\n        if ( isForViewSwitch ) {\n            addClass( statistics, \"view-switch\" );\n        }\n\n        if ( colorRangeValuesForCurrentYear.largestValue > 0 && bindingOptions.views.statistics.showChartYLabels ) {\n            const topLabel: HTMLElement = createElementWithHTML( labels, \"div\", \"label-0\", colorRangeValuesForCurrentYear.largestValue.toString() );\n\n            createElementWithHTML( labels, \"div\", \"label-25\", ( mathObject.floor( colorRangeValuesForCurrentYear.largestValue / 4 ) * 3 ).toString() );\n            createElementWithHTML( labels, \"div\", \"label-50\", mathObject.floor( colorRangeValuesForCurrentYear.largestValue / 2 ).toString() );\n            createElementWithHTML( labels, \"div\", \"label-75\", mathObject.floor( colorRangeValuesForCurrentYear.largestValue / 4 ).toString() );\n            createElementWithHTML( labels, \"div\", \"label-100\", STRING.zero );\n\n            labels.style.width = topLabel.offsetWidth + \"px\";\n            statisticsRanges.style.paddingLeft = labels.offsetWidth + getStyleValueByName( labels, \"margin-right\", true ) + \"px\";\n\n        } else {\n            labels.parentNode.removeChild( labels );\n            labels = null;\n        }\n\n        if ( colorRangeValuesForCurrentYear.largestValue === 0 ) {\n            bindingOptions._currentView.statisticsContents.style.minHeight = bindingOptions._currentView.mapContents.offsetHeight + \"px\";\n            statistics.parentNode.removeChild( statistics );\n            statisticsRanges.parentNode.removeChild( statisticsRanges );\n\n            const noDataMessage: HTMLElement = createElementWithHTML( bindingOptions._currentView.statisticsContents, \"div\", \"no-statistics-message\", _configuration.noStatisticsDataMessage );\n\n            if ( isForViewSwitch ) {\n                addClass( noDataMessage, \"view-switch\" );\n            }\n\n        } else {\n            const pixelsPerNumbers: number = bindingOptions._currentView.mapContents.offsetHeight / colorRangeValuesForCurrentYear.largestValue;\n\n            if ( !bindingOptions.views.statistics.showColorRangeLabels ) {\n                statisticsRanges.parentNode.removeChild( statisticsRanges );\n            }\n\n            for ( let type in colorRangeValuesForCurrentYear.types ) {\n                if ( colorRangeValuesForCurrentYear.types.hasOwnProperty( type ) ) {\n                    renderControlStatisticsRangeLine( parseInt( type ), rangeLines, colorRangeValuesForCurrentYear.types[ type ], bindingOptions, colorRanges, pixelsPerNumbers );\n\n                    const useColorRange: ColorRange = getColorRangeByMinimum( colorRanges, parseInt( type ) );\n\n                    if ( bindingOptions.views.statistics.showColorRangeLabels ) {\n                        if ( !bindingOptions.views.statistics.useColorRangeNamesForLabels || !isDefined( useColorRange ) || !isDefinedString( useColorRange.name ) ) {\n                            createElementWithHTML( statisticsRanges, \"div\", \"range-name\", type + STRING.plus );\n                        } else {\n                            createElementWithHTML( statisticsRanges, \"div\", \"range-name\", useColorRange.name );\n                        }\n                    }\n                }\n            }\n\n            if ( bindingOptions.views.statistics.showInReverseOrder ) {\n                reverseElementsOrder( rangeLines );\n                reverseElementsOrder( statisticsRanges );\n            }\n    \n            if ( bindingOptions.views.statistics.keepScrollPositions ) {\n                bindingOptions._currentView.statisticsContents.scrollLeft = bindingOptions._currentView.statisticsContentsScrollLeft;\n            }\n        }\n    }\n\n    function renderControlStatisticsRangeLine( colorRangeMinimum: number, dayLines: HTMLElement, rangeCount: number, bindingOptions: BindingOptions, colorRanges: ColorRange[], pixelsPerNumbers: number ) : void {\n        const rangeLine: HTMLElement = createElement( dayLines, \"div\", \"range-line\" );\n        const useColorRange: ColorRange = getColorRangeByMinimum( colorRanges, colorRangeMinimum );\n        const rangeLineHeight: number = rangeCount * pixelsPerNumbers;\n\n        rangeLine.style.height = rangeLineHeight + \"px\";\n\n        if ( rangeLineHeight <= 0 ) {\n            rangeLine.style.visibility = \"hidden\";\n        }\n        \n        addToolTip( rangeLine, bindingOptions, rangeCount.toString() );\n\n        if ( bindingOptions.views.statistics.showRangeNumbers && rangeCount > 0 ) {\n            addClass( rangeLine, \"range-line-number\" );\n\n            createElementWithHTML( rangeLine, \"div\", \"count\", rangeCount.toString() );\n        }\n\n        if ( isDefinedFunction( bindingOptions.events.onStatisticClick ) ) {\n            rangeLine.onclick = function() {\n                fireCustomTriggerEvent( bindingOptions.events.onStatisticClick, useColorRange );\n            };\n\n        } else {\n            addClass( rangeLine, \"no-hover\" );\n        }\n\n        if ( isDefined( useColorRange ) && isColorRangeVisible( bindingOptions, useColorRange.id ) ) {\n            if ( isDefinedString( useColorRange.statisticsCssClassName ) ) {\n                addClass( rangeLine, useColorRange.statisticsCssClassName );\n            } else {\n                addClass( rangeLine, useColorRange.cssClassName );\n            }\n        }\n    }\n\n    function getLargestValuesForEachRangeType( bindingOptions: BindingOptions, colorRanges: ColorRange[] ) : any {\n        const types: object = {};\n        const data: any = getCurrentViewData( bindingOptions );\n        let largestValue: number = 0;\n\n        types[ STRING.zero ] = 0;\n\n        for ( let monthIndex: number = 0; monthIndex < 12; monthIndex++ ) {\n            const totalDaysInMonth: number = getTotalDaysInMonth( bindingOptions._currentView.year, monthIndex );\n    \n            for ( let dayIndex: number = 0; dayIndex < totalDaysInMonth; dayIndex++ ) {\n                const storageDate: string = toStorageDate( new Date( bindingOptions._currentView.year, monthIndex, dayIndex + 1 ) );\n\n                if ( data.hasOwnProperty( storageDate ) ) {\n                    const storageDateParts: string[] = getStorageDate( storageDate );\n                    const storageDateObject: Date = new Date( parseInt( storageDateParts[ 2 ] ), parseInt( storageDateParts[ 1 ] ), parseInt( storageDateParts[ 0 ] ) );\n                    const weekDayNumber: number = getWeekdayNumber( storageDateObject ) + 1;\n\n                    if ( !isHoliday( bindingOptions, storageDateObject ).matched && isMonthVisible( bindingOptions.views.statistics.monthsToShow, storageDateObject.getMonth() ) && isDayVisible( bindingOptions.views.statistics.daysToShow, weekDayNumber ) ) {\n                        const useColorRange: ColorRange = getColorRange( bindingOptions, colorRanges, data[ storageDate ] );\n\n                        if ( !isDefined( useColorRange ) ) {\n                            types[ STRING.zero ]++;\n    \n                        } else {\n                            if ( !types.hasOwnProperty( useColorRange.minimum.toString() ) ) {\n                                types[ useColorRange.minimum.toString() ] = 0;\n                            }\n    \n                            types[ useColorRange.minimum ]++;\n                            \n                            largestValue = mathObject.max( largestValue, types[ useColorRange.minimum ] );\n                        }\n                    }\n                }\n            }\n        }\n\n        return {\n            types: types,\n            largestValue: largestValue\n        };\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Render:  Guide\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function renderControlViewGuide( bindingOptions: BindingOptions ) : void {\n        const guide: HTMLElement = createElement( bindingOptions._currentView.element, \"div\", \"guide\" )\n        const mapTypes: HTMLElement = createElement( guide, \"div\", \"map-types\" );\n        let noneTypeCount: number = 0;\n\n        for ( let storageDate in _elements_DateCounts[ bindingOptions._currentView.element.id ].type[ _configuration.unknownTrendText ] ) {\n            if ( _elements_DateCounts[ bindingOptions._currentView.element.id ].type[ _configuration.unknownTrendText ].hasOwnProperty( storageDate ) ) {\n                noneTypeCount++;\n                break;\n            }\n        }\n\n        if ( _elements_DateCounts[ bindingOptions._currentView.element.id ].types > 1 ) {\n            if ( isDefinedString( bindingOptions.description.text ) ) {\n                const description: HTMLElement = createElement( bindingOptions._currentView.element, \"div\", \"description\", guide );\n    \n                renderDescription( bindingOptions, description );\n            }\n\n            for ( let type in _elements_DateCounts[ bindingOptions._currentView.element.id ].type ) {\n                if ( type !== _configuration.unknownTrendText || noneTypeCount > 0 ) {\n                    if ( noneTypeCount === 0 && bindingOptions._currentView.type === _configuration.unknownTrendText ) {\n                        bindingOptions._currentView.type = type;\n                    }\n\n                    renderControlViewGuideTypeButton( bindingOptions, mapTypes, type );\n                }\n            }\n\n        } else {\n            renderDescription( bindingOptions, mapTypes );\n        }\n\n        if ( bindingOptions.guide.enabled ) {\n            const mapToggles: HTMLElement = createElement( guide, \"div\", \"map-toggles\" );\n\n            if ( bindingOptions.guide.showLessAndMoreLabels ) {\n                let lessText: HTMLElement = createElementWithHTML( mapToggles, \"div\", \"less-text\", _configuration.lessText );\n    \n                if ( bindingOptions.guide.colorRangeTogglesEnabled ) {\n                    lessText.onclick = function() {\n                        updateColorRangeToggles( bindingOptions, false );\n                    };\n        \n                } else {\n                    addClass( lessText, \"no-click\" );\n                }\n            }\n    \n            const days: HTMLElement = createElement( mapToggles, \"div\", \"days\" );\n            const colorRanges: ColorRange[] = getSortedColorRanges( bindingOptions );\n            const colorRangesLength: number = colorRanges.length;\n    \n            for ( let colorRangesIndex: number = 0; colorRangesIndex < colorRangesLength; colorRangesIndex++ ) {\n                renderControlViewGuideDay( bindingOptions, days, colorRanges[ colorRangesIndex ] );\n            }\n\n            if ( bindingOptions.guide.showLessAndMoreLabels ) {\n                const moreText: HTMLElement = createElementWithHTML( mapToggles, \"div\", \"more-text\", _configuration.moreText );\n    \n                if ( bindingOptions.guide.colorRangeTogglesEnabled ) {\n                    moreText.onclick = function() {\n                        updateColorRangeToggles( bindingOptions, true );\n                    };\n        \n                } else {\n                    addClass( moreText, \"no-click\" );\n                }\n            }\n        }\n    }\n\n    function renderControlViewGuideTypeButton( bindingOptions: BindingOptions, mapTypes: HTMLElement, type: string ) : void {\n        const typeButton: HTMLElement = createElementWithHTML( mapTypes, \"button\", \"type\", type );\n\n        if ( bindingOptions._currentView.type === type ) {\n            addClass( typeButton, \"active\" );\n        }\n\n        typeButton.onclick = function() {\n            if ( bindingOptions._currentView.type !== type ) {\n                bindingOptions._currentView.type = type;\n\n                fireCustomTriggerEvent( bindingOptions.events.onTypeSwitch, type );\n                renderControlContainer( bindingOptions );\n            }\n        };\n    }\n\n    function renderControlViewGuideDay( bindingOptions: BindingOptions, days: HTMLElement, colorRange: ColorRange ) : void {\n        const day: HTMLElement = createElement( days, \"div\" );\n        day.className = \"day\";\n\n        addToolTip( day, bindingOptions, colorRange.tooltipText );\n\n        if ( isColorRangeVisible( bindingOptions, colorRange.id ) ) {\n            if ( bindingOptions._currentView.view === VIEW_ID.map && isDefinedString( colorRange.mapCssClassName ) ) {\n                addClass( day, colorRange.mapCssClassName );\n            } else if ( bindingOptions.views.chart.enabled && bindingOptions._currentView.view === VIEW_ID.chart && isDefinedString( colorRange.chartCssClassName ) ) {\n                addClass( day, colorRange.chartCssClassName );\n            } else if ( bindingOptions.views.statistics.enabled && bindingOptions._currentView.view === VIEW_ID.statistics && isDefinedString( colorRange.statisticsCssClassName ) ) {\n                addClass( day, colorRange.statisticsCssClassName );\n            } else {\n                addClass( day, colorRange.cssClassName );\n            }   \n        }\n\n        if ( bindingOptions.guide.showNumbersInGuide ) {\n            addClass( day, \"day-number\" );\n\n            day.innerHTML = colorRange.minimum + STRING.plus;\n        }\n\n        if ( bindingOptions.guide.colorRangeTogglesEnabled ) {\n            day.onclick = function() {\n                toggleColorRangeVisibleState( bindingOptions, colorRange.id );\n            };\n\n        } else {\n            addClass( day, \"no-hover\" );\n        }\n    }\n\n    function renderDescription( bindingOptions: BindingOptions, container: HTMLElement ) : void {\n        if ( isDefinedString( bindingOptions.description.text ) ) {\n            if ( isDefinedString( bindingOptions.description.url ) ) {\n                const link: any = createElementWithHTML( container, \"a\", \"label\", bindingOptions.description.text );\n                link.href = bindingOptions.description.url;\n                link.target = bindingOptions.description.urlTarget;                \n\n            } else {\n                createElementWithHTML( container, \"span\", \"label\", bindingOptions.description.text );\n            }\n        }\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Render:  Shared\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function renderDayToolTip( bindingOptions: BindingOptions, day: HTMLElement, date: Date, dateCount: number ) : void {\n        if ( isDefinedFunction( bindingOptions.events.onDayToolTipRender ) ) {\n            addToolTip( day, bindingOptions, fireCustomTriggerEvent( bindingOptions.events.onDayToolTipRender, date, dateCount ) );\n        } else {\n\n            let tooltip: string = getCustomFormattedDateText( bindingOptions.tooltip.dayText, date );\n\n            if ( bindingOptions.showHolidaysInDayToolTips ) {\n                let holiday: any = isHoliday( bindingOptions, date );\n\n                if ( holiday.matched && isDefinedString( holiday.name ) ) {\n                    tooltip += STRING.colon + STRING.space + holiday.name;\n                }\n            }\n\n            addToolTip( day, bindingOptions, tooltip );\n        }\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Data\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function createDateStorageForElement( elementId: string, bindingOptions: BindingOptions, storeLocalData: boolean = true ) {\n        _elements_DateCounts[ elementId ] = {\n            options: bindingOptions,\n            type: {},\n            types: 1\n        };\n\n        _elements_DateCounts[ elementId ].type[ _configuration.unknownTrendText ] = {};\n\n        if ( storeLocalData && !bindingOptions._currentView.isInFetchMode ) {\n            loadDataFromLocalStorage( bindingOptions );\n        }\n    }\n\n    function getCurrentViewData( bindingOptions: BindingOptions ) : any {\n        return _elements_DateCounts[ bindingOptions._currentView.element.id ].type[ bindingOptions._currentView.type ];\n    }\n\n    function isMonthVisible( monthsToShow: number[], month: number ) : boolean {\n        return monthsToShow.indexOf( month + 1 ) > VALUE.notFound;\n    }\n\n    function isDayVisible( daysToShow: number[], day: number ) : boolean {\n        return daysToShow.indexOf( day ) > VALUE.notFound;\n    }\n\n    function getYearsAvailableInData( bindingOptions: BindingOptions ) : number[] {\n        let years: number[] = [];\n\n        if ( bindingOptions.showOnlyDataForYearsAvailable ) {\n            let data: any = getCurrentViewData( bindingOptions );\n\n            for ( let storageDate in data ) {\n                if ( data.hasOwnProperty( storageDate ) ) {\n                    let year: number = parseInt( getStorageDateYear( storageDate ) );\n                    \n                    if ( years.indexOf( year ) === VALUE.notFound ) {\n                        years.push( year );\n                    }\n                }\n            }\n        }\n\n        years = years.sort( function( a, b ) {\n            return a - b;\n        } );\n\n        return years;\n    }\n\n    function isYearVisible( bindingOptions: BindingOptions, year: number ) : boolean {\n        return bindingOptions.yearsToHide.indexOf( year ) === VALUE.notFound && ( bindingOptions._currentView.yearsAvailable.length === 0 || bindingOptions._currentView.yearsAvailable.indexOf( year ) > VALUE.notFound );\n    }\n\n    function isFirstVisibleYear( bindingOptions: BindingOptions, year: number ) : boolean {\n        return bindingOptions._currentView.yearsAvailable.length > 0 && year <= bindingOptions._currentView.yearsAvailable[ 0 ];\n    }\n\n    function isLastVisibleYear( bindingOptions: BindingOptions, year: number ) : boolean {\n        return bindingOptions._currentView.yearsAvailable.length > 0 && year >= bindingOptions._currentView.yearsAvailable[ bindingOptions._currentView.yearsAvailable.length - 1 ];\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Local Storage\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function loadDataFromLocalStorage( bindingOptions: BindingOptions ) : void {\n        if ( bindingOptions.useLocalStorageForData && windowObject.localStorage ) {\n            const keysLength: number = windowObject.localStorage.length;\n            const elementId: string = bindingOptions._currentView.element.id;\n\n            for ( let keyIndex: number = 0; keyIndex < keysLength; keyIndex++ ) {\n                const key : string = windowObject.localStorage.key( keyIndex );\n\n                if ( startsWithAnyCase( key, _local_Storage_Start_ID ) ) {\n                    const typesJson: string = windowObject.localStorage.getItem( key );\n                    const typesObject: any = getObjectFromString( typesJson );\n\n                    if ( typesObject.parsed ) {\n                        _elements_DateCounts[ elementId ].type = typesObject.result;\n                        _elements_DateCounts[ elementId ].types = 0;\n\n                        for ( let type in _elements_DateCounts[ elementId ].type ) {\n                            if ( _elements_DateCounts[ elementId ].type.hasOwnProperty( type ) ) {\n                                _elements_DateCounts[ elementId ].types++;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    function storeDataInLocalStorage( bindingOptions: BindingOptions ) : void {\n        if ( bindingOptions.useLocalStorageForData && windowObject.localStorage ) {\n            const elementId: string = bindingOptions._currentView.element.id;\n\n            clearLocalStorageObjects( bindingOptions );\n\n            const jsonData: string = jsonObject.stringify( _elements_DateCounts[ elementId ].type );\n\n            windowObject.localStorage.setItem( _local_Storage_Start_ID + elementId, jsonData );\n        }\n    }\n\n    function clearLocalStorageObjects( bindingOptions: BindingOptions ) : void {\n        if ( bindingOptions.useLocalStorageForData && windowObject.localStorage ) {\n            const keysLength: number = windowObject.localStorage.length;\n            const keysToRemove: string[] = [];\n            const elementId: string = bindingOptions._currentView.element.id;\n\n            for ( let keyIndex: number = 0; keyIndex < keysLength; keyIndex++ ) {\n                if ( startsWithAnyCase( windowObject.localStorage.key( keyIndex ), _local_Storage_Start_ID + elementId ) ) {\n                    keysToRemove.push( windowObject.localStorage.key( keyIndex ) );\n                }\n            }\n\n            const keysToRemoveLength: number = keysToRemove.length;\n\n            for ( let keyToRemoveIndex: number = 0; keyToRemoveIndex < keysToRemoveLength; keyToRemoveIndex++ ) {\n                windowObject.localStorage.removeItem( keysToRemove[ keyToRemoveIndex ] );\n            }\n        }\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Data Pulling\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function startDataPullTimer( bindingOptions: BindingOptions ) : void {\n        if ( bindingOptions._currentView.isInFetchMode ) {\n            if ( !isDefined( bindingOptions._currentView.isInFetchModeTimer ) ) {\n                pullDataFromCustomTrigger( bindingOptions );\n            }\n\n            if ( !isDefined( bindingOptions._currentView.isInFetchModeTimer ) ) {\n                bindingOptions._currentView.isInFetchModeTimer = setInterval( function() {\n                    pullDataFromCustomTrigger( bindingOptions );\n                    renderControlContainer( bindingOptions );\n                }, bindingOptions.dataFetchDelay );\n            }\n        }\n    }\n\n    function pullDataFromCustomTrigger( bindingOptions: BindingOptions ) : void {\n        const elementId: string = bindingOptions._currentView.element.id;\n        const data: any = fireCustomTriggerEvent( bindingOptions.events.onDataFetch, elementId );\n\n        if ( isDefinedObject( data ) ) {\n            createDateStorageForElement( elementId, bindingOptions, false );\n\n            for ( let storageDate in data ) {\n                if ( data.hasOwnProperty( storageDate ) ) {\n                    if ( !_elements_DateCounts[ elementId ].type[ _configuration.unknownTrendText ].hasOwnProperty( storageDate ) ) {\n                        _elements_DateCounts[ elementId ].type[ _configuration.unknownTrendText ][ storageDate ] = 0;\n                    }\n            \n                    _elements_DateCounts[ elementId ].type[ _configuration.unknownTrendText ][ storageDate ] += data[ storageDate ];\n                }\n            }\n        }\n    }\n\n    function cancelAllPullDataTimers() : void {\n        for ( let elementId in _elements_DateCounts ) {\n            if ( _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n\n                if ( isDefined( bindingOptions._currentView.isInFetchModeTimer ) ) {\n                    clearInterval( bindingOptions._currentView.isInFetchModeTimer );\n                }\n            }\n        }\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Color Ranges\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function isColorRangeVisible( bindingOptions: BindingOptions, id: string ) : boolean {\n        let result: boolean = false;\n        \n        if ( id === _internal_Name_Holiday ) {\n            result = true;\n\n        } else {\n            const colorRangesLength : number = bindingOptions.colorRanges.length;\n\n            for ( let colorRangesIndex: number = 0; colorRangesIndex < colorRangesLength; colorRangesIndex++ ) {\n                const colorRange: ColorRange = bindingOptions.colorRanges[ colorRangesIndex ];\n    \n                if ( colorRange.id === id && getDefaultBoolean( colorRange.visible, true ) ) {\n                    result = true;\n                    break;\n                }\n            }\n        }\n\n        return result;\n    }\n\n    function updateColorRangeToggles( bindingOptions: BindingOptions, flag: boolean ) : void {\n        const colorRangesLength: number = bindingOptions.colorRanges.length;\n\n        for ( let colorRangesIndex: number = 0; colorRangesIndex < colorRangesLength; colorRangesIndex++ ) {\n            bindingOptions.colorRanges[ colorRangesIndex ].visible = flag;\n\n            fireCustomTriggerEvent( bindingOptions.events.onColorRangeTypeToggle, bindingOptions.colorRanges[ colorRangesIndex ].id, flag );\n        }\n\n        renderControlContainer( bindingOptions );\n    }\n\n    function toggleColorRangeVisibleState( bindingOptions: BindingOptions, id: string ) : void {\n        const colorRangesLength: number = bindingOptions.colorRanges.length;\n\n        for ( let colorRangesIndex: number = 0; colorRangesIndex < colorRangesLength; colorRangesIndex++ ) {\n            const colorRange: ColorRange = bindingOptions.colorRanges[ colorRangesIndex ];\n\n            if ( colorRange.id === id ) {\n                colorRange.visible = !getDefaultBoolean( colorRange.visible, true );\n\n                fireCustomTriggerEvent( bindingOptions.events.onColorRangeTypeToggle, colorRange.id, colorRange.visible );\n                renderControlContainer( bindingOptions );\n                break;\n            }\n        }\n    }\n\n    function getColorRange( bindingOptions: BindingOptions, colorRanges: ColorRange[], dateCount: number, date: Date = null ) : ColorRange {\n        let useColorRange: ColorRange = null;\n\n        if ( isDefined( date ) && isHoliday( bindingOptions, date ).matched ) {\n            const newUseColorRange: ColorRange = {\n                cssClassName: \"holiday\",\n                id: _internal_Name_Holiday,\n                visible: true,\n                name: STRING.empty,\n                minimum: 0,\n                mapCssClassName: STRING.empty,\n                chartCssClassName: STRING.empty,\n                statisticsCssClassName: STRING.empty,\n                tooltipText: STRING.empty\n            };\n\n            useColorRange = newUseColorRange;\n        }\n\n        if ( !isDefined( useColorRange ) ) {\n            const colorRangesLength: number = colorRanges.length;\n\n            for ( let colorRangesIndex: number = 0; colorRangesIndex < colorRangesLength; colorRangesIndex++ ) {\n                const colorRange: ColorRange = colorRanges[ colorRangesIndex ];\n    \n                if ( dateCount >= colorRange.minimum ) {\n                    useColorRange = colorRange;\n                } else {\n                    break;\n                }\n            }\n        }\n\n        return useColorRange;\n    }\n\n    function getColorRangeByMinimum( colorRanges: ColorRange[], minimum: number ) : ColorRange {\n        const colorRangesLength: number = colorRanges.length;\n        let useColorRange: ColorRange = null;\n\n        for ( let colorRangesIndex: number = 0; colorRangesIndex < colorRangesLength; colorRangesIndex++ ) {\n            const colorRange: ColorRange = colorRanges[ colorRangesIndex ];\n\n            if ( minimum.toString() === colorRange.minimum.toString() ) {\n                useColorRange = colorRange;\n                break;\n            }\n        }\n\n        return useColorRange;\n    }\n\n    function getSortedColorRanges( bindingOptions: BindingOptions ) {\n        return bindingOptions.colorRanges.sort( function( a, b ) {\n            return a.minimum - b.minimum;\n        } );\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Holiday\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function isHoliday( bindingOptions: BindingOptions, date: Date ) : any {\n        const holidaysLength: number = bindingOptions.holidays.length;\n        const day: number = date.getDate();\n        const month: number = date.getMonth() + 1;\n        const year: number = date.getFullYear();\n        let holidayMatched: boolean = false;\n        let holidayName: string = null;\n        \n        for ( let holidayIndex: number = 0; holidayIndex < holidaysLength; holidayIndex++ ) {\n            let holiday: Holiday = bindingOptions.holidays[ holidayIndex ];\n\n            if ( isDefinedString( holiday.date ) && holiday.showInViews ) {\n                const dateParts: string[] = holiday.date.split( \"/\" );\n\n                if ( dateParts.length === 2 ) {\n                    holidayMatched = day === parseInt( dateParts[ 0 ] ) && month === parseInt( dateParts[ 1 ] );\n                } else if ( dateParts.length === 3 ) {\n                    holidayMatched = day === parseInt( dateParts[ 0 ] ) && month === parseInt( dateParts[ 1 ] ) && year === parseInt( dateParts[ 2 ] );\n                }\n\n                if ( holidayMatched ) {\n                    holidayName = holiday.name;\n                    break;\n                }\n            }\n        }\n\n        return {\n            matched: holidayMatched,\n            name: holidayName\n        };\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Import\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function makeAreaDroppable( element: HTMLElement, bindingOptions: BindingOptions ) : void {\n        if ( bindingOptions.allowFileImports && !bindingOptions._currentView.isInFetchMode ) {\n            element.ondragover = cancelBubble;\n            element.ondragenter = cancelBubble;\n            element.ondragleave = cancelBubble;\n    \n            element.ondrop = function( e ) {\n                cancelBubble( e );\n    \n                if ( isDefined( windowObject.FileReader ) && e.dataTransfer.files.length > 0 ) {\n                    importFromFiles( e.dataTransfer.files, bindingOptions );\n                }\n            };\n        }\n    }\n\n    function importFromFilesSelected( bindingOptions: BindingOptions ) : void {\n        const input: any = createElementWithNoContainer( \"input\" );\n        input.type = \"file\";\n        input.accept = \".json, .txt, .csv\";\n        input.multiple = \"multiple\";\n\n        input.onchange = function() {\n            importFromFiles( input.files, bindingOptions );\n        };\n\n        input.click();\n    }\n\n    function importFromFiles( files: FileList, bindingOptions: BindingOptions ) : void {\n        const filesLength: number = files.length;\n        const filesCompleted: string[] = [];\n        const data: any = getCurrentViewData( bindingOptions );\n\n        const onLoadEnd = function( filename: string, readingObject: object ) {\n            filesCompleted.push( filename );\n\n            for ( let storageDate in readingObject ) {\n                if ( readingObject.hasOwnProperty( storageDate ) ) {\n                    if ( !data.hasOwnProperty( storageDate ) ) {\n                        data[ storageDate ] = 0;\n                    }\n\n                    data[ storageDate ] += readingObject[ storageDate ];\n                }\n            }\n            \n            if ( filesCompleted.length === filesLength ) {\n                fireCustomTriggerEvent( bindingOptions.events.onImport, bindingOptions._currentView.element );\n                renderControlContainer( bindingOptions );\n            }\n        };\n\n        for ( let fileIndex: number = 0; fileIndex < filesLength; fileIndex++ ) {\n            const file: File = files[ fileIndex ];\n            const fileExtension: string = file.name.split( \".\" ).pop().toLowerCase();\n\n            if ( fileExtension === EXPORT_TYPE.json ) {\n                importFromJson( file, onLoadEnd );\n            } else if ( fileExtension === EXPORT_TYPE.txt ) {\n                importFromTxt( file, onLoadEnd );\n            } else if ( fileExtension === EXPORT_TYPE.csv ) {\n                importFromCsv( file, onLoadEnd );\n            }\n        }\n    }\n\n    function importFromJson( file: File, onLoadEnd: Function ) : void {\n        const reader: FileReader = new FileReader();\n        let readingObject: object = null;\n\n        reader.readAsText( file );\n\n        reader.onloadend = function() {\n            onLoadEnd( file.name, readingObject );\n        };\n    \n        reader.onload = function( e ) {\n            const jsonObject: any = getObjectFromString( e.target.result );\n\n            if ( jsonObject.parsed && isDefinedObject( jsonObject.result ) ) {\n                readingObject = jsonObject.result;\n            }\n        };\n    }\n\n    function importFromTxt( file: File, onLoadEnd: Function ) : void {\n        const reader: FileReader = new FileReader();\n        const readingObject: object = null;\n\n        reader.readAsText( file );\n\n        reader.onloadend = function() {\n            onLoadEnd( file.name, readingObject );\n        };\n    \n        reader.onload = function( e ) {\n            const lines: string[] = e.target.result.toString().split( STRING.newLine );\n            const linesLength: number = lines.length;\n\n            for ( let lineIndex: number = 0; lineIndex < linesLength; lineIndex++ ) {\n                const line: string[] = lines[ lineIndex ].split( STRING.colon );\n\n                readingObject[ line[ 0 ].trim() ] = parseInt( line[ 1 ].trim() );\n            }\n        };\n    }\n\n    function importFromCsv( file: File, onLoadEnd: Function ) : void {\n        const reader: FileReader = new FileReader();\n        const readingObject: object = null;\n\n        reader.readAsText( file );\n\n        reader.onloadend = function() {\n            onLoadEnd( file.name, readingObject );\n        };\n    \n        reader.onload = function( e ) {\n            const data: string = e.target.result.toString().replace( new RegExp( \"\\\"\", \"g\" ), STRING.empty );\n            const lines: string[] = data.split( STRING.newLine );\n            \n            lines.shift();\n\n            const linesLength: number = lines.length;\n\n            for ( let lineIndex: number = 0; lineIndex < linesLength; lineIndex++ ) {\n                let line: string[] = lines[ lineIndex ].split( STRING.comma );\n\n                readingObject[ line[ 0 ].trim() ] = parseInt( line[ 1 ].trim() );\n            }\n        };\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Export\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function exportAllData( bindingOptions: BindingOptions, exportType: string = null ) : void {\n        let contents: string = null;\n        const contentsMimeType: string = getExportMimeType( bindingOptions );\n        const contentExportType: string = getDefaultString( exportType, bindingOptions.exportType ).toLowerCase();\n\n        if ( contentExportType === EXPORT_TYPE.csv ) {\n            contents = getCsvContent( bindingOptions );\n        } else if ( contentExportType === EXPORT_TYPE.json ) {\n            contents = getJsonContent( bindingOptions );\n        } else if ( contentExportType === EXPORT_TYPE.xml ) {\n            contents = getXmlContents( bindingOptions );\n        } else if ( contentExportType === EXPORT_TYPE.txt ) {\n            contents = getTxtContents( bindingOptions );\n        }\n\n        if ( isDefinedString( contents ) ) {\n            const tempLink: HTMLElement = createElement( documentObject.body, \"a\" );\n            tempLink.style.display = \"none\";\n            tempLink.setAttribute( \"target\", \"_blank\" );\n            tempLink.setAttribute( \"href\", \"data:\" + contentsMimeType + \";charset=utf-8,\" + encodeURIComponent( contents ) );\n            tempLink.setAttribute( \"download\", getExportFilename( bindingOptions ) );\n            tempLink.click();\n            \n            documentObject.body.removeChild( tempLink );\n\n            fireCustomTriggerEvent( bindingOptions.events.onExport, bindingOptions._currentView.element );\n        }\n    }\n\n    function getCsvContent( bindingOptions: BindingOptions ) : string {\n        const data: object = getExportData( bindingOptions );\n        const csvContents: string[] = [];\n\n        for ( let storageDate in data ) {\n            if ( data.hasOwnProperty( storageDate ) ) {\n                csvContents.push( getCsvValueLine( [ getCsvValue( storageDate ), getCsvValue( data[ storageDate ] ) ] ) );\n            }\n        }\n\n        if ( csvContents.length > 0 ) {\n            csvContents.unshift( getCsvValueLine( [ getCsvValue( _configuration.dateText ), getCsvValue( _configuration.countText ) ] ) );\n        }\n        \n        return csvContents.join( STRING.newLine );\n    }\n\n    function getJsonContent( bindingOptions: BindingOptions ) : string {\n        return jsonObject.stringify( getExportData( bindingOptions ) );\n    }\n\n    function getXmlContents( bindingOptions: BindingOptions ) : string {\n        const data: object = getExportData( bindingOptions );\n        const contents: string[] = [];\n\n        contents.push( \"<?xml version=\\\"1.0\\\" ?>\" );\n        contents.push( \"<Dates>\" );\n\n        for ( let storageDate in data ) {\n            if ( data.hasOwnProperty( storageDate ) ) {\n                contents.push( \"<Date>\" );\n                contents.push( \"<FullDate>\" + storageDate + \"</FullDate>\" );\n                contents.push( \"<Count>\" + data[ storageDate ] + \"</Count>\" );\n                contents.push( \"</Date>\" );\n            }\n        }\n\n        contents.push( \"</Dates>\" );\n\n        return contents.join( STRING.newLine );\n    }\n\n    function getTxtContents( bindingOptions: BindingOptions ) : string {\n        const data: object = getExportData( bindingOptions );\n        const contents: string[] = [];\n\n        for ( let storageDate in data ) {\n            if ( data.hasOwnProperty( storageDate ) ) {\n                contents.push( storageDate + STRING.colon + STRING.space + data[ storageDate ].toString() );\n            }\n        }\n\n        return contents.join( STRING.newLine );\n    }\n\n    function getExportData( bindingOptions: BindingOptions ) : object {\n        const contents: object = {};\n        const data = getCurrentViewData( bindingOptions );\n\n        if ( bindingOptions.exportOnlyYearBeingViewed ) {\n            for ( let monthIndex: number = 0; monthIndex < 12; monthIndex++ ) {\n                const totalDaysInMonth: number = getTotalDaysInMonth( bindingOptions._currentView.year, monthIndex );\n        \n                for ( let dayIndex: number = 0; dayIndex < totalDaysInMonth; dayIndex++ ) {\n                    const storageDate2: string = toStorageDate( new Date( bindingOptions._currentView.year, monthIndex, dayIndex + 1 ) );\n\n                    if ( data.hasOwnProperty( storageDate2 ) ) {\n                        contents[ storageDate2 ] = data[ storageDate2 ];\n                    }\n                }\n            }\n\n        } else {\n            const storageDates: string[] = [];\n\n            for ( let storageDate1 in data ) {\n                if ( data.hasOwnProperty( storageDate1 ) ) {\n                    storageDates.push( storageDate1 );\n                }\n            }\n    \n            storageDates.sort();\n\n            const storageDatesLength: number = storageDates.length;\n\n            for ( let storageDateIndex: number = 0; storageDateIndex < storageDatesLength; storageDateIndex++ ) {\n                const storageDate3: string = storageDates[ storageDateIndex ];\n    \n                if ( data.hasOwnProperty( storageDate3 ) ) {\n                    contents[ storageDate3 ] = data[ storageDate3 ];\n                }\n            }\n        }\n\n        return contents;\n    }\n\n    function getExportMimeType( bindingOptions: BindingOptions ) : string {\n        let result: string = null;\n\n        if ( bindingOptions.exportType.toLowerCase() === EXPORT_TYPE.csv ) {\n            result = \"text/csv\";\n        } else if ( bindingOptions.exportType.toLowerCase() === EXPORT_TYPE.json ) {\n            result = \"application/json\";\n        } else if ( bindingOptions.exportType.toLowerCase() === EXPORT_TYPE.xml ) {\n            result = \"application/xml\";\n        } else if ( bindingOptions.exportType.toLowerCase() === EXPORT_TYPE.txt ) {\n            result = \"text/plain\";\n        }\n\n        return result;\n    }\n\n    function getExportFilename( bindingOptions: BindingOptions ) : string {\n        const date: Date = new Date();\n        const datePart: string = padNumber( date.getDate() ) + STRING.dash + padNumber( date.getMonth() + 1 ) + STRING.dash + date.getFullYear();\n        const timePart: string = padNumber( date.getHours() ) + STRING.dash + padNumber( date.getMinutes() );\n        let filenameStart: string = STRING.empty;\n\n        if ( bindingOptions._currentView.type !== _configuration.unknownTrendText ) {\n            filenameStart = bindingOptions._currentView.type.toLowerCase().replace( STRING.space, STRING.underscore ) + STRING.underscore;\n        }\n\n        return filenameStart + datePart + STRING.underscore + timePart + \".\" + bindingOptions.exportType.toLowerCase();\n    }\n\n    function getCsvValue( text: string ) : string {\n        let result: string = text.toString().replace( /(\\r\\n|\\n|\\r)/gm, STRING.empty ).replace( /(\\s\\s)/gm, STRING.space );\n        result = result.replace( /\"/g, '\"\"' );\n        result = '\"' + result + '\"';\n\n        return result;\n    }\n\n    function getCsvValueLine( csvValues: string[] ) : string {\n        return csvValues.join( \",\" );\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Attribute Options\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function buildAttributeOptions( newOptions: any ) : BindingOptions {\n        let options: BindingOptions = getDefaultObject( newOptions, {} as BindingOptions );\n        options.views = getDefaultObject( options.views, {} );\n        options.exportOnlyYearBeingViewed = getDefaultBoolean( options.exportOnlyYearBeingViewed, true );\n        options.year = getDefaultNumber( options.year, new Date().getFullYear() );\n        options.view = getDefaultString( options.view, VIEW_NAME.map );\n        options.exportType = getDefaultString( options.exportType, EXPORT_TYPE.csv );\n        options.useLocalStorageForData = getDefaultBoolean( options.useLocalStorageForData, false );\n        options.allowFileImports = getDefaultBoolean( options.allowFileImports, true );\n        options.yearsToHide = getDefaultArray( options.yearsToHide, [] );\n        options.dataFetchDelay = getDefaultNumber( options.dataFetchDelay, 60000 );\n        options.showOnlyDataForYearsAvailable = getDefaultBoolean( options.showOnlyDataForYearsAvailable, false );\n        options.showHolidaysInDayToolTips = getDefaultBoolean( options.showHolidaysInDayToolTips, false );\n        \n        options = buildAttributeOptionColorRanges( options );\n        options = buildAttributeOptionHolidays( options );\n        options = buildAttributeOptionTitle( options );\n        options = buildAttributeOptionDescription( options );\n        options = buildAttributeOptionGuide( options );\n        options = buildAttributeOptionToolTip( options );\n        options = buildAttributeOptionMapView( options );\n        options = buildAttributeOptionChartView( options );\n        options = buildAttributeOptionDaysView( options );\n        options = buildAttributeOptionStatisticsView( options );\n        options = buildAttributeOptionCustomTriggers( options );\n        \n        return options;\n    }\n\n    function buildAttributeOptionColorRanges( options: BindingOptions ) : BindingOptions {\n        if ( isDefinedArray( options.colorRanges ) ) {\n            const colorRangesLength: number = options.colorRanges.length;\n\n            for ( let colorRangeIndex: number = 0; colorRangeIndex < colorRangesLength; colorRangeIndex++ ) {\n                const colorRange: ColorRange = options.colorRanges[ colorRangeIndex ];\n\n                colorRange.id = getDefaultString( colorRange.id, newGuid() );\n                colorRange.name = getDefaultString( colorRange.name, null );\n                colorRange.minimum = getDefaultNumber( colorRange.minimum, 0 );\n                colorRange.cssClassName = getDefaultString( colorRange.cssClassName, null );\n                colorRange.mapCssClassName = getDefaultString( colorRange.mapCssClassName, null );\n                colorRange.chartCssClassName = getDefaultString( colorRange.chartCssClassName, null );\n                colorRange.statisticsCssClassName = getDefaultString( colorRange.statisticsCssClassName, null );\n                colorRange.tooltipText = getDefaultString( colorRange.tooltipText, null );\n                colorRange.visible = getDefaultBoolean( colorRange.visible, true );\n            }\n\n        } else {\n            options.colorRanges = [\n                {\n                    id: newGuid(),\n                    name: \"Day Color 1\",\n                    minimum: 10,\n                    cssClassName: \"day-color-1\",\n                    tooltipText: \"Day Color 1\",\n                    visible: true,\n                    mapCssClassName: STRING.empty,\n                    chartCssClassName: STRING.empty,\n                    statisticsCssClassName: STRING.empty\n                },\n                {\n                    id: newGuid(),\n                    name: \"Day Color 2\",\n                    minimum: 15,\n                    cssClassName: \"day-color-2\",\n                    tooltipText: \"Day Color 2\",\n                    visible: true,\n                    mapCssClassName: STRING.empty,\n                    chartCssClassName: STRING.empty,\n                    statisticsCssClassName: STRING.empty\n                },\n                {\n                    id: newGuid(),\n                    name: \"Day Color 3\",\n                    minimum: 20,\n                    cssClassName: \"day-color-3\",\n                    tooltipText: \"Day Color 3\",\n                    visible: true,\n                    mapCssClassName: STRING.empty,\n                    chartCssClassName: STRING.empty,\n                    statisticsCssClassName: STRING.empty\n                },\n                {\n                    id: newGuid(),\n                    name: \"Day Color 4\",\n                    minimum: 25,\n                    cssClassName: \"day-color-4\",\n                    tooltipText: \"Day Color 4\",\n                    visible: true,\n                    mapCssClassName: STRING.empty,\n                    chartCssClassName: STRING.empty,\n                    statisticsCssClassName: STRING.empty\n                }\n            ];\n        }\n\n        return options;\n    }\n\n    function buildAttributeOptionHolidays( options: BindingOptions ) : BindingOptions {\n        if ( isDefinedArray( options.holidays ) ) {\n            const holidaysLength: number = options.holidays.length;\n\n            for ( let holidayIndex: number = 0; holidayIndex < holidaysLength; holidayIndex++ ) {\n                const holiday: Holiday = options.holidays[ holidayIndex ];\n                \n                holiday.date = getDefaultString( holiday.date, null );\n                holiday.name = getDefaultString( holiday.name, null );\n                holiday.showInViews = getDefaultBoolean( holiday.showInViews, true );\n            }\n\n        } else {\n            options.holidays = [];\n        }\n\n        return options;\n    }\n\n    function buildAttributeOptionTitle( options: BindingOptions ) : BindingOptions {\n        options.title = getDefaultObject( options.title, {} as Title );\n        options.title.text = getDefaultString( options.title.text, \"Heat.js\" );\n        options.title.showText = getDefaultBoolean( options.title.showText, true );\n        options.title.showYearSelector = getDefaultBoolean( options.title.showYearSelector, true );\n        options.title.showRefreshButton = getDefaultBoolean( options.title.showRefreshButton, false );\n        options.title.showExportButton = getDefaultBoolean( options.title.showExportButton, false );\n        options.title.extraSelectionYears = getDefaultNumber( options.title.extraSelectionYears, 50 );\n        options.title.showYearSelectionDropDown = getDefaultBoolean( options.title.showYearSelectionDropDown, true );\n        options.title.showImportButton = getDefaultBoolean( options.title.showImportButton, false );\n        options.title.showConfigurationButton = getDefaultBoolean( options.title.showConfigurationButton, true );\n        options.title.showTitleDropDownButton = getDefaultBoolean( options.title.showTitleDropDownButton, true );\n        options.title.showTitleDropDownHeaders = getDefaultBoolean( options.title.showTitleDropDownHeaders, true );\n\n        return options;\n    }\n\n    function buildAttributeOptionDescription( options: BindingOptions ) {\n        options.description = getDefaultObject( options.description, {} as Description );\n        options.description.text = getDefaultString( options.description.text, null );\n        options.description.url = getDefaultString( options.description.url, null );\n        options.description.urlTarget = getDefaultString( options.description.urlTarget, \"_blank\" );\n\n        return options;\n    }\n\n    function buildAttributeOptionGuide( options: BindingOptions ) : BindingOptions {\n        options.guide = getDefaultObject( options.guide, {} as Guide );\n        options.guide.enabled = getDefaultBoolean( options.guide.enabled, true );\n        options.guide.colorRangeTogglesEnabled = getDefaultBoolean( options.guide.colorRangeTogglesEnabled, true );\n        options.guide.showLessAndMoreLabels = getDefaultBoolean( options.guide.showLessAndMoreLabels, true );\n        options.guide.showNumbersInGuide = getDefaultBoolean( options.guide.showNumbersInGuide, false );\n\n        return options;\n    }\n\n    function buildAttributeOptionToolTip( options: BindingOptions ) : BindingOptions {\n        options.tooltip = getDefaultObject( options.tooltip, {} as Tooltip );\n        options.tooltip.delay = getDefaultNumber( options.tooltip.delay, 750 );\n        options.tooltip.dayText = getDefaultString( options.tooltip.dayText, \"{d}{o} {mmmm} {yyyy}\" );\n\n        return options;\n    }\n\n    function buildAttributeOptionMapView( options: BindingOptions ) : BindingOptions {\n        options.views.map = getDefaultObject( options.views.map, {} as Map );\n        options.views.map.showMonthDayGaps = getDefaultBoolean( options.views.map.showMonthDayGaps, true );\n        options.views.map.showDayNames = getDefaultBoolean( options.views.map.showDayNames, true );\n        options.views.map.placeMonthNamesOnTheBottom = getDefaultBoolean( options.views.map.placeMonthNamesOnTheBottom, false );\n        options.views.map.showDayNumbers = getDefaultBoolean( options.views.map.showDayNumbers, false );\n        options.views.map.showMonthNames = getDefaultBoolean( options.views.map.showMonthNames, true );\n        options.views.map.showDaysInReverseOrder = getDefaultBoolean( options.views.map.showDaysInReverseOrder, false );\n        options.views.map.showNoDataMessageWhenDataIsNotAvailable = getDefaultBoolean( options.views.map.showNoDataMessageWhenDataIsNotAvailable, false );\n        options.views.map.showMinimalDayNames = getDefaultBoolean( options.views.map.showMinimalDayNames, false );\n        options.views.map.showMonthsInReverseOrder = getDefaultBoolean( options.views.map.showMonthsInReverseOrder, false );\n        options.views.map.keepScrollPositions = getDefaultBoolean( options.views.map.keepScrollPositions, false );\n\n        if ( isInvalidOptionArray( options.views.map.monthsToShow ) ) {\n            options.views.map.monthsToShow = _default_MonthsToShow;\n        }\n\n        if ( isInvalidOptionArray( options.views.map.daysToShow ) ) {\n            options.views.map.daysToShow = _default_DaysToShow;\n        }\n\n        return options;\n    }\n\n    function buildAttributeOptionChartView( options: BindingOptions ) : BindingOptions {\n        options.views.chart = getDefaultObject( options.views.chart, {} as Chart );\n        options.views.chart.enabled = getDefaultBoolean( options.views.chart.enabled, true );\n        options.views.chart.showChartYLabels = getDefaultBoolean( options.views.chart.showChartYLabels, true );\n        options.views.chart.showMonthNames = getDefaultBoolean( options.views.chart.showMonthNames, true );\n        options.views.chart.showLineNumbers = getDefaultBoolean( options.views.chart.showLineNumbers, false );\n        options.views.chart.showInReverseOrder = getDefaultBoolean( options.views.chart.showInReverseOrder, false );\n        options.views.chart.keepScrollPositions = getDefaultBoolean( options.views.chart.keepScrollPositions, false );\n\n        if ( isInvalidOptionArray( options.views.chart.monthsToShow ) ) {\n            options.views.chart.monthsToShow = _default_MonthsToShow;\n        }\n\n        if ( isInvalidOptionArray( options.views.chart.daysToShow ) ) {\n            options.views.chart.daysToShow = _default_DaysToShow;\n        }\n\n        return options;\n    }\n\n    function buildAttributeOptionDaysView( options: BindingOptions ) : BindingOptions {\n        options.views.days = getDefaultObject( options.views.days, {} as Days );\n        options.views.days.enabled = getDefaultBoolean( options.views.days.enabled, true );\n        options.views.days.showChartYLabels = getDefaultBoolean( options.views.days.showChartYLabels, true );\n        options.views.days.showDayNames = getDefaultBoolean( options.views.days.showDayNames, true );\n        options.views.days.showInReverseOrder = getDefaultBoolean( options.views.days.showInReverseOrder, false );\n        options.views.days.showDayNumbers = getDefaultBoolean( options.views.days.showDayNumbers, false );\n        options.views.days.keepScrollPositions = getDefaultBoolean( options.views.days.keepScrollPositions, false );\n\n        if ( isInvalidOptionArray( options.views.days.monthsToShow ) ) {\n            options.views.days.monthsToShow = _default_MonthsToShow;\n        }\n\n        if ( isInvalidOptionArray( options.views.days.daysToShow ) ) {\n            options.views.days.daysToShow = _default_DaysToShow;\n        }\n\n        return options;\n    }\n\n    function buildAttributeOptionStatisticsView( options: BindingOptions ) : BindingOptions {\n        options.views.statistics = getDefaultObject( options.views.statistics, {} as Statistics );\n        options.views.statistics.enabled = getDefaultBoolean( options.views.statistics.enabled, true );\n        options.views.statistics.showChartYLabels = getDefaultBoolean( options.views.statistics.showChartYLabels, true );\n        options.views.statistics.showColorRangeLabels = getDefaultBoolean( options.views.statistics.showColorRangeLabels, true );\n        options.views.statistics.useColorRangeNamesForLabels = getDefaultBoolean( options.views.statistics.useColorRangeNamesForLabels, false );\n        options.views.statistics.showRangeNumbers = getDefaultBoolean( options.views.statistics.showRangeNumbers, false );\n        options.views.statistics.showInReverseOrder = getDefaultBoolean( options.views.statistics.showInReverseOrder, false );\n        options.views.statistics.keepScrollPositions = getDefaultBoolean( options.views.statistics.keepScrollPositions, false );\n\n        if ( isInvalidOptionArray( options.views.statistics.monthsToShow ) ) {\n            options.views.statistics.monthsToShow = _default_MonthsToShow;\n        }\n\n        if ( isInvalidOptionArray( options.views.statistics.daysToShow ) ) {\n            options.views.statistics.daysToShow = _default_DaysToShow;\n        }\n\n        return options;\n    }\n\n    function buildAttributeOptionCustomTriggers( options : BindingOptions ) : BindingOptions {\n        options.events = getDefaultObject( options.events, {} as Events );\n        options.events.onDayClick = getDefaultFunction( options.events.onDayClick, null );\n        options.events.onBackYear = getDefaultFunction( options.events.onBackYear, null );\n        options.events.onNextYear = getDefaultFunction( options.events.onNextYear, null );\n        options.events.onRefresh = getDefaultFunction( options.events.onRefresh, null );\n        options.events.onBeforeRender = getDefaultFunction( options.events.onBeforeRender, null );\n        options.events.onRenderComplete = getDefaultFunction( options.events.onRenderComplete, null );\n        options.events.onDestroy = getDefaultFunction( options.events.onDestroy, null );\n        options.events.onExport = getDefaultFunction( options.events.onExport, null );\n        options.events.onSetYear = getDefaultFunction( options.events.onSetYear, null );\n        options.events.onTypeSwitch = getDefaultFunction( options.events.onTypeSwitch, null );\n        options.events.onDayToolTipRender = getDefaultFunction( options.events.onDayToolTipRender, null );\n        options.events.onAdd = getDefaultFunction( options.events.onAdd, null );\n        options.events.onRemove = getDefaultFunction( options.events.onRemove, null );\n        options.events.onReset = getDefaultFunction( options.events.onReset, null );\n        options.events.onViewSwitch = getDefaultFunction( options.events.onViewSwitch, null );\n        options.events.onColorRangeTypeToggle = getDefaultFunction( options.events.onColorRangeTypeToggle, null );\n        options.events.onImport = getDefaultFunction( options.events.onImport, null );\n        options.events.onStatisticClick = getDefaultFunction( options.events.onStatisticClick, null );\n        options.events.onDataFetch = getDefaultFunction( options.events.onDataFetch, null );\n        options.events.onClear = getDefaultFunction( options.events.onClear, null );\n        options.events.onUpdate = getDefaultFunction( options.events.onUpdate, null );\n        options.events.onOptionsUpdate = getDefaultFunction( options.events.onOptionsUpdate, null );\n        options.events.onWeekDayClick = getDefaultFunction( options.events.onWeekDayClick, null );\n\n        return options;\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Date/Time\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function getTotalDaysInMonth( year: number, month: number ) : number {\n        return new Date( year, month + 1, 0 ).getDate();\n    }\n\n    function getWeekdayNumber( date: Date ) : number {\n        return date.getDay() - 1 < 0 ? 6 : date.getDay() - 1;\n    }\n\n    function getDayOrdinal( value: number ) : string {\n        let result: string = _configuration.thText;\n\n        if ( value === 31 || value === 21 || value === 1 ) {\n            result = _configuration.stText;\n        } else if ( value === 22 || value === 2 ) {\n            result = _configuration.ndText;\n        } else if ( value === 23 || value === 3 ) {\n            result = _configuration.rdText;\n        }\n\n        return result;\n    }\n\n    function getCustomFormattedDateText( dateFormat: string, date: Date ) : string {\n        let result: string = dateFormat;\n        const weekDayNumber: number = getWeekdayNumber( date );\n\n        result = result.replace( \"{dddd}\", _configuration.dayNames[ weekDayNumber ] );\n        result = result.replace( \"{dd}\", padNumber( date.getDate() ) );\n        result = result.replace( \"{d}\", date.getDate().toString() );\n\n        result = result.replace( \"{o}\", getDayOrdinal( date.getDate() ) );\n\n        result = result.replace( \"{mmmm}\", _configuration.monthNames[ date.getMonth() ] );\n        result = result.replace( \"{mm}\", padNumber( date.getMonth() + 1 ) );\n        result = result.replace( \"{m}\", ( date.getMonth() + 1 ).toString() );\n\n        result = result.replace( \"{yyyy}\", date.getFullYear().toString() );\n        result = result.replace( \"{yyy}\", date.getFullYear().toString().substring( 1 ) );\n        result = result.replace( \"{yy}\", date.getFullYear().toString().substring( 2 ) );\n        result = result.replace( \"{y}\", parseInt( date.getFullYear().toString().substring( 2 ) ).toString() );\n\n        return result;\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Element Handling\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function createElementWithNoContainer( type: string ) : HTMLElement {\n        let result: HTMLElement = null;\n        const nodeType: string = type.toLowerCase();\n        const isText: boolean = nodeType === \"text\";\n\n        if ( !_elements_Type.hasOwnProperty( nodeType ) ) {\n            _elements_Type[ nodeType ] = isText ? documentObject.createTextNode( STRING.empty ) : documentObject.createElement( nodeType );\n        }\n\n        result = _elements_Type[ nodeType ].cloneNode( false );\n\n        return result;\n    }\n\n    function createElement( container: HTMLElement, type: string, className: string = STRING.empty, beforeNode: HTMLElement = null ) : HTMLElement {\n        let result: HTMLElement = null;\n        const nodeType: string = type.toLowerCase();\n        const isText: boolean = nodeType === \"text\";\n\n        if ( !_elements_Type.hasOwnProperty( nodeType ) ) {\n            _elements_Type[ nodeType ] = isText ? documentObject.createTextNode( STRING.empty ) : documentObject.createElement( nodeType );\n        }\n\n        result = _elements_Type[ nodeType ].cloneNode( false );\n\n        if ( isDefined( className ) ) {\n            result.className = className;\n        }\n\n        if ( isDefined( beforeNode ) ) {\n            container.insertBefore( result, beforeNode );\n        } else {\n            container.appendChild( result );\n        }\n\n        return result;\n    }\n\n    function createElementWithHTML( container: HTMLElement, type: string, className: string, html: string, beforeNode: HTMLElement = null ) : HTMLElement {\n        const element: HTMLElement = createElement( container, type, className, beforeNode );\n        element.innerHTML = html;\n\n        return element;\n    }\n\n    function getStyleValueByName( element: any, stylePropertyName: string, toNumber: boolean = false ) : any {\n        let value: any = null;\n        \n        if ( documentObject.defaultView.getComputedStyle ) {\n            value = documentObject.defaultView.getComputedStyle( element, null ).getPropertyValue( stylePropertyName ); \n        } else if ( element.currentStyle ) {\n            value = element.currentStyle[ stylePropertyName ];\n        }   \n        \n        if ( toNumber ) {\n            value = parseFloat( value );\n        }\n\n        return value;\n    }\n\n    function addClass( element: HTMLElement, className: string ) {\n        element.className += STRING.space + className;\n        element.className = element.className.trim();\n    }\n\n    function removeClass( element: HTMLElement, className: string ) {\n        element.className = element.className.replace( className, STRING.empty );\n        element.className = element.className.trim();\n    }\n\n    function cancelBubble( e: any ) {\n        e.preventDefault();\n        e.cancelBubble = true;\n    }\n\n    function getScrollPosition() : object {\n        const doc: HTMLElement = documentObject.documentElement;\n        const left: number = ( windowObject.pageXOffset || doc.scrollLeft )  - ( doc.clientLeft || 0 );\n        const top: number = ( windowObject.pageYOffset || doc.scrollTop ) - ( doc.clientTop || 0 );\n\n        return {\n            left: left,\n            top: top\n        };\n    }\n\n    function showElementAtMousePosition( e: any, element: HTMLElement ) {\n        let left: number = e.pageX;\n        let top: number = e.pageY;\n        const scrollPosition: any = getScrollPosition();\n\n        element.style.display = \"block\";\n\n        if ( left + element.offsetWidth > windowObject.innerWidth ) {\n            left -= element.offsetWidth;\n        } else {\n            left++;\n        }\n\n        if ( top + element.offsetHeight > windowObject.innerHeight ) {\n            top -= element.offsetHeight;\n        } else {\n            top++;\n        }\n\n        if ( left < scrollPosition.left ) {\n            left = e.pageX + 1;\n        }\n\n        if ( top < scrollPosition.top ) {\n            top = e.pageY + 1;\n        }\n        \n        element.style.left = left + \"px\";\n        element.style.top = top + \"px\";\n    }\n\n    function reverseElementsOrder( parent: HTMLElement ) {\n        const children: HTMLCollection = parent.children;\n        let childrenLength: number = children.length - 1;\n\n        for ( ; childrenLength--; ) {\n            parent.appendChild( children[ childrenLength ] );\n        }\n    }\n\n    function buildCheckBox( container: HTMLElement, labelText: string, checked: boolean = null, onClick: Function = null ) : any {\n        const lineContainer: HTMLElement = createElement( container, \"div\" );\n        const label: HTMLElement = createElement( lineContainer, \"label\", \"checkbox\" );\n        const input: any = createElement( label, \"input\" );\n\n        input.type = \"checkbox\";\n\n        if ( isDefined( onClick ) ) {\n            input.onclick = onClick;\n        }\n\n        if ( isDefined( checked ) ) {\n            input.checked = checked;\n        }\n\n        createElement( label, \"span\", \"check-mark\" );\n        createElementWithHTML( label, \"span\", \"text\", labelText );\n        \n        return {\n            input: input,\n            label: label\n        };\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Triggering Custom Events\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function fireCustomTriggerEvent( triggerFunction: Function, ...args : any[] ) : any {\n        let result: any = null;\n\n        if ( isDefinedFunction( triggerFunction ) ) {\n            result = triggerFunction.apply( null, [].slice.call( args, 0 ) );\n        }\n\n        return result;\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Validation\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function isDefined( value: any ) : boolean  {\n        return value !== null && value !== undefined && value.toString() !== STRING.empty;\n    }\n\n    function isDefinedObject( object: any ) : boolean {\n        return isDefined( object ) && typeof object === \"object\";\n    }\n\n    function isDefinedBoolean( object: any ) : boolean  {\n        return isDefined( object ) && typeof object === \"boolean\";\n    }\n\n    function isDefinedString( object: any ) : boolean  {\n        return isDefined( object ) && typeof object === \"string\";\n    }\n\n    function isDefinedFunction( object: any ) : boolean  {\n        return isDefined( object ) && typeof object === \"function\";\n    }\n\n    function isDefinedNumber( object: any ) : boolean  {\n        return isDefined( object ) && typeof object === \"number\";\n    }\n\n    function isDefinedArray( object: any ) : boolean  {\n        return isDefinedObject( object ) && object instanceof Array;\n    }\n\n    function isDefinedDate( object: any ) : boolean  {\n        return isDefinedObject( object ) && object instanceof Date;\n    }\n\n    function isInvalidOptionArray( array: any, minimumLength: number = 1 ) : boolean {\n        return !isDefinedArray( array ) || array.length < minimumLength;\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Default Parameter/Option Handling\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function getDefaultAnyString( value: any, defaultValue: string ) : string  {\n        return typeof value === \"string\" ? value : defaultValue;\n    }\n\n    function getDefaultString( value: any, defaultValue: string ) : string {\n        return isDefinedString( value ) ? value : defaultValue;\n    }\n\n    function getDefaultBoolean( value: any, defaultValue: boolean ) : boolean {\n        return isDefinedBoolean( value ) ? value : defaultValue;\n    }\n\n    function getDefaultNumber( value: any, defaultValue: number ) : number {\n        return isDefinedNumber( value ) ? value : defaultValue;\n    }\n\n    function getDefaultFunction( value: any, defaultValue: object ) : any {\n        return isDefinedFunction( value ) ? value : defaultValue;\n    }\n\n    function getDefaultArray( value: any, defaultValue: any[] ) : any[] {\n        return isDefinedArray( value ) ? value : defaultValue;\n    }\n\n    function getDefaultObject( value: any, defaultValue: object ) : any {\n        return isDefinedObject( value ) ? value : defaultValue;\n    }\n\n    function getDefaultStringOrArray( value: any, defaultValue: any[] ) : any[] {\n        let result: any[] = defaultValue;\n\n        if ( isDefinedString( value ) ) {\n            const values: string[] = value.toString().split( STRING.space );\n\n            if ( values.length === 0 ) {\n                value = defaultValue;\n            } else {\n                result = values;\n            }\n\n        } else {\n            result = getDefaultArray( value, defaultValue );\n        }\n\n        return result;\n    }\n\n    function getObjectFromString( objectString: any ) : any {\n        let parsed: boolean = true,\n            result: any = null;\n\n        try {\n            if ( isDefinedString( objectString ) ) {\n                result = jsonObject.parse( objectString );\n            }\n\n        } catch ( e1 ) {\n\n            try {\n                let evalResult: Function = result = eval( \"(\" + objectString + \")\" );\n\n                if ( isDefinedFunction( result ) ) {\n                    result = evalResult();\n                }\n                \n            } catch ( e2 ) {\n                if ( !_configuration.safeMode ) {\n                    console.error( _configuration.objectErrorText.replace( \"{{error_1}}\",  e1.message ).replace( \"{{error_2}}\",  e2.message ) );\n                    parsed = false;\n                }\n                \n                result = null;\n            }\n        }\n\n        return {\n            parsed: parsed,\n            result: result\n        };\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * String Handling\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function newGuid() : string {\n        const result: string[] = [];\n\n        for ( let charIndex: number = 0; charIndex < 32; charIndex++ ) {\n            if ( charIndex === 8 || charIndex === 12 || charIndex === 16 || charIndex === 20 ) {\n                result.push( STRING.dash );\n            }\n\n            const character: string = mathObject.floor( mathObject.random() * 16 ).toString( 16 );\n            result.push( character );\n        }\n\n        return result.join( STRING.empty );\n    }\n\n    function padNumber( number: number ) : string {\n        const numberString: string = number.toString();\n\n        return numberString.length === 1 ? STRING.zero + numberString : numberString;\n    }\n\n    function startsWithAnyCase( data: string, start: string ) : boolean {\n        return data.substring( 0, start.length ).toLowerCase() === start.toLowerCase();\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Storage Dates\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function toStorageDate( date: Date ) : string {\n        return date.getFullYear() + STRING.dash + padNumber( date.getMonth() + 1 ) + STRING.dash + padNumber( date.getDate() );\n    }\n\n    function getStorageDate( data: string ) : string[] {\n        return data.split( STRING.dash );\n    }\n\n    function getStorageDateYear( data: string ) : string {\n        return data.split( STRING.dash )[ 0 ];\n    }\n\n\n\t/*\n\t * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t * Public API Functions:  Helpers:  Manage Instances\n\t * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t */\n\n    function moveToPreviousYear( bindingOptions: BindingOptions, callCustomTrigger: boolean = true ) : void {\n        let render: boolean = true;\n        let year: number = bindingOptions._currentView.year;\n            \n        year--;\n\n        while ( !isYearVisible( bindingOptions, year ) ) {\n            if ( isFirstVisibleYear( bindingOptions, year ) ) {\n                render = false;\n                break;\n            }\n\n            year--;\n        }\n\n        if ( render ) {\n            bindingOptions._currentView.year = year;\n\n            renderControlContainer( bindingOptions );\n\n            if ( callCustomTrigger ) {\n                fireCustomTriggerEvent( bindingOptions.events.onBackYear, bindingOptions._currentView.year );\n            }\n        }\n    }\n\n    function moveToNextYear( bindingOptions: BindingOptions, callCustomTrigger: boolean = true ) : void {\n        let render: boolean = true;\n        let year: number = bindingOptions._currentView.year;\n\n        year++;\n\n        while ( !isYearVisible( bindingOptions, year ) ) {\n            if ( isLastVisibleYear( bindingOptions, year ) ) {\n                render = false;\n                break;\n            }\n\n            year++;\n        }\n\n        if ( render ) {\n            bindingOptions._currentView.year = year;\n\n            renderControlContainer( bindingOptions );\n\n            if ( callCustomTrigger ) {\n                fireCustomTriggerEvent( bindingOptions.events.onBackYear, bindingOptions._currentView.year );\n            }\n        }\n    }\n\n\n\t/*\n\t * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t * Public API Functions:  Helpers:  Destroy\n\t * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t */\n\n    function destroyElement( bindingOptions: BindingOptions ) : void {\n        bindingOptions._currentView.element.innerHTML = STRING.empty;\n\n        removeClass( bindingOptions._currentView.element, \"heat-js\" );\n        assignToolTipEvents( bindingOptions, false );\n\n        documentObject.body.removeChild( bindingOptions._currentView.tooltip );\n\n        if ( bindingOptions._currentView.isInFetchMode && isDefined( bindingOptions._currentView.isInFetchModeTimer ) ) {\n            clearInterval( bindingOptions._currentView.isInFetchModeTimer );\n        }\n\n        fireCustomTriggerEvent( bindingOptions.events.onDestroy, bindingOptions._currentView.element );\n    }\n\n\t/*\n\t * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t * Public API Functions:  Helpers:  Configuration\n\t * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t */\n\n    function buildDefaultConfiguration( newConfiguration: Configuration = null ) : void {\n        _configuration = !isDefinedObject( newConfiguration ) ? {} as Configuration : newConfiguration;\n        _configuration.safeMode = getDefaultBoolean( _configuration.safeMode, true );\n        _configuration.domElementTypes = getDefaultStringOrArray( _configuration.domElementTypes, [ \"*\" ] );\n\n        buildDefaultConfigurationStrings();\n        buildDefaultConfigurationArrays();\n    }\n\n    function buildDefaultConfigurationStrings() : void {\n        _configuration.stText = getDefaultAnyString( _configuration.stText, \"st\" );\n        _configuration.ndText = getDefaultAnyString( _configuration.ndText, \"nd\" );\n        _configuration.rdText = getDefaultAnyString( _configuration.rdText, \"rd\" );\n        _configuration.thText = getDefaultAnyString( _configuration.thText, \"th\" );\n        _configuration.backButtonText = getDefaultAnyString( _configuration.backButtonText, \"Back\" );\n        _configuration.nextButtonText = getDefaultAnyString( _configuration.nextButtonText, \"Next\" );\n        _configuration.refreshButtonText = getDefaultAnyString( _configuration.refreshButtonText, \"Refresh\" );\n        _configuration.exportButtonText = getDefaultAnyString( _configuration.exportButtonText, \"Export\" );\n        _configuration.lessText = getDefaultAnyString( _configuration.lessText, \"Less\" );\n        _configuration.moreText = getDefaultAnyString( _configuration.moreText, \"More\" );\n        _configuration.dateText = getDefaultAnyString( _configuration.dateText, \"Date\" );\n        _configuration.countText = getDefaultAnyString( _configuration.countText, \"Count\" );\n        _configuration.mapText = getDefaultAnyString( _configuration.mapText, \"Map\" );\n        _configuration.chartText = getDefaultAnyString( _configuration.chartText, \"Chart\" );\n        _configuration.noChartDataMessage = getDefaultAnyString( _configuration.noChartDataMessage, \"There is currently no data to view.\" );\n        _configuration.statisticsText = getDefaultAnyString( _configuration.statisticsText, \"Statistics\" );\n        _configuration.noStatisticsDataMessage = getDefaultAnyString( _configuration.noStatisticsDataMessage, \"There are currently no statistics to view.\" );\n        _configuration.unknownTrendText = getDefaultAnyString( _configuration.unknownTrendText, \"Unknown\" );\n        _configuration.importButtonText = getDefaultAnyString( _configuration.importButtonText, \"Import\" );\n        _configuration.noMapDataMessage = getDefaultAnyString( _configuration.noMapDataMessage, \"There is currently no data to view.\" );\n        _configuration.objectErrorText = getDefaultAnyString( _configuration.objectErrorText, \"Errors in object: {{error_1}}, {{error_2}}\" );\n        _configuration.attributeNotValidErrorText = getDefaultAnyString( _configuration.attributeNotValidErrorText, \"The attribute '{{attribute_name}}' is not a valid object.\" );\n        _configuration.attributeNotSetErrorText = getDefaultAnyString( _configuration.attributeNotSetErrorText, \"The attribute '{{attribute_name}}' has not been set correctly.\" );\n        _configuration.closeToolTipText = getDefaultAnyString( _configuration.closeToolTipText, \"Close\" );\n        _configuration.configurationToolTipText = getDefaultAnyString( _configuration.configurationToolTipText, \"Configuration\" );\n        _configuration.configurationTitleText = getDefaultAnyString( _configuration.configurationTitleText, \"Configuration\" );\n        _configuration.visibleMonthsText = getDefaultAnyString( _configuration.visibleMonthsText, \"Visible Months\" );\n        _configuration.visibleDaysText = getDefaultAnyString( _configuration.visibleDaysText, \"Visible Days\" );\n        _configuration.dataText = getDefaultAnyString( _configuration.dataText, \"Data\" );\n        _configuration.colorRangesText = getDefaultAnyString( _configuration.colorRangesText, \"Color Ranges\" );\n        _configuration.yearText = getDefaultAnyString( _configuration.yearText, \"Year\" );\n        _configuration.daysText = getDefaultAnyString( _configuration.daysText, \"Days\" );\n        _configuration.noDaysDataMessage = getDefaultAnyString( _configuration.noDaysDataMessage, \"There are currently no days to view.\" );\n    }\n\n    function buildDefaultConfigurationArrays() : void {\n        if ( isInvalidOptionArray( _configuration.monthNames, 12 ) ) {\n            _configuration.monthNames = [\n                \"Jan\",\n                \"Feb\",\n                \"Mar\",\n                \"Apr\",\n                \"May\",\n                \"Jun\",\n                \"Jul\",\n                \"Aug\",\n                \"Sep\",\n                \"Oct\",\n                \"Nov\",\n                \"Dec\"\n            ];\n        }\n\n        if ( isInvalidOptionArray( _configuration.dayNames, 7 ) ) {\n            _configuration.dayNames = [\n                \"Mon\",\n                \"Tue\",\n                \"Wed\",\n                \"Thu\",\n                \"Fri\",\n                \"Sat\",\n                \"Sun\"\n            ];\n        }\n    }\n\n\n\t/*\n\t * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t * Public API Functions:\n\t * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t */\n\n    const _public: PublicApi = {\n\n        /*\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         * Public Functions:  Manage Dates\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         */\n\n        addDates: function ( elementId: string, dates: Date[], type: string, triggerRefresh: boolean = true ) : PublicApi {\n            if ( isDefinedString( elementId ) && isDefinedArray( dates ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n                \n                if ( !bindingOptions._currentView.isInFetchMode ) {\n                    type = getDefaultString( type, _configuration.unknownTrendText );\n        \n                    const datesLength: number = dates.length;\n        \n                    for ( let dateIndex: number = 0; dateIndex < datesLength; dateIndex++ ) {\n                        _public.addDate( elementId, dates[ dateIndex ], type, false );\n                    }\n        \n                    if ( triggerRefresh ) {\n                        renderControlContainer( bindingOptions, true );\n                    }\n                }\n            }\n    \n            return _public;\n        },\n\n        addDate: function ( elementId: string, date: Date, type: string, triggerRefresh: boolean = true ) : PublicApi {\n            if ( isDefinedString( elementId ) && isDefinedDate( date ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n                \n                if ( !bindingOptions._currentView.isInFetchMode ) {\n                    type = getDefaultString( type, _configuration.unknownTrendText );\n        \n                    const storageDate: string = toStorageDate( date );\n        \n                    if ( !_elements_DateCounts[ elementId ].type.hasOwnProperty( type ) ) {\n                        _elements_DateCounts[ elementId ].type[ type ] = {};\n                        _elements_DateCounts[ elementId ].types++;\n                    }\n        \n                    if ( !_elements_DateCounts[ elementId ].type[ type ].hasOwnProperty( storageDate ) ) {\n                        _elements_DateCounts[ elementId ].type[ type ][ storageDate ] = 0;\n                    }\n            \n                    _elements_DateCounts[ elementId ].type[ type ][ storageDate ]++;\n        \n                    fireCustomTriggerEvent( bindingOptions.events.onAdd, bindingOptions._currentView.element );\n        \n                    if ( triggerRefresh ) {\n                        renderControlContainer( bindingOptions, true );\n                    }\n                }\n            }\n    \n            return _public;\n        },\n\n        updateDate: function ( elementId: string, date: Date, count: number, type: string, triggerRefresh: boolean = true ) : PublicApi {\n            if ( isDefinedString( elementId ) && isDefinedDate( date ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n                \n                if ( !bindingOptions._currentView.isInFetchMode && count > 0 ) {\n                    type = getDefaultString( type, _configuration.unknownTrendText );\n    \n                    const storageDate: string = toStorageDate( date );\n        \n                    if ( _elements_DateCounts[ elementId ].type.hasOwnProperty( type ) ) {        \n                        _elements_DateCounts[ elementId ].type[ type ][ storageDate ] = count;\n        \n                        fireCustomTriggerEvent( bindingOptions.events.onUpdate, bindingOptions._currentView.element );\n        \n                        if ( triggerRefresh ) {\n                            renderControlContainer( bindingOptions, true );\n                        }\n                    }\n                }\n            }\n    \n            return _public;\n        },\n\n        removeDates: function ( elementId: string, dates: Date[], type: string, triggerRefresh: boolean = true ) : PublicApi {\n            if ( isDefinedString( elementId ) && isDefinedArray( dates ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n                \n                if ( !bindingOptions._currentView.isInFetchMode ) {\n                    type = getDefaultString( type, _configuration.unknownTrendText );\n        \n                    const datesLength: number = dates.length;\n        \n                    for ( let dateIndex: number = 0; dateIndex < datesLength; dateIndex++ ) {\n                        _public.removeDate( elementId, dates[ dateIndex ], type, false );\n                    }\n        \n                    if ( triggerRefresh ) {\n                        renderControlContainer( bindingOptions, true );\n                    }\n                }\n            }\n    \n            return _public;\n        },\n\n        removeDate: function ( elementId: string, date: Date, type: string, triggerRefresh: boolean = true ) : PublicApi {\n            if ( isDefinedString( elementId ) && isDefinedDate( date ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n                \n                if ( !bindingOptions._currentView.isInFetchMode ) {\n                    type = getDefaultString( type, _configuration.unknownTrendText );\n    \n                    const storageDate: string = toStorageDate( date );\n        \n                    if ( _elements_DateCounts[ elementId ].type.hasOwnProperty( type ) && _elements_DateCounts[ elementId ].type[ type ].hasOwnProperty( storageDate ) ) {\n                        if ( _elements_DateCounts[ elementId ].type[ type ][ storageDate ] > 0 ) {\n                            _elements_DateCounts[ elementId ].type[ type ][ storageDate ]--;\n                        }\n        \n                        fireCustomTriggerEvent( bindingOptions.events.onRemove, bindingOptions._currentView.element );\n        \n                        if ( triggerRefresh ) {\n                            renderControlContainer( bindingOptions, true );\n                        }\n                    }\n                }\n            }\n    \n            return _public;\n        },\n\n        clearDate: function ( elementId: string, date: Date, type: string, triggerRefresh: boolean = true ) : PublicApi {\n            if ( isDefinedString( elementId ) && isDefinedDate( date ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n                \n                if ( !bindingOptions._currentView.isInFetchMode ) {\n                    type = getDefaultString( type, _configuration.unknownTrendText );\n    \n                    const storageDate: string = toStorageDate( date );\n        \n                    if ( _elements_DateCounts[ elementId ].type.hasOwnProperty( type ) && _elements_DateCounts[ elementId ].type[ type ].hasOwnProperty( storageDate ) ) {\n                        delete _elements_DateCounts[ elementId ].type[ type ][ storageDate ];\n        \n                        fireCustomTriggerEvent( bindingOptions.events.onClear, bindingOptions._currentView.element );\n        \n                        if ( triggerRefresh ) {\n                            renderControlContainer( bindingOptions, true );\n                        }\n                    }\n                }\n            }\n    \n            return _public;\n        },\n\n        resetAll: function ( triggerRefresh: boolean = true ) : PublicApi {\n            for ( let elementId in _elements_DateCounts ) {\n                if ( _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                    _public.reset( elementId, triggerRefresh );\n                }\n            }\n    \n            return _public;\n        },\n\n        reset: function ( elementId: string, triggerRefresh: boolean = true ) : PublicApi {\n            if ( isDefinedString( elementId ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n                \n                if ( !bindingOptions._currentView.isInFetchMode ) {\n                    bindingOptions._currentView.type = _configuration.unknownTrendText;\n        \n                    createDateStorageForElement( elementId, bindingOptions, false );\n                    fireCustomTriggerEvent( bindingOptions.events.onReset, bindingOptions._currentView.element );\n        \n                    if ( triggerRefresh ) {\n                        renderControlContainer( bindingOptions, true );\n                    }\n                }\n            }\n    \n            return _public;\n        },\n\n\n        /*\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         * Public Functions:  Export/Import\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         */\n\n        import: function ( elementId: string, files: FileList ) : PublicApi {\n            if ( isDefinedString( elementId ) && _elements_DateCounts.hasOwnProperty( elementId ) && isDefinedArray( files ) ) {\n                importFromFiles( files, _elements_DateCounts[ elementId ].options );\n            }\n    \n            return _public;\n        },\n\n        export: function ( elementId: string, exportType: string ) : PublicApi {\n            if ( isDefinedString( elementId ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                exportAllData( _elements_DateCounts[ elementId ].options, exportType );\n            }\n    \n            return _public;\n        },\n\n\n        /*\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         * Public Functions:  Manage Instances\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         */\n\n        refresh: function ( elementId: string ) : PublicApi {\n            if ( isDefinedString( elementId ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n    \n                renderControlContainer( bindingOptions, true );\n                fireCustomTriggerEvent( bindingOptions.events.onRefresh, bindingOptions._currentView.element );\n            }\n    \n            return _public;\n        },\n\n        refreshAll: function () : PublicApi {\n            for ( let elementId in _elements_DateCounts ) {\n                if ( _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                    const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n    \n                    renderControlContainer( bindingOptions, true );\n                    fireCustomTriggerEvent( bindingOptions.events.onRefresh, bindingOptions._currentView.element );\n                }\n            }\n    \n            return _public;\n        },\n\n        setYear: function ( elementId: string, year: number ) : PublicApi {\n            if ( isDefinedString( elementId ) && isDefinedNumber( year ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n                bindingOptions._currentView.year = year;\n    \n                if ( !isYearVisible( bindingOptions, bindingOptions._currentView.year ) ) {\n                    moveToNextYear( bindingOptions, false );\n                } else {\n                    renderControlContainer( bindingOptions );\n                }\n    \n                fireCustomTriggerEvent( bindingOptions.events.onSetYear, bindingOptions._currentView.year );\n            }\n    \n            return _public;\n        },\n\n        setYearToHighest: function ( elementId: string ) : PublicApi {\n            if ( isDefinedString( elementId ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n                const data: any = getCurrentViewData( bindingOptions );\n                let maximumYear: number = 0;\n    \n                for ( let storageDate in data ) {\n                    if ( data.hasOwnProperty( storageDate ) ) {\n                        maximumYear = mathObject.max( maximumYear, parseInt( getStorageDateYear( storageDate ) ) );\n                    }\n                }\n    \n                if ( maximumYear > 0 ) {\n                    bindingOptions._currentView.year = maximumYear;\n    \n                    if ( !isYearVisible( bindingOptions, bindingOptions._currentView.year ) ) {\n                        moveToNextYear( bindingOptions, false );\n                    } else {\n                        renderControlContainer( bindingOptions );\n                    }\n    \n                    fireCustomTriggerEvent( bindingOptions.events.onSetYear, bindingOptions._currentView.year );\n                }\n            }\n    \n            return _public;\n        },\n\n        setYearToLowest: function ( elementId: string ) : PublicApi {\n            if ( isDefinedString( elementId ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n                const data: any = getCurrentViewData( bindingOptions );\n                let minimumYear: number = 9999;\n    \n                for ( let storageDate in data ) {\n                    if ( data.hasOwnProperty( storageDate ) ) {\n                        minimumYear = mathObject.min( minimumYear, parseInt( getStorageDateYear( storageDate ) ) );\n                    }\n                }\n    \n                if ( minimumYear < 9999 ) {\n                    bindingOptions._currentView.year = minimumYear;\n    \n                    if ( !isYearVisible( bindingOptions, bindingOptions._currentView.year ) ) {\n                        moveToPreviousYear( bindingOptions, false );\n                    } else {\n                        renderControlContainer( bindingOptions );\n                    }\n    \n                    fireCustomTriggerEvent( bindingOptions.events.onSetYear, bindingOptions._currentView.year );\n                }\n            }\n    \n            return _public;\n        },\n\n        moveToPreviousYear: function ( elementId: string ) : PublicApi {\n            if ( isDefinedString( elementId ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                moveToPreviousYear( _elements_DateCounts[ elementId ].options );\n            }\n    \n            return _public;\n        },\n\n        moveToNextYear: function ( elementId: string ) : PublicApi {\n            if ( isDefinedString( elementId ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                moveToNextYear( _elements_DateCounts[ elementId ].options );\n            }\n    \n            return _public;\n        },\n\n        moveToCurrentYear: function ( elementId: string ) : PublicApi {\n            if ( isDefinedString( elementId ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n                bindingOptions._currentView.year = new Date().getFullYear();\n    \n                if ( !isYearVisible( bindingOptions, bindingOptions._currentView.year ) ) {\n                    moveToNextYear( bindingOptions, false );\n                } else {\n                    renderControlContainer( bindingOptions );\n                }\n    \n                fireCustomTriggerEvent( bindingOptions.events.onSetYear, bindingOptions._currentView.year );\n            }\n    \n            return _public;\n        },\n\n        getYear: function ( elementId: string ) : number {\n            let result: number = null;\n\n            if ( isDefinedString( elementId ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n    \n                result = bindingOptions._currentView.year;\n            }\n    \n            return result;\n        },\n\n        render: function ( element: HTMLElement, options: BindingOptions ) : PublicApi {\n            if ( isDefinedObject( element ) && isDefinedObject( options ) ) {\n                renderControl( renderBindingOptions( options, element ) );\n            }\n    \n            return _public;\n        },\n\n        renderAll: function () : PublicApi {\n            render();\n\n            return _public;\n        },\n\n        switchView: function ( elementId: string, viewName: string ) : PublicApi {\n            if ( isDefinedString( elementId ) && isDefinedString( viewName ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n                let view: number = null;\n    \n                if ( viewName.toLowerCase() === VIEW_NAME.map ) {\n                    view = VIEW_ID.map;\n                } else if ( viewName.toLowerCase() === VIEW_NAME.chart ) {\n                    view = VIEW_ID.chart;\n                } else if ( viewName.toLowerCase() === VIEW_NAME.days ) {\n                    view = VIEW_ID.days;\n                } else if ( viewName.toLowerCase() === VIEW_NAME.statistics ) {\n                    view = VIEW_ID.statistics;\n                }\n    \n                if ( isDefinedNumber( view ) ) {\n                    bindingOptions._currentView.view = view;\n    \n                    fireCustomTriggerEvent( bindingOptions.events.onViewSwitch, viewName );\n                    renderControlContainer( bindingOptions, false, true );\n                }\n            }\n    \n            return _public;\n        },\n\n        switchType: function ( elementId: string, type: string ) : PublicApi {\n            if ( isDefinedString( elementId ) && isDefinedString( type ) && _elements_DateCounts.hasOwnProperty( elementId ) && _elements_DateCounts[ elementId ].type.hasOwnProperty( type ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n    \n                if ( bindingOptions._currentView.type !== type ) {\n                    bindingOptions._currentView.type = type;\n                \n                    fireCustomTriggerEvent( bindingOptions.events.onTypeSwitch, type );\n                    renderControlContainer( bindingOptions );\n                }\n            }\n    \n            return _public;\n        },\n\n        updateOptions: function ( elementId: string, newOptions: BindingOptions ) : PublicApi {\n            if ( isDefinedString( elementId ) && isDefinedObject( newOptions ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_DateCounts[ elementId ].options;\n                const newBindingOptions: BindingOptions = buildAttributeOptions( newOptions );\n                let optionChanged: boolean = false;\n    \n                for ( let propertyName in newBindingOptions ) {\n                    if ( newBindingOptions.hasOwnProperty( propertyName ) && bindingOptions.hasOwnProperty( propertyName ) && bindingOptions[ propertyName ] !== newBindingOptions[ propertyName ] ) {\n                        bindingOptions[ propertyName ] = newBindingOptions[ propertyName ];\n                        optionChanged = true;\n                    }\n                }\n    \n                if ( optionChanged ) {\n                    renderControlContainer( bindingOptions, true );\n                    fireCustomTriggerEvent( bindingOptions.events.onRefresh, bindingOptions._currentView.element );\n                    fireCustomTriggerEvent( bindingOptions.events.onOptionsUpdate, bindingOptions._currentView.element, bindingOptions );\n                }\n            }\n    \n            return _public;\n        },\n\n\n        /*\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         * Public Functions:  Destroying\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         */\n\n        destroyAll: function () : PublicApi {\n            for ( let elementId in _elements_DateCounts ) {\n                if ( _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                    destroyElement( _elements_DateCounts[ elementId ].options );\n                }\n            }\n    \n            _elements_DateCounts = {};\n    \n            return _public;\n        },\n\n        destroy: function ( elementId: string ) : PublicApi {\n            if ( isDefinedString( elementId ) && _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                destroyElement( _elements_DateCounts[ elementId ].options );\n    \n                delete _elements_DateCounts[ elementId ];\n            }\n    \n            return _public;\n        },\n\n\n        /*\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         * Public Functions:  Configuration\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         */\n\n        setConfiguration: function ( newConfiguration: Configuration, triggerRefresh: boolean = true ) : PublicApi {\n            if ( isDefinedObject( newConfiguration ) ) {\n                let configurationHasChanged: boolean = false;\n            \n                for ( let propertyName in newConfiguration ) {\n                    if ( newConfiguration.hasOwnProperty( propertyName ) && _configuration.hasOwnProperty( propertyName ) && _configuration[ propertyName ] !== newConfiguration[ propertyName ] ) {\n                        _configuration[ propertyName ] = newConfiguration[ propertyName ];\n                        configurationHasChanged = true;\n                    }\n                }\n        \n                if ( configurationHasChanged ) {\n                    buildDefaultConfiguration( _configuration );\n        \n                    if ( triggerRefresh ) {\n                        _public.refreshAll();\n                    }\n                }\n            }\n    \n            return _public;\n        },\n\n\n        /*\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         * Public Functions:  Additional Data\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         */\n\n        getIds: function () : string[] {\n            const result: string[] = [];\n        \n            for ( let elementId in _elements_DateCounts ) {\n                if ( _elements_DateCounts.hasOwnProperty( elementId ) ) {\n                    result.push( elementId );\n                }\n            }\n    \n            return result;\n        },\n\n        getVersion: function () : string {\n            return \"4.0.0\";\n        }\n    };\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Initialize Heat.js\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    ( () => {\n        buildDefaultConfiguration();\n\n        documentObject.addEventListener( \"DOMContentLoaded\", function() {\n            render();\n        } );\n\n        windowObject.addEventListener( \"pagehide\", function() {\n            cancelAllPullDataTimers();\n        } );\n\n        if ( !isDefined( windowObject.$heat ) ) {\n            windowObject.$heat = _public;\n        }\n    } )();\n\n} )( document, window, Math, JSON );"]}